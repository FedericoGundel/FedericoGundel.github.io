%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Cyber Security.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: achmad rizki
%%CreationDate: 12/6/2020
%%BoundingBox: 0 0 237 392
%%HiResBoundingBox: 0 0 237 392
%%CropBox: 0 0 237 392
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-12-06T10:32+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-12-06T10:32+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-12-06T10:32+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>156</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACcAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8ANNU8kXHk3zPrPmHT/N2o&#xA;at5clvJZPNtpot0ItQ00ysWSedEab1hHuHqisF3pQHFWV+RPyg8vS6JqB0T8xdY1GzvZ5ZWn03UE&#xA;REMy8v3oT1KzcWBdjxLeAxVOv+cbdGt9N/KqxeG6e7N/c3V1K7tyUP6zQ8U3PFaQgkfzEnvir1DF&#xA;WmZVUsxAUCpJ2AAxV45+ZXnzzrr95Z6J+Tt3FqV/aEXWt31sbaW2iiJAhia4mJh5OeTMi1ag+eKv&#xA;YLb6wLeIXJU3HBfWMdeHOnxca70r0xVUxVZPPDbwSTzuI4YlLyyMaKqqKsxPgBir5089+Y/z485a&#xA;po2r/l7Z3uneV7gkabMskSG44uT9aukYj04nUDgsmxHu1MVey+RPOVxr8V9YarYtpfmTRZEg1jTy&#xA;wkUNIvKKaJxTnFMoJQ/MdsVZTiqncXFvbQSXFzKkNvCpeaaRgiIiirMzGgAA6k4q8n/PbzL5P1Xy&#xA;RceXW1Jmk1Wwl1O1urJllhWCzHqrLKytRopZFWJQteTHbpUKpr+Vfm7ydZ+TE0ddU9JfLEFtBe3O&#xA;oSLGDHcRiW2uFkchfRnR6xVoQPhIFMVejKysoZSCpFQRuCDireKuxV8lTP59svzK8weZvJljdzw2&#xA;2p3Rd7SJmt7oRNPK8MghiiWQP6EkbB0MiuUKu1RVV9Y+sfq/rem9eHP0qfH0rxpX7XbFXzf5b+qa&#xA;Z+Y/5g6F5Hs1u/MerXn1dLyVmey0+zKB7yed60PGeQqqdSwp2oVWW/lR5b/Jny/5S12w0nzTFqln&#xA;qytb6zcz3UcJASNo2CKPTMa0diG3rX7RFMVTb/nGyw0a0/KjTzpcvrC4uLqW6YvzPrCZo6Efsfu0&#xA;T4aDx71xV6jiqE1fS7XVtJvdLvAxtL+CW1uAh4sY5kMb0YdDxbrirwe6uU/5xyWOC3jl17ylr0pd&#xA;RIVjvLa8jVFesioIpEeIfCtFNV+ZxV7/AG063FvFOqsqyosiq4KsAwrRlO4PiMVVMVYZ+cf+Im/L&#xA;LzBD5esnv9UubVrZLaIFpDFORFM0ajdnWJ2IA38PDFXnv5IfmvFpXk6TSPzH1WHR9W0qQRWdnqCG&#xA;zufqAij9H926x8x9oLxBNBiqU/kXr/5n65+amr65rOnzPomrWhH6SktntoBDBIzWgt3ZE9QfvGA6&#xA;kg1J2xV9F4qlfmny5YeZfL2oaDqBdbPUYWgmaIhZFDftKSGFQd9xirxrzR+Vo/LjyxcXvljVUs9E&#xA;i064i1d9QWKeT6zT1Le5QyRsDzmVYmiQAUNVUt1VRNl+S9p+YOitqXmvUjcWtxFaDy7Pp3pQvHbw&#xA;28cbzycE9N3uvT5cGDCMbLx3AVey6RpdrpOk2Wl2YYWlhBFa24c8mEcKCNKsep4r1xVF4q+Stb/5&#xA;y6/MW01m+tbfSNKhgt7iWKOK4iuWmVUcqBIVuIxyFN6KMVY/5L/5yQ88aDZ3dlZw6NHHdXs1/I15&#xA;FdsfUvZuUgUxS04IWrQ78R3OKvVf+hh/Nv8Aypz/ABl+i7L9K/pn9EepwuPqPp+n6v1nhz9Xh/uv&#xA;7f2v+BxV6t5a/K/yV5a1jVtX0jTxBe60WN6xdnXi7c2RFYkIjP8AEQP1ADFUu0f8i/ym0myntIfL&#xA;VncR3DMzyXkYupRz24pLNzdAo2HEjx674qnvkryN5a8l6Q2keXrU2tlJM9zIjO8rNLIApYs5Y/ZR&#xA;V+QxVPsVdiqnPbW9wqrPEkqqwdVkUMAymqsK9wehxVUxV2KuxVD3Wnafduj3VrFcPEaxNLGrlT/k&#xA;lgaYqiMVdirsVSfzb5S0LzZoVxoeuQG40+54l0VmRgyMGVlZSCCCMVRHl7y/pXl7RbTRdJh+r6dY&#xA;p6dvDUtQVJNWYkkkkkk4qmGKuxVjGp/lx5W1LzPbeY7q3dr62Qp6Kuy20teXxTQD4JG+Pqw7DwGK&#xA;rfMv5Z+T/MFgllcWf1NEkWUS6efqctVBHEvCFJX4vsnFU/8A0Vpv6P8A0d9Vj+oceH1biPT41r9n&#xA;57/PFUVirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVY0v5j+Tm86HyWt+D5iCl&#xA;vqvCTjUR+sUEnH0+Yi+MryrTFXimtfnp5w8sfmZrFpczfpDy9aXzxT6fJGoeKBauxhkENrIrrChd&#xA;A/qI4DUcncqvo2GaKeGOaJg8Uqh43HQqwqCPmMVX4q8q/PT87ofy6sba0sII73zFqCs9tBKT6UMS&#xA;nj60oUhmBb4VUEVod9t1XztpX/ORH553+u28djqhvbq5kWOHTVtLZkkLHaMKsYf6Q1ffFX1R+Wf5&#xA;maZ5xtrmz9e3fX9IESazFaMXtvVdalrZ2J9SMMGTluKjYleLMqzbFWGfmv8AmZY/l35bh1u8spb9&#xA;bi6SzighZUPN45JQWZui0hPY4q8D1X/nJ380fMV0bvyboP1TTNI/0rUUWNr4vEAdriQIgjjIBPwA&#xA;Nt9rbFWd/lj/AM5Q2vnDzJp3ly80F7G/vy0a3MM4lh5JG0hJVljZQeHicVe6Yql/mLWYND8v6nrU&#xA;8bSwaXaT3ssSU5slvG0rKtaCpC7VxV8xeb/+cw9YvbCW08r6OulzyAqNRuZRcSID3jiCKgYeLFh7&#xA;YqifLH/OZF5DZxQeZdBF3cIAJL2ylEXOg+0YXUgE96PT2GKvqG3mWeCOZAQkqq6g9aMKiuKr8VfM&#xA;/mn/AJzFMQubTy/5eK3SM8cd3fTAopUkcjDGPi/5GDFUi8l/85feZdOtRa+adNTW2DErfwutrNQm&#xA;tHRUaJ6dBQLt1rir3P8A5Xd5S/5Vl/j6rfU6en9R5L631qlfq1fs8/4Yq+W213VdP/M1vM9y98NS&#xA;tfMEk97qyOrWf1FJBE6rReJbgGT7fEr8NMVZ/wCUfzq/Kgprbav5UvtYub3Vb6+WVbC0uWS1vrmT&#xA;0I5GeaoP+lslOlXoCa4q9+/Lnz7oHnXQH1LRLe4s7azuHsJbO6iWGWGWFVJQojOoAV1pQ+3XbFWU&#xA;4q+Pf+cqNB1y8/N2xit7eS6fU7G3j02KMFi5V3Ro1A7h9z88Ved6hqFj5TsZ9E0SdLnW7lDDretw&#xA;kMiIwo9lZOP2O00w/vPsr8FS5V6f/wA4b2V8/nbW75AfqMOmehO37PqzXEbRA+/GGTAr63xV4v8A&#xA;85aaVdX35VJPAjOum6jb3dxxFaRmOWCp9uU64q8T/LQTWnk+3m0Qwy3l1dzPqcckdrMRPAY4rVJP&#xA;rMsTQRfVrq5PqpvuR8lUP+R2kRSf85AWcOi/6Rpmn3d9JFOG5gWkaSpHIWHUNyQA9ycVfbmKpH57&#xA;0251TyP5h0y1Utc32mXltAoFSZJrd0UU+bYq/P8A8pX+jaZrJn121+u6csUqXOnFRynJWixBzvAe&#xA;VD6q/ElKgHoSrevtb635rlGhRc4L6WKPTbSOFYCodVSK34KSCybR8qnmRyJqcVforZQtBZwQuQXi&#xA;jRGI6VVQDTAqtir84PNuk3GkebNW0y9Ro5bS9milBHxUWQ7jsajceOFU3lsfIehSNdNff4od/j0+&#xA;wiWW1hVGFVN+54uHHeGFj/xlHcK+s/q2tf8AQutf0ba/pT9D/W/0Z9Wi+r9PX9P6tx4f3e3Gla/5&#xA;WKpV5l/5xe8nat5sXVrcJaabcyPNqll+/MjySEsxgcSqkQJPQo1PltiqG1//AJxO8kyWIXy7I9le&#xA;mRfUlvXmuIjEASVCRSW55cuJry7dPBV6l5F8ieXvJOh/ofQoTFbNK1xOzOztJM6qrOS5b9lFFPAY&#xA;qyHFUg86+TNM82aLcaddu9rNLFJDBqNvxW5gWagkEcjBiqyBQsgH2l2OKvAE/wCcL5frg9TzWps+&#xA;W/GyIl4+G83GuKvevIP5f+XPI2gpo2hQskPL1Li4kPKaeUgAySMABWg6AADsMVZJiqje2VnfWc1n&#xA;eQpcWlwjRTwSqGR0YUZWU7EEYq+f/M3/ADh35cvdUFzoGszaTYyNWaymi+tBAe0MheNqeAfl88Ve&#xA;p/lr+UvlH8vrGSHRoWlvbgAXmpXBDTy0341ACogPRVHzqd8VZnirsVeM/mZ/zjF5S83X8+r6XcNo&#xA;WsXDF7lo0EttM5+07Q1Qq7dyjAdyCd8VRv5W/wDOOXlHyPeR6tcTPrWuxf3N3MgjihNKFoYQWo3+&#xA;UzMfCmKvWcVdirzT80/yE8ofmBL+kJmfTNdChBqduA3qBRRRPEaCTiNgahu1abYqxb8v/wDnFDyn&#xA;oF9FqXmG8bzBdQNzhtmjENoCDUF4+UjSU924+KnFXumKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KvP/NP58fld5ZuLuz1HWA+o2bNHNYW8Us0vqKSClVX0w237TDFWIeUf+cs/&#xA;y+1aWeLXIptAdZGFtJIGuYpIq/AWaFSyPT7SleI/mOKvXfL3mTQvMelx6rod7Hf6fKWVLiImnJTR&#xA;lIIBBHgRiqZYqxjzd+ZvkTyfNFB5j1ePT55ozLFCySSOyAkcgsSu1KqRirBk/wCcoPy+4RXskV3H&#xA;os13NYx6kY6/vIYopS7QqTJ6ZE1B+1t9nwVZ95R/MTyX5wFx/hvVI9RNqFNwqLIjIHrxJWRUbfie&#xA;2KsixVBa1rWl6JpV1q2q3CWmn2aGW4uJPsqo+W5JOwA3J2GKvE5P+cmNf1OUz+UfIOoaxo6uUW+d&#xA;njMpU0KxrHFMvL25MfbFWc/lj+c/lzz49xYRwTaV5gsgWvNHu9pVVSFZkag5qrGh2BHcdMVegYq7&#xA;FXn35q/nV5Y/LlLSLUYpr3Ur0F4LG34hhGpoZHZiAq12Hcn5HFUZ+V35s+WvzF0u4u9JWS3urNlS&#xA;9sLjj6kfMEowKkqyNxND7dBirNcVdirx7zP/AM5S/lz5e8wX+h3Frqd3c6dM9tcy2sMJi9WJisiq&#xA;ZZ4mPFgR9n5Yqlf/AEOJ+Wf/AFbNa/5EWn/ZVirPv+Vw+Tv+Vb/8rB5XH6Dp/demPrPqer6Ppeny&#xA;48/U2+1x71pvir4w/ORGX81fNYYFT+k7g0IpsXJB+kHFVv5k2vlO1vtLTy7ZNZxy6fBdXKs8j1Ny&#xA;PViDeo8v7xYWUSMpVS1eKKOqr6q/5xWhlj/KCzd1os13dPGfFRJwr/wSkYq9exV8j/8AOZCt/jjR&#xA;GoeJ0ygPaouJK/rxV5Ncf+SzsP8AttXv/UJa4Ve2/wDOF6t+kfNbUPEQ2YJ7VLTU/VgV9SYq8P8A&#xA;+cqpnk8v+WdJnnNtpOp6xFHqU4qAI1U/aPSg5F6f5PtiryLSfqmo63PDrGk207y+Y08vR2V0rkQW&#xA;ASUCz05VZBDJGyKvKteTJvu9VUL+X2q6sfM/5a66XdtYuNYn0eWZzWWbTozaorSt1fit3NEGP7KB&#xA;ei4q+18Vdir5S/5zM0qzj8xeXdWWcm9urSW1ktqbLFbS+oj1/wAprlh9GKp3/wA4ZabZjTfMupic&#xA;tevNb20ltTZIkRnR69+bOw9uPvir6SxV2KviHVJ4I/P35hrZ3Gn2nmRtdnOnT6oIPQ+qi6ufraxv&#xA;dK0CSljCQWp8IcA1NCqx3Ub7yUvm/VpHgtriyk0uSKNoVkS2/SxsVDzWyQ+nxjN6GMYpwCnoBSir&#xA;1H/1zf8A6Pf+7jirOvz0/wCcdH856k/mXy3PFba7IireWk9VhueA4q4cA8JOAC9KGg6bkqvJ/J3/&#xA;ADin+Yuq6kE8wJHoWmxPSeZ5I55nUHf0Y4mcGvizAd9+mKvrzy55f0zy7odlomlxelYWESwwITU0&#xA;HVmPdmNWY9ziqY4q89/OX8oNN/MfRIYGn+pavYF306+pyUcwA8Ui90fivTcEVHcFV4Kf+cafzQk8&#xA;uWnl429qkkWq3NxJfG4Q24gkt7dFkFP3xq0bCnp126dMVfQv5S/lZpX5deXG0y1lN3fXTibUb9l4&#xA;GWQCihVqeKIPsivie+Ks3xVi35lfl/pfnzync+X79zCXIms7tRyaC4QHhIFqOWzFWFd1JG3XFXzr&#xA;cflb+celTwWd/wCVYPNDadeNfabrEV60RaYpDHykpNC7ALax/aRW2+1ir0D8nfyQ8wad5hTzj55k&#xA;i/Slssi6Po0DB4bITM7OfhqlQZW4qhIFeVS3RV7nirsVfN//ADkL+UP5neePPEN/otjFcaTaWcdv&#xA;bM1xFGeXJ3kJSRlNeT0+QGKpj/zjb+Vv5jeRde1g+YLOO20rUbVPiSeKUm4hk/djjGzbcJJN8Ve/&#xA;4q7FXinnn/nHPQ9d85/pe00u1+pahKJ9akkvrqCf1JJCZngijhljqy/F8TirHtiqX+Zf+cVvKyR2&#xA;/wDhiwjnkLH60NT1C5hUJQcfTMEM1T1rWmKvTP8AlVfkv/AP+BvqH+4Dj/vP6snP1PU9X1PVrz5e&#xA;p8VfwptirL8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqWJ5l0N/Mb+Wlu1Ou&#xA;R2v197Li3IW3MR+pypwpzYDrXFUt0v8AMTyvqOjaxrSTSwaboNzcWmpT3EMkfB7SnqkKRyZRXsK+&#xA;1cVT+yvLa+sre9tZBLa3UaTQSgEBo5FDK1DQ7g4qrYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq8H88/ml5E9f8A5WB5V1iSTXdAT6nf2aW8vp3tg90sTQSeqI0Wkrh0kVqj+VumKvPPJXn/&#xA;AF3XJbjyb53vLjSND1iutajPHZxwS3FtJG09xHWBI2EV01G9RUZiKiu5OKvpfyP5z8oeZrGdPLFx&#xA;69npMi2Tj0pYghRAVVRKqEgLtirJMVSjWPOPlDRLhLbWtc0/TLiRfUSG8uobd2QkjkFkZSRUHfFW&#xA;A/m3+cXlfTfy81W78u+ZbOfVn9O1tH06eG6lSSdt2Cxs3EiJJGDNTceOKpN/zj3+YdvrOseYfLY1&#xA;TVb+KzEN3pa6/RtQERUR3QkkVpAVWYpxBbo3zxV7dirsVfIn52/m1Fq3nzWLSBNWjh8uW8thYm0u&#xA;jbJDqUFyyPfOqK/JOXCMAkbdwSKKvo78qvPUHnfyRp+vRo8UrgwXaSUqJ4fhkIK7EMfiHzxVluKu&#xA;xV4J/wA5K/mXBpd9ovkz6tezi8kg1DU47KY27XNmWmhFmroGessqAmnYe+yqa/8AONf5j2nmPQr3&#xA;QI1vjJobcopr+VZ5DbXEjmGMyAISYgvDcdKUp0Cr2bFXYq+R/P3mu0/xvrySfmz5g0x4b+5hOm2l&#xA;nciC39KVk9GMx3sSME48eQUcuvfFUh/xVp//AJefzP8A9Il7/wB5DFXsv+JI/wDoXb6//jjUfS9T&#xA;6v8A4s+qP9f4/W+HH0vX9Sv+6+fq1pviqZ/mlbT+edfn/KSwlg02CTTP03fXzxPI4ZbtBEkaKY03&#xA;f4pCSa123xV5l5L8oajoEOq/mbpfmSDX5vJKXGliyubdoo3isFELIkkUslFNsSYWp1Klh1xV9PaJ&#xA;fW2o6TaapbxiKPUYYrsLQA/vo1YcthU0IGKo3FXhH5xfkP5v83+dH1/RbjSWt5oLaOSLUxNzR7Zi&#xA;aJ6cUwKOD8VaV6Yqwab/AJxS/MufT5LNr3QLdP3LKYHuhzeD1FBcm36lZ2q252AxV6V+UX5Q+ffL&#xA;nn/VvOPnDVbLULzUbL6n/ojzSMxLwnm5ljhpxW3CilcVezYq7FXyh5u/Iv8AOZPOfm+98vQwy6Z5&#xA;lmuvUlW5ijL211ci59NlkZWBBUKdvHscVe3/AJFeR9Z8l/l5aaNrPprqPrTXE0UTB1j9VqqnMbMQ&#xA;BvTbFXoGKuxV4J+ev5WfmRrv5i6F5v8AJ0UM0ml20EaB5kidJ7a5lnViHKBkb1QNj41xVGf845/l&#xA;b548nX/mLUvNUcUU2rej6arMszs6NI8jsU5KKmTxrir2/FXYq+ZfNf8AzjR+Yd95n80X+lXuhSaf&#xA;5hu5rkG/jZrmJZpmmpGxtpzCwLleUbioxVi3/Qnf5mf9XPRf+R93/wBkuKvXf+VHa7/yoP8A5V59&#xA;ftf0zz9f6z+8+q+p9a+scOXH1OPHblw+jFXsvBeXOg5UpypvTwriqjb2FjbRyRW9vFDHM7yzJGiq&#xA;rySmsjsABVnJqxPXFVcAAUGwGKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV85a958/OA63ffUvP3k2wsxPItvZvfWZeK&#xA;NWIVH9RGfkAPiqeuKoD/AB1+dn/lyfJf/SdYf9UsVe/+RdR1PUvKWm3uqXVlfahLEfrN3pkgmtJG&#xA;VivKJ12INN6d6jFU9xV4x+bXm38xrDzSLPy75t8s6DYxwIxttUureK7Z3qS7pOrkL/LSmKsK/wAd&#xA;fnZ/5cnyX/0nWH/VLFXrH5NeYPNurabqCeZdc0XXrm2lT0brRLiKfikimqTiEKimq/Dtvv4Yq9Ex&#xA;V5j+e/m1/Luh6cyeZ5/Kxurll+t21guoPIESvp8XkjCDetcVeKf8rduP/Lv6p/4T0P8A1XxV6B+T&#xA;/nnUNT84WtnL59vPMcV3BM40250eKzHFF5CYypM7xj+XktG6Yq95xVjP5mX9/p/kHXLuwvo9MvIr&#xA;V/Q1CXlwhY0XmeKyNtXainfFXyC3mLzoUIH5qESEbN+ltXpX4amnoex+/wBsKqaeYPPyOrj82QSp&#xA;BAbUtWYbeIMJB+nFX2j5Pvrq/wDKWiX93PHdXV3YWs9xdQAiKWSSFXeSMMFPFmNRUDbtgVN8VfFe&#xA;t+bvOl5rF9cy/mYkDS3EjehbalqdtFGnMUjSKK24LxUEbePtuqlP6e8+/wDl2f8Auaav/wBUcKvT&#xA;P8Y+dP8AlQnL/HVr+kP05+jv8Q+td8/q31b6x6Hr+h6/rct+VPs/tYFYVrX5E/mUNW18N5QfUWur&#xA;qZ9P1GO7jRUVpGIcJzHMMCDRgMVSGP8AIP8AM+1JudW8vXMGmW6tLeTJLASsUalmb4WlbYD9lGPg&#xA;rHYqvqn/AJx8lu1/LOysLrT59Mk0yWa1FrdchPx5eqGk5Rw7t6u3EUpTetcVekYq+Zvz2/Kjzrrn&#xA;5ojXbDy42v6NLZxRtHHcJbn1EDKVZiyuCDRuhBGKvLF/5x4/N24vgo8tS2lvLLQFpoHWJGbuRJyI&#xA;UfTir27/AJxU8ta7oUGvpc2E8NjcSRhrq7RreQ3EBZTCkDAseCufUflTn8K8qFsVe/Yq8j/5yM/L&#xA;fzP530HSIvL8EN1c6ddmaa1mkEXNHTjszFRsRv8AEPbFXhd//wA42/mzqOpRzny5Y6bbngskNldR&#xA;hAoPxMBLNM3Knv8ARiqXflrquo6f+anlttOuSNTOttp11pAtT+5sW9G2cmQ1LD0FZaHdOHI9a4q+&#xA;4cVYN+eKM35SeaQoLH6i5oBXYEEn6Bir5P8AJWtwaf5SDO7/ALn1pGij1rSrN2oS1Etbmxup6nt8&#xA;Z5HpiqRecPPVlr2mR2dvb6hCyTLKWvLy0uYyFVhQJBYWThvi68yPbwVfcP5ZRyR/lt5TjkUpImja&#xA;erowoQRaxggg9CMVZLir89fLdzpum+fbgazFAsfK+tg97CtxBb3UsUsVvPNC6yK6QzsrsCjbDocK&#xA;pt5r1O+HlO4tfM9zp2pa7c3NudJe0+pTz29rCsnqM1zZg8Yn5RpFCz0oCQqgCoVH/Vrj/oWP1PTb&#xA;h/jH1OVDTh+jfT5fLn8PzxV9y4q7FXYq7FXYq7FXYq7FXYq7FVJbS0WYzLDGsxqTKFAbfr8VK4qq&#xA;4qtkjjljeKVA8bgq6MAVZSKEEHqDirGz+V/5aEknylopJ3JOn2v/AFTxVuP8svy2jkWSPynoySIQ&#xA;yOun2oII3BBEexGKslAAFBsBirsVSC//AC+8g6hdy3t/5a0q8vJjymuZ7K3lldvFndCxPzxVD/8A&#xA;Krvyz/6lHRf+4daf9U8VTf8Aw9oH6J/Q36MtP0Rx4fo30I/q3GvKno8eFK79MVTDFXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+cNe/Pz86otcv4NL8nommw3EkVqbjTtRnlaJH4h&#xA;2eJ40PIfFsv9qqUn/nIf/nIWv/KFQH3/AEZqf/VfFXtv5P8AnTzN5v8AKb6j5l0htG1WC6e2ktzF&#xA;LCsiqiOsqJNVwp9Tj1O4O+Ks4xV4v+bn5ufmX5a81Jo/lXy0L6yjgjln1Ca0vLpGeQ/Yj+rNGBwX&#xA;rUn6O6rBJP8AnIX/AJyDVqL5MgcUBqNL1Mbkbjebtir0L8lfzW/Mfzbrl7pnm7y3+iY4rU3Ntex2&#xA;t1bRllkRDE31hpKsfU5Ch7HFXsOKsO/MWDzC6aZNY66fLuh20k83mHU0MCyR26W7mIqbhJEp63EN&#xA;t0xViP8A0Mz5E5TQ6Vp+ueYYbJR9Z1CwsleMAD7bl3gK1oTXgBiq7T/PsX5g6ppmp/l/5nnjezur&#xA;T9M+Wp0t4gbETg3UrLLG0rH0241jkIrTocVeu4q7FXmPmH/nIn8vdJ1o6JZi98waojFJLbRoBclX&#xA;X7S8meNWIpvwJpiqv5Q/P38vvMur/oUSXOjayX9KPTtWiFtK79kBDSR8j2UtyPYYq9HxV2KsH8//&#xA;AJzeQvI0q2us3jS6k4DLplonrXHFuhZaqqV7c2Fe2KsUn/5yf8oxSNayaFrdpqRQSW9pf28Nr6i9&#xA;2MjTMsaKtWZ3ooAJxV63+kdP+ofpH6zF+j/T9f65zX0fS48vU9SvHhx35VpTFXwLbWWoeYfzMl0L&#xA;9JT2q3+pzwLOhL8OUr0PBpIgQPDl8qnbFWd/nZ5A0vy3oVprOhzX1iouPqc1tP649R3T1w/KeZmH&#xA;CNlTiiMOQarYq9W/5xBuJ5/y11J5pGlYazOAzsWNPqtttU4q9xxV8af85OyarL+cbWVjJMZZ7azj&#xA;hgidhykcFVAAI3JOKoi58lxP5fOj2+jasNSEQitfMReEW02oetxEYvfr5s5A7fuBEg5g7/aBxVEf&#xA;84iXV9J+ZmqRXM0r8NHnrHIzGjC7th0bvir67xV5F/zk35T81+Y/y9WLy+HuPqVytzfadECZJ4VV&#xA;h8IG7mNiG4d+vUDFXzfpGsST+TdP0fTNUsdEurFj+kZL2SW2uIZ0upZ/rdsy/aMkckUT8FaUejQD&#xA;ixqqyT8otB1zzV+d58z+WI5bPQbO/e6vNR4enG0Jr6kZUfCHuQT+7B+EN4DFX2TiqSed9K1bV/J+&#xA;saZo9z9T1S8tJYbO4qV4yOpA+IbrXpyG464q+J/Ky3/ldte8v6kkOj+Zne39GPVg0UEkUaTpJbu4&#xA;IUBnmhnQufSYxDlUUBVU7/R9Y816t5c8t6C517zDY231e81K2LPGKzvJEpnYCqW8bhTKdh9lSVVS&#xA;VX3Xo1te2ukWNrf3P1y+gt4orq7px9aVECySU7c2BOKozFXxD530PzZ5N/OHUrzWYZL26vv0hcaV&#xA;qRIAYzwSrb3auxCIbR3R2rT0+HYAHFUl1iCwtPLcujw3sWveYNUubYW01nLJdTGKP1GkUkAhY5JH&#xA;ThD9tmXm4U8FCr23/lV35nf9C0/4c9aT9M+v9e/RFR6n1KvP6jX+bl+94+PwYqynWf8AnFn8udS1&#xA;271mO81XTbi7keZ4rKeFIleUkvw5wyOobkduVO3TFUJN/wA4l+QZk4Ta5r8qcUTi91bMOMdeC0Nt&#xA;0Wpp4Yq9J8geQPL3kXQBoehLILUytcTSzvzlllcKpdyAq14oo+FQNsVZJirzn8w/yG8k+e9ah1vU&#xA;pb2y1OGNYjcWEqRl1jJKchJHMKrXYihxVKB/zjX5eGrSauPNfmf9Kyp6cl99eh9ZkpTiZPq/Ij2x&#xA;VPPy0/I/yX+Xl9dX+jNd3N9dRfV3ub2RHZYiwdkQRJCtGZFJqK7Yq9BxVinnfytr+sXuh6loWpw6&#xA;bqGi3E0yfWYGuIZBPbvbsGRJITsJCRviqYXnknylqUyXWr6Hpuo6goUvdz2cLuXAHxAyK7DcbfFi&#xA;qUeZ/JWt6pfaJBpuoWml+W9LvLO+m06O1b1Xks7j1+CSpKiIj0Ap6fvvirMsVdiqA1by/oOsxrHq&#xA;+m2uoxpXil3BHOor1oJFbriq/S9E0bSYTBpVhbafAaExWsSQoabD4YwoxVGYq7FUtvfLXl++vWvr&#xA;7Tre7unt/qjyzxrITb8/U9L4wRx5/FTFVmleUvKukTGfSdGsdPnavKW1toYHPLrVo1U74qmuKuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoLWta0zRdLuNU1O4jtbK1QvLNK6oo&#xA;p0FWIFWOwHc4q86/Jz89dN/MOfULOa3h0rUbZla1tDcCR54XUszIrLExMXGj0BGKvUsVdirTMqqW&#xA;YgKBUk7AAYq8hsf+cjfLl1+aUnk6lqukBmhg1/62vpvMsavT7Ij4s5Ma0kNSPfFXrNrfWV36wtbi&#xA;O4NvI0Fx6Tq/pypQtG/Eni61FVO+Kq2KuxVqSSOONpJGCRoCzuxoABuSSegGKsL8tfnL+W3mbzBJ&#xA;oGi6zHdamvIxx8JEWXgCX9F3VVk4gV+E9NxUb4qzXFXYqxK7/NPyTa6gllJqClhNfW93NssdrJps&#xA;fq3AuC5Vkov2aA8u22Ksl07ULPUtPtdRspBNZ3sUdxbTAEB4pVDo1GAIqpB3GKojFXYq8d/L787P&#xA;NPnLX106HQrGxg5mQG6vZUnms45mhlntk+rlJuDRspAb7Wxp1xVm/wCY3mrWPK2hNrNlBYS2lsGa&#xA;/k1C6ktQi7cBGI4ZzIztsF61pStcVed/9DB+Yv8AAH+If8KN+mf09+gP0J6z+pz+q/WeX91z5/s8&#xA;ONcVYn/zmdq14o8saSkpWzk+tXU0IOzSJ6aRsw/yQz0+ZxV86+WdUu9J8xaZqdnMYLmzuopopgac&#xA;Sjg7+3j7YVfpLgV2KvMf+cktVvNO/J7W3tJTDLc+hau6mjGOaZFlUf66VU+xOKviKyskkRrq6YxW&#xA;MRo7j7Tt19OOvVj3PRRuewJV90/kB9Sf8pNAntLWK0W4SZ5I4a0aQTuhZmJLM54fEScCvQsVSHzt&#xA;5xsPKmi/pG5ikurieaOz03T4BWa6vJzSGCP3cjr2FcVfOn5yXv5m6Df6Ze6/rMrSa7BK1zogmEei&#xA;KPWiRrBkaiSAW7tzkZqk7g7VKr0vRrf/AJWH5y0LXtLtRp/kPya8o0W44GJtQnZBFWCP4QltFwFD&#xA;T4unjxVevYq4ioIBoT3Hb78VfOP5n2nn3yt5O1jW7H6wI7PWgl1dauLC+m1GxeJbZZZljt1X0vUC&#xA;rGr1ajV22GKpn+S35/edPOF7Dpl95Ve6t1dIbjWtNBS3t69DMklUG254yVp0U9MVe94q7FXnXmvy&#xA;T+XuneRYKXo8v2egSy3eka7FIXlsriaZncxuxdpBJK5Vot+X2aVpRVHappPljWvzA0pNX1U3d7pt&#xA;il/pfl2UBITIZHU6gVIHqyLTiqn+760q1cVR/wDgfyT63qegvqfpv9Of3z/8db0vT5/a68P919Pb&#xA;FWAfmX/zjovnbW7vXr7zFeS3XArYWBWJIYkUEpArUPFeXVuJO9TU4q838l/84pahq/1tvMsN35bS&#xA;EhbYfWrW+eY78jSKNAqjxLb+GKvpjyloV3oPl6z0i61OfV5LNfTW+uQqysgPwK3ACvFaLU7nviqb&#xA;4q8u/Oz8p9d/MP8AQ1na6w1lpUFwrajaNT0+ADVnVQvKSXcIqswUdcVeSzf84xa1e+dW0mazuLXy&#xA;vByFtraXls0YhAJTja+l6vqM2zAnrUlj3Ve5flX+WDfl9p1zpkGt3Wp6dKwkt7W5RFWBzX1DGV3+&#xA;OoqK0rv1JxVnOKsa8/eSLbzfpNraPeTadeadeQ6lpl/AFZ4Lu25elJwcFXA5mqnFUt8r/lhBYS3N&#xA;/wCZtTm826zeRxwT3WoRxiBYojyVIbUco4xy+I9TXvirNlVVUKoAUCgA2AAxVvFXYqlfmny9Z+Y/&#xA;LepaFebW+pW8lu70DFC6kK4B7o1GHuMVYHof5Mv5UtNBuPKV9HZ63pkUdrq8joVtdUty5eYXESli&#xA;sgZ2aJxUr9k1HRV6hirsVfOn5b+UfzAsda0nTvN/la7vdF0S6lOipHNaizgkuLmSZ7+4Qy8ppE9X&#xA;93t8K9ByOKvSfzk0i+1DSrF9K0S81DXLWVptL1XTpbeG40+ZVFJKzunNJPsvH0YdabYq8u/wl+cv&#xA;/Kv/ANJ/oNf8Z/4z/wARfUucPDh9S9L1ePq8ePrfs8q/Rir6TxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KoM6zpAa+U31uG0wBtSUypW2Vk9UGff92DH8fxU+HfpiqpHqWnSS+lH&#xA;dQvKIVuTGsilvQckJLQGvBipo3Q0xVuxv7G/tIryxuIru0nHKG5gdZI3XxV1JUj5Yqr4q7FUCmv6&#xA;E+qto6ajatqyL6j6cJozchP5jDy5ge9MVR2KuxV2KoHUtf0LS5LeLU9RtbGS7b07VLmaOFpX/ljD&#xA;svI+wxVHYq7FXYqh9Q1LTtNs5L3UbqGys4RWW5uJFiiQeLO5Cj6Tiq6zvbO9tYruynjurWZecNxC&#xA;6yRup7q6kqR8sVVsVdiqA1vXtF0LT5NR1m+h0+yj+3PcOsa18BXqT2A3OKsd8m/m9+XnnG4ktdC1&#xA;iKa8RmUWkoaCZwv7cccoRnWm9V6d6YqzHFXiP5yeT/zD1nWr2Xyh5dSC4urN9OvNcXUII1vbO5hK&#xA;Sw3FnIi1MfL92/Oq0+QCqD/MX8u/zNvNc0t9Gsfruhy6HY6V5htIb2KymnFrLNI9uJ3DlI39ReRV&#xA;dxUYq9m8rQSW/l3T4JNLj0VooEQ6TDIs0dvxFPTWRAqsB4gYqmmKvCP+cqvN3nby3o2lnQtWOnWG&#xA;ovJb3SW6cLlmVeVRcV5ItNqIAfftir51f8vtbttTlt49bsf8W2ksrz6VHcuLtJIas9LjiLczKyNV&#xA;BNyrir6b/wCcXvNXnLzN5Nvr7zDqn6Shtbz6jZeqg+sL6cSSO0kwP7wN6y05DlsfiOKvZsVYX+cm&#xA;seY9F/LnWNX8v3iWOoWMXrevJEJjwBowQMeIY12ZgR7Yq+TfL/lfT/NVqPMHn7zHLDfavIVsZ7i8&#xA;tkkS3QvGbyRbp+csInQxCOPifhah2AKr0H/nGnXfzGh/MC68lahqzNpOk2s1xcWFx/pK0jeOJFtp&#xA;a1jUmZXHElSv7O9cVfUuKqV0ty1rMtq6x3LIwgkkUuiyEHizKCpYA9RUfPFXw4t75i/MfXtRvfPG&#xA;uyPpGklloZ4LOE3MnMW9tbiYiCJ5fSc8uLHijVqcVVPJOo+e/J3nzSNJ8tay1rpmv30NvayepDfW&#xA;cizTrAWkSJ2hd4y1G4lW91rir7kFaCu57kbYq7FXxr+eWg3OsfnNreiza1cPJFa/W9Ht7stNGZWh&#xA;Wc2kXHisCFeXAkU2HI78sVYt5w8qaZb2y65ayRaNDaaRoUlvDCsrtdajfWUdw4U8m9M8RJIXO2wH&#xA;2jXFX076Oq/9C1/Wv03qP6S/w5+lf0p64+t+r9W+ucPW48uHL93/ADcNuVfixVjf5yflfe+d9c1t&#xA;tP8AL62Q0uya5l1wpyu9UvFteVtaWgJoIlbisj0qT8I91Vvnb8otd8z+Z9M1RbFJpNE8uaelvaX6&#xA;1s7q5Saf17OU1DIxjYUcH4TTFXsfkyO1j8raYlrpT6HAsC8dIkADWx/ajNPBq79+uKpzirw//nKr&#xA;yf5n8yeWtFXQdNn1KS0vHa4itl5uqvHQNwHxEVHUYq8Xm8ufmhIZ9SH5fXy+abqF7e51oRTlT6sf&#xA;pSTrb8eK3MiFuUnKlSWCq3xYq95/5xd8q+YvLf5eXlprthLp11c6pNcxW844SGIwQRhip3WrRN1+&#xA;fTFXr+KsR/NzR9S1n8tfMWmaZA1zf3Nm629ulOTsCG4rWm9BsMVfLGl+VPP0eiwabqfkXzHK0FlJ&#xA;pRk0+ZbNJbKS8kvuEsc1leFm9eY/ErLsAKdSVXo3/OPXlXz1D+amu+Ztf0G50ezudOe3j+soyfE0&#xA;0HpopYKXIjgPJgKfKoGKvo/FXYq+LNK8kfmT5f1DVbO58nazewnVLfUbW80t/q8iXOnm4WGSOZ7a&#xA;8jeMrdMacN/h36gqo7y55G/MG9/MDyaYvKOq6Xo2j6nDdyzaifWkAN2tzcSS3AhtI6fD8KiMH5nF&#xA;X2LirsVfPnnXy1oOsfmO3m46F5tS9gUwSx2+mrJBMY42gEiFnVqFKUxVgWi6NZed/LE1rqejeZIv&#xA;qtxZ20cum6etwnpaTaGyiV2dkpKUb96KUDdPAKvoD65pP/Kqv0V+gNd/RX1T9Bfoz6of0l9X9D6v&#xA;z4cunp/t164q/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:410e7c94-9dc0-1d4d-b0c8-6dfc1e7cc012</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:410e7c94-9dc0-1d4d-b0c8-6dfc1e7cc012</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:821ac28e-528e-4ccd-947b-0aab6134114a</stRef:instanceID>
            <stRef:documentID>xmp.did:cd70c444-9696-ca4a-ab95-e82f5310ac82</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:721fb6a2-0673-d547-8479-bd53b7744088</stEvt:instanceID>
                  <stEvt:when>2019-09-14T18:12:27+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:410e7c94-9dc0-1d4d-b0c8-6dfc1e7cc012</stEvt:instanceID>
                  <stEvt:when>2020-12-06T10:32+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>270.000000</stDim:w>
            <stDim:h>430.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -392 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 392 li
237 392 li
237 0 li
cp
clp
221 371 mo
221 369.9 221.9 369 223 369 cv
224.1 369 225 369.9 225 371 cv
225 371.74 224.6 372.38 224 372.73 cv
224 385 li
226 385 li
226 377 li
226 376.73 226.11 376.48 226.29 376.29 cv
227.07 375.51 li
227.02 375.35 227 375.18 227 375 cv
227 373.9 227.9 373 229 373 cv
230.1 373 231 373.9 231 375 cv
231 376.1 230.1 377 229 377 cv
228.82 377 228.64 376.98 228.48 376.93 cv
228 377.41 li
228 385 li
230.78 385 li
232.56 385 234 383.65 234 382 cv
234 371.618 li
234.553 371.895 li
234.696 371.966 234.849 372 234.999 372 cv
235.366 372 235.719 371.798 235.895 371.447 cv
236.142 370.953 235.941 370.353 235.447 370.105 cv
223.447 364.105 li
223.363 364.063 223.27 364.06 223.18 364.042 cv
223.058 364.019 222.942 364.019 222.82 364.042 cv
222.73 364.06 222.637 364.063 222.553 364.105 cv
210.553 370.105 li
210.059 370.353 209.858 370.953 210.105 371.447 cv
210.354 371.941 210.952 372.141 211.447 371.895 cv
212 371.618 li
212 382 li
212 383.65 213.44 385 215.22 385 cv
218 385 li
218 377.41 li
217.52 376.93 li
217.36 376.98 217.18 377 217 377 cv
215.9 377 215 376.1 215 375 cv
215 373.9 215.9 373 217 373 cv
218.1 373 219 373.9 219 375 cv
219 375.18 218.98 375.35 218.93 375.51 cv
219.71 376.29 li
219.89 376.48 220 376.73 220 377 cv
220 385 li
222 385 li
222 372.73 li
221.4 372.38 221 371.74 221 371 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.0823529 .0823529 .0862745 rgb
f
236 388 mo
225.815 388 li
225.514 387.152 224.848 386.486 224 386.185 cv
224 385 li
222 385 li
222 386.185 li
221.152 386.486 220.486 387.152 220.185 388 cv
210 388 li
209.447 388 209 388.447 209 389 cv
209 389.553 209.447 390 210 390 cv
220.185 390 li
220.599 391.161 221.698 392 223 392 cv
224.302 392 225.401 391.161 225.815 390 cv
236 390 li
236.553 390 237 389.553 237 389 cv
237 388.447 236.553 388 236 388 cv
cp
f
171 383 mo
169.897 383 169 382.103 169 381 cv
169 379.897 169.897 379 171 379 cv
172.103 379 173 379.897 173 381 cv
173 382.103 172.103 383 171 383 cv
cp
167 378 mo
167 384 li
175.002 384 li
175 378 li
173.4 378 168.59 378 167 378 cv
cp
f
177 384 mo
177 385.103 176.103 386 175 386 cv
167 386 li
165.897 386 165 385.103 165 384 cv
165 378 li
165 376.897 165.897 376 167 376 cv
167 373.794 168.794 372 171 372 cv
172.153 372 173.241 372.489 173.984 373.343 cv
174.348 373.76 174.304 374.392 173.887 374.754 cv
173.473 375.115 172.839 375.074 172.477 374.657 cv
172.113 374.239 171.575 374 171 374 cv
169.897 374 169 374.897 169 376 cv
171.171 376 172.829 376 175 376 cv
176.103 376 177 376.897 177 378 cv
177 384 li
cp
183.447 372.105 mo
176.42 368.592 178.461 369.612 171.447 366.105 cv
171.166 365.965 170.834 365.965 170.553 366.105 cv
163.539 369.612 165.58 368.592 158.553 372.105 cv
158.059 372.353 157.858 372.953 158.105 373.447 cv
158.354 373.941 158.953 374.141 159.447 373.895 cv
160 373.618 li
160 387 li
160 388.654 161.346 390 163 390 cv
179 390 li
180.654 390 182 388.654 182 387 cv
182 373.618 li
182.553 373.895 li
183.052 374.143 183.648 373.938 183.895 373.447 cv
184.142 372.953 183.941 372.353 183.447 372.105 cv
cp
f
119 374 mo
117.897 374 117 374.897 117 376 cv
121 376 li
121 374.897 120.103 374 119 374 cv
cp
f
119 383 mo
117.897 383 117 382.103 117 381 cv
117 379.897 117.897 379 119 379 cv
120.103 379 121 379.897 121 381 cv
121 382.103 120.103 383 119 383 cv
cp
115 378 mo
115 384 li
123.002 384 li
123 378 li
121.271 378 116.591 378 115 378 cv
cp
f
125 384 mo
125 385.103 124.103 386 123 386 cv
115 386 li
113.897 386 113 385.103 113 384 cv
113 378 li
113 376.897 113.897 376 115 376 cv
115 373.794 116.794 372 119 372 cv
121.206 372 123 373.794 123 376 cv
124.103 376 125 376.897 125 378 cv
125 384 li
cp
131.447 372.105 mo
124.42 368.592 126.461 369.612 119.447 366.105 cv
119.166 365.965 118.834 365.965 118.553 366.105 cv
111.539 369.612 113.58 368.592 106.553 372.105 cv
106.059 372.353 105.858 372.953 106.105 373.447 cv
106.352 373.941 106.952 374.141 107.447 373.895 cv
108 373.618 li
108 387 li
108 388.654 109.346 390 111 390 cv
127 390 li
128.654 390 130 388.654 130 387 cv
130 373.618 li
130.553 373.895 li
131.052 374.143 131.648 373.938 131.895 373.447 cv
132.142 372.953 131.941 372.353 131.447 372.105 cv
cp
f
63.4604 377.909 mo
63.3105 377.93 63.1567 377.945 63 377.959 cv
63 378.938 li
63 380.994 64.2339 382.816 66.1431 383.58 cv
67 383.923 li
67.8574 383.58 li
69.7661 382.816 71 380.994 71 378.938 cv
71 377.96 li
68.9673 377.79 67.7236 377.115 66.9976 376.504 cv
66.3271 377.065 65.2183 377.682 63.4604 377.909 cv
cp
f
73 378.938 mo
73 381.816 71.2729 384.368 68.6001 385.438 cv
67.3711 385.929 li
67.252 385.977 67.126 386 67 386 cv
66.874 386 66.748 385.977 66.6289 385.929 cv
65.4004 385.438 li
62.7271 384.368 61 381.816 61 378.938 cv
61 377 li
61 376.447 61.4478 376 62 376 cv
62.4253 376 62.8296 375.976 63.2017 375.927 cv
65.4624 375.633 66.0923 374.574 66.1177 374.529 cv
66.3008 374.209 66.6479 373.958 67.021 374.014 cv
67.3896 374.023 67.7295 374.223 67.8945 374.553 cv
67.9165 374.59 68.7607 376 72 376 cv
72.5522 376 73 376.447 73 377 cv
73 378.938 li
cp
79.4473 372.105 mo
72.4204 368.592 74.4614 369.612 67.4473 366.105 cv
67.166 365.965 66.834 365.965 66.5527 366.105 cv
59.5386 369.612 61.5796 368.592 54.5527 372.105 cv
54.0586 372.353 53.8584 372.953 54.1055 373.447 cv
54.352 373.941 54.9526 374.141 55.4473 373.895 cv
56 373.618 li
56 387 li
56 388.654 57.3457 390 59 390 cv
75 390 li
76.6543 390 78 388.654 78 387 cv
78 373.618 li
78.5527 373.895 li
79.0527 374.143 79.6499 373.937 79.8945 373.447 cv
80.1416 372.953 79.9414 372.353 79.4473 372.105 cv
cp
f
26 374 mo
20.4141 374 li
26.707 367.707 li
27.0977 367.316 27.0977 366.684 26.707 366.293 cv
26.3164 365.902 25.6836 365.902 25.293 366.293 cv
19 372.586 li
19 367 li
19 366.447 18.5522 366 18 366 cv
17.4478 366 17 366.447 17 367 cv
17 375 li
17 375.13 17.0264 375.26 17.0771 375.382 cv
17.1787 375.627 17.3735 375.821 17.6182 375.923 cv
17.7402 375.974 17.8696 376 18 376 cv
26 376 li
26.5522 376 27 375.553 27 375 cv
27 374.447 26.5522 374 26 374 cv
cp
f
12 366 mo
11.4478 366 11 366.447 11 367 cv
11 372.586 li
4.70703 366.293 li
4.31641 365.902 3.68359 365.902 3.29297 366.293 cv
2.90234 366.684 2.90234 367.316 3.29297 367.707 cv
9.58594 374 li
4 374 li
3.44775 374 3 374.447 3 375 cv
3 375.553 3.44775 376 4 376 cv
12 376 li
12.1304 376 12.2598 375.974 12.3818 375.923 cv
12.6265 375.821 12.8213 375.627 12.9229 375.382 cv
12.9736 375.26 13 375.13 13 375 cv
13 367 li
13 366.447 12.5522 366 12 366 cv
cp
f
27 381 mo
27 380.447 26.5522 380 26 380 cv
18 380 li
17.8701 380 17.7402 380.026 17.6182 380.077 cv
17.3735 380.179 17.1787 380.373 17.0771 380.618 cv
17.0264 380.74 17 380.87 17 381 cv
17 389 li
17 389.553 17.4478 390 18 390 cv
18.5522 390 19 389.553 19 389 cv
19 383.414 li
25.293 389.707 li
25.4883 389.902 25.7441 390 26 390 cv
26.2559 390 26.5117 389.902 26.707 389.707 cv
27.0977 389.316 27.0977 388.684 26.707 388.293 cv
20.4141 382 li
26 382 li
26.5522 382 27 381.553 27 381 cv
cp
f
12.3818 380.077 mo
12.2598 380.026 12.1299 380 12 380 cv
4 380 li
3.44775 380 3 380.447 3 381 cv
3 381.553 3.44775 382 4 382 cv
9.58594 382 li
3.29297 388.293 li
2.90234 388.684 2.90234 389.316 3.29297 389.707 cv
3.48828 389.902 3.74414 390 4 390 cv
4.25586 390 4.51172 389.902 4.70703 389.707 cv
11 383.414 li
11 389 li
11 389.553 11.4478 390 12 390 cv
12.5522 390 13 389.553 13 389 cv
13 381 li
13 380.87 12.9736 380.74 12.9229 380.618 cv
12.8213 380.373 12.6265 380.179 12.3818 380.077 cv
cp
f
236.923 312.618 mo
236.821 312.373 236.627 312.179 236.382 312.077 cv
236.26 312.026 236.13 312 236 312 cv
228 312 li
227.447 312 227 312.447 227 313 cv
227 313.553 227.447 314 228 314 cv
233.586 314 li
225.293 322.293 li
224.902 322.684 224.902 323.316 225.293 323.707 cv
225.488 323.902 225.744 324 226 324 cv
226.256 324 226.512 323.902 226.707 323.707 cv
235 315.414 li
235 321 li
235 321.553 235.447 322 236 322 cv
236.553 322 237 321.553 237 321 cv
237 313 li
237 312.87 236.974 312.74 236.923 312.618 cv
cp
f
212.414 314 mo
218 314 li
218.553 314 219 313.553 219 313 cv
219 312.447 218.553 312 218 312 cv
210 312 li
209.87 312 209.74 312.026 209.618 312.077 cv
209.373 312.179 209.179 312.373 209.077 312.618 cv
209.026 312.74 209 312.87 209 313 cv
209 321 li
209 321.553 209.447 322 210 322 cv
210.553 322 211 321.553 211 321 cv
211 315.414 li
219.293 323.707 li
219.488 323.902 219.744 324 220 324 cv
220.256 324 220.512 323.902 220.707 323.707 cv
221.098 323.316 221.098 322.684 220.707 322.293 cv
212.414 314 li
cp
f
236 330 mo
235.447 330 235 330.447 235 331 cv
235 336.586 li
226.707 328.293 li
226.316 327.902 225.684 327.902 225.293 328.293 cv
224.902 328.684 224.902 329.316 225.293 329.707 cv
233.586 338 li
228 338 li
227.447 338 227 338.447 227 339 cv
227 339.553 227.447 340 228 340 cv
236 340 li
236.13 340 236.26 339.974 236.382 339.923 cv
236.627 339.821 236.821 339.627 236.923 339.382 cv
236.974 339.26 237 339.13 237 339 cv
237 331 li
237 330.447 236.553 330 236 330 cv
cp
f
219.293 328.293 mo
211 336.586 li
211 331 li
211 330.447 210.553 330 210 330 cv
209.447 330 209 330.447 209 331 cv
209 339 li
209 339.13 209.026 339.26 209.077 339.382 cv
209.179 339.627 209.373 339.821 209.618 339.923 cv
209.74 339.974 209.87 340 210 340 cv
218 340 li
218.553 340 219 339.553 219 339 cv
219 338.447 218.553 338 218 338 cv
212.414 338 li
220.707 329.707 li
221.098 329.316 221.098 328.684 220.707 328.293 cv
220.316 327.902 219.684 327.902 219.293 328.293 cv
cp
f
182.707 336.293 mo
175.908 329.494 li
181.274 327.962 li
181.692 327.842 181.985 327.467 181.999 327.032 cv
182.014 326.598 181.745 326.204 181.336 326.059 cv
167.336 321.059 li
166.976 320.927 166.566 321.02 166.293 321.293 cv
166.02 321.566 165.929 321.973 166.059 322.336 cv
171.059 336.336 li
171.201 336.735 171.578 337 172 337 cv
172.011 337 172.021 337 172.032 336.999 cv
172.467 336.985 172.842 336.692 172.962 336.274 cv
174.494 330.908 li
181.293 337.707 li
181.684 338.098 182.316 338.098 182.707 337.707 cv
183.098 337.316 183.098 336.684 182.707 336.293 cv
cp
f
167 319 mo
167.553 319 168 318.553 168 318 cv
168 315 li
168 314.447 167.553 314 167 314 cv
166.447 314 166 314.447 166 315 cv
166 318 li
166 318.553 166.447 319 167 319 cv
cp
f
162.465 316.051 mo
162.074 315.66 161.441 315.66 161.051 316.051 cv
160.66 316.441 160.66 317.074 161.051 317.465 cv
163.172 319.586 li
163.367 319.781 163.623 319.879 163.879 319.879 cv
164.135 319.879 164.391 319.781 164.586 319.586 cv
164.977 319.195 164.977 318.563 164.586 318.172 cv
162.465 316.051 li
cp
f
164 322 mo
164 321.447 163.553 321 163 321 cv
160 321 li
159.447 321 159 321.447 159 322 cv
159 322.553 159.447 323 160 323 cv
163 323 li
163.553 323 164 322.553 164 322 cv
cp
f
163.172 324.414 mo
161.051 326.535 li
160.66 326.926 160.66 327.559 161.051 327.949 cv
161.441 328.34 162.074 328.34 162.465 327.949 cv
164.586 325.828 li
164.977 325.438 164.977 324.805 164.586 324.414 cv
164.195 324.023 163.563 324.023 163.172 324.414 cv
cp
f
170.828 319.586 mo
172.949 317.465 li
173.34 317.074 173.34 316.441 172.949 316.051 cv
172.559 315.66 171.926 315.66 171.535 316.051 cv
169.414 318.172 li
169.023 318.563 169.023 319.195 169.414 319.586 cv
169.805 319.977 170.438 319.977 170.828 319.586 cv
cp
f
130.707 316.793 mo
128.664 314.75 125.342 314.744 123.293 316.793 cv
120.743 319.343 li
120.353 319.733 120.353 320.366 120.743 320.757 cv
121.134 321.147 121.767 321.147 122.157 320.757 cv
124.707 318.207 li
125.93 316.986 128.07 316.986 129.293 318.207 cv
130.558 319.472 130.558 321.528 129.293 322.793 cv
123.293 328.793 li
122.166 329.917 120.418 330.063 119.057 329.094 cv
117.739 328.156 117.287 326.159 118.338 324.665 cv
118.656 324.213 118.547 323.59 118.095 323.271 cv
117.644 322.953 117.019 323.064 116.702 323.515 cv
115.008 325.925 115.697 329.173 117.903 330.727 cv
118.906 331.435 119.947 331.749 121.009 331.748 cv
122.353 331.748 123.688 331.227 124.707 330.207 cv
130.707 324.207 li
132.751 322.163 132.751 318.837 130.707 316.793 cv
cp
f
115.843 331.243 mo
113.293 333.793 li
112.028 335.057 109.972 335.057 108.707 333.793 cv
107.443 332.528 107.443 330.472 108.707 329.207 cv
114.707 323.207 li
115.795 322.12 117.53 321.904 118.943 322.906 cv
120.26 323.844 120.713 325.84 119.662 327.335 cv
119.345 327.787 119.454 328.411 119.906 328.728 cv
120.356 329.047 120.982 328.936 121.299 328.485 cv
123.151 325.847 122.042 322.433 119.997 321.211 cv
117.965 319.768 115.119 319.968 113.293 321.793 cv
107.293 327.793 li
105.249 329.837 105.249 333.163 107.293 335.207 cv
108.315 336.229 109.658 336.74 111 336.74 cv
112.342 336.74 113.685 336.229 114.707 335.207 cv
117.257 332.657 li
117.647 332.267 117.647 331.634 117.257 331.243 cv
116.866 330.853 116.233 330.853 115.843 331.243 cv
cp
f
67 314 mo
67.5498 314 68 314.45 68 315 cv
68 315.55 67.5498 316 67 316 cv
66.4502 316 66 315.55 66 315 cv
66 314.45 66.4502 314 67 314 cv
cp
77.707 317.293 mo
77.3164 316.902 76.6836 316.902 76.293 317.293 cv
74.0986 319.487 li
72.978 318.043 71.4292 316.948 69.6401 316.4 cv
69.8599 315.98 70 315.51 70 315 cv
70 313.35 68.6499 312 67 312 cv
65.3501 312 64 313.35 64 315 cv
64 315.51 64.1401 315.98 64.3599 316.4 cv
60.6802 317.53 58 320.96 58 325 cv
58 328.53 li
58 330.91 56.6802 333.04 54.5498 334.11 cv
54.1401 334.31 53.9199 334.78 54.0303 335.23 cv
54.1299 335.68 54.54 336 55 336 cv
57.5859 336 li
56.293 337.293 li
55.9023 337.684 55.9023 338.316 56.293 338.707 cv
56.6836 339.098 57.3164 339.098 57.707 338.707 cv
77.707 318.707 li
78.0977 318.316 78.0977 317.684 77.707 317.293 cv
cp
f
79.4502 334.11 mo
77.3198 333.04 76 330.91 76 328.53 cv
76 325 li
76 324.04 75.8501 323.12 75.5601 322.26 cv
61.8198 336 li
79 336 li
79.46 336 79.8701 335.68 79.9697 335.23 cv
80.0801 334.78 79.8599 334.31 79.4502 334.11 cv
cp
f
67 340 mo
68.8584 340 70.4106 338.721 70.8579 337 cv
63.1421 337 li
63.5894 338.721 65.1416 340 67 340 cv
cp
f
14 315 mo
14 314.448 14.4487 314 15 314 cv
15.5513 314 16 314.448 16 315 cv
16 315.552 15.5513 316 15 316 cv
14.4487 316 14 315.552 14 315 cv
cp
27.4473 334.105 mo
25.3208 333.043 24 330.905 24 328.528 cv
24 325 li
24 320.955 21.3174 317.527 17.6392 316.396 cv
17.8618 315.978 18 315.507 18 315 cv
18 313.346 16.6543 312 15 312 cv
13.3457 312 12 313.346 12 315 cv
12 315.507 12.1382 315.978 12.3608 316.396 cv
8.68262 317.527 6 320.955 6 325 cv
6 328.528 li
6 330.905 4.6792 333.043 2.55273 334.105 cv
2.13818 334.313 1.92041 334.778 2.02686 335.229 cv
2.1333 335.681 2.53613 336 3 336 cv
11 336 li
19 336 li
27 336 li
27.4639 336 27.8667 335.681 27.9731 335.229 cv
28.0796 334.778 27.8618 334.313 27.4473 334.105 cv
cp
f
15 340 mo
16.8584 340 18.4106 338.721 18.8579 337 cv
11.1421 337 li
11.5894 338.721 13.1416 340 15 340 cv
cp
f
217 274 mo
217 270.69 219.69 268 223 268 cv
224.298 268 225.494 268.414 226.473 269.113 cv
225.02 270.566 li
224.423 270.216 223.738 270 223 270 cv
220.79 270 219 271.79 219 274 cv
219 274.738 219.216 275.423 219.566 276.02 cv
218.113 277.473 li
217.414 276.494 217 275.298 217 274 cv
cp
232.707 264.293 mo
232.316 263.902 231.684 263.902 231.293 264.293 cv
229.37 266.216 li
227.443 265.442 225.291 265 223 265 cv
216.51 265 211.04 268.35 209.07 273.54 cv
209.02 273.66 209 273.78 209 273.9 cv
209 274 li
209 274.12 209.02 274.24 209.07 274.36 cv
210.11 277.105 212.131 279.329 214.758 280.828 cv
213.293 282.293 li
212.902 282.684 212.902 283.316 213.293 283.707 cv
213.488 283.902 213.744 284 214 284 cv
214.256 284 214.512 283.902 214.707 283.707 cv
232.707 265.707 li
233.098 265.316 233.098 264.684 232.707 264.293 cv
cp
f
223 278 mo
225.21 278 227 276.21 227 274 cv
227 273.64 226.95 273.29 226.86 272.96 cv
221.96 277.86 li
222.29 277.95 222.64 278 223 278 cv
cp
f
236.93 273.54 mo
236.01 271.13 234.34 269.12 232.17 267.65 cv
228.41 271.41 li
228.79 272.19 229 273.07 229 274 cv
229 277.31 226.31 280 223 280 cv
222.07 280 221.19 279.79 220.41 279.41 cv
217.7 282.12 li
219.37 282.66 221.18 282.95 223.08 282.95 cv
229.54 282.95 234.98 279.62 236.93 274.46 cv
236.98 274.34 237 274.22 237 274.1 cv
237 273.9 li
237 273.78 236.98 273.66 236.93 273.54 cv
cp
f
171 273 mo
170.448 273 170 273.448 170 274 cv
170 274.553 169.553 275 169 275 cv
168.447 275 168 274.553 168 274 cv
168 272.346 169.346 271 171 271 cv
171.553 271 172 271.447 172 272 cv
172 272.553 171.553 273 171 273 cv
cp
171 270 mo
168.794 270 167 271.794 167 274 cv
167 276.206 168.794 278 171 278 cv
173.206 278 175 276.206 175 274 cv
175 271.794 173.206 270 171 270 cv
cp
f
171 280 mo
167.691 280 165 277.309 165 274 cv
165 270.691 167.691 268 171 268 cv
174.309 268 177 270.691 177 274 cv
177 277.309 174.309 280 171 280 cv
cp
184.935 273.543 mo
182.964 268.354 177.494 265 171 265 cv
164.506 265 159.036 268.354 157.065 273.543 cv
157.022 273.657 157 273.777 157 273.898 cv
157 274 li
157 274.121 157.022 274.241 157.065 274.355 cv
159.048 279.576 164.549 282.949 171.079 282.949 cv
177.537 282.949 182.976 279.616 184.935 274.457 cv
184.978 274.343 185 274.223 185 274.102 cv
185 273.898 li
185 273.777 184.978 273.657 184.935 273.543 cv
cp
f
119 273 mo
118.449 273 118 273.448 118 274 cv
118 274.553 117.552 275 117 275 cv
116.448 275 116 274.553 116 274 cv
116 272.346 117.346 271 119 271 cv
119.552 271 120 271.447 120 272 cv
120 272.553 119.552 273 119 273 cv
cp
119 270 mo
116.794 270 115 271.794 115 274 cv
115 276.206 116.794 278 119 278 cv
121.206 278 123 276.206 123 274 cv
123 271.794 121.206 270 119 270 cv
cp
f
119 280 mo
115.691 280 113 277.309 113 274 cv
113 270.691 115.691 268 119 268 cv
122.309 268 125 270.691 125 274 cv
125 277.309 122.309 280 119 280 cv
cp
119 265 mo
112.506 265 107.037 268.354 105.065 273.543 cv
105.022 273.657 105 273.777 105 273.898 cv
105 274.102 li
105 274.223 105.022 274.343 105.065 274.457 cv
107.037 279.646 112.506 283 119 283 cv
125.494 283 130.964 279.646 132.935 274.457 cv
132.978 274.343 133 274.223 133 274.102 cv
133 273.898 li
133 273.777 132.978 273.657 132.935 273.543 cv
130.964 268.354 125.494 265 119 265 cv
cp
f
106 266 mo
106.552 266 107 265.553 107 265 cv
107 262 li
110 262 li
110.552 262 111 261.553 111 261 cv
111 260.447 110.552 260 110 260 cv
106 260 li
105.448 260 105 260.447 105 261 cv
105 265 li
105 265.553 105.448 266 106 266 cv
cp
f
132 260 mo
128 260 li
127.447 260 127 260.447 127 261 cv
127 261.553 127.447 262 128 262 cv
131 262 li
131 265 li
131 265.553 131.447 266 132 266 cv
132.553 266 133 265.553 133 265 cv
133 261 li
133 260.447 132.553 260 132 260 cv
cp
f
110 286 mo
107 286 li
107 283 li
107 282.447 106.552 282 106 282 cv
105.448 282 105 282.447 105 283 cv
105 287 li
105 287.553 105.448 288 106 288 cv
110 288 li
110.552 288 111 287.553 111 287 cv
111 286.447 110.552 286 110 286 cv
cp
f
132 282 mo
131.447 282 131 282.447 131 283 cv
131 286 li
128 286 li
127.447 286 127 286.447 127 287 cv
127 287.553 127.447 288 128 288 cv
132 288 li
132.553 288 133 287.553 133 287 cv
133 283 li
133 282.447 132.553 282 132 282 cv
cp
f
58 264 mo
58.5522 264 59 264.447 59 265 cv
59 265.553 58.5522 266 58 266 cv
57.4478 266 57 265.553 57 265 cv
57 264.447 57.4478 264 58 264 cv
cp
61 264 mo
61.5522 264 62 264.447 62 265 cv
62 265.553 61.5522 266 61 266 cv
60.4478 266 60 265.553 60 265 cv
60 264.447 60.4478 264 61 264 cv
cp
64 264 mo
64.5522 264 65 264.447 65 265 cv
65 265.553 64.5522 266 64 266 cv
63.4478 266 63 265.553 63 265 cv
63 264.447 63.4478 264 64 264 cv
cp
81 268 mo
81 266 li
81 263.794 79.2056 262 77 262 cv
57 262 li
54.7944 262 53 263.794 53 266 cv
53 268 li
81 268 li
cp
f
63 280 mo
62.4487 280 62 280.448 62 281 cv
62 281.552 62.4487 282 63 282 cv
63.5513 282 64 281.552 64 281 cv
64 280.448 63.5513 280 63 280 cv
cp
f
68.2793 274 mo
65.7207 274 li
65.3872 275 li
68.6128 275 li
68.2793 274 li
cp
f
71 280 mo
70.4487 280 70 280.448 70 281 cv
70 281.552 70.4487 282 71 282 cv
71.5513 282 72 281.552 72 281 cv
72 280.448 71.5513 280 71 280 cv
cp
f
71 284 mo
69.6982 284 68.5986 283.161 68.1846 282 cv
65.8159 282 li
65.4014 283.161 64.3018 284 63 284 cv
61.3457 284 60 282.654 60 281 cv
60 279.346 61.3457 278 63 278 cv
64.3018 278 65.4014 278.839 65.8159 280 cv
68.1841 280 li
68.5986 278.839 69.6982 278 71 278 cv
72.6543 278 74 279.346 74 281 cv
74 282.654 72.6543 284 71 284 cv
cp
62 275 mo
63.2793 275 li
64.0513 272.684 li
64.1875 272.275 64.5693 272 65 272 cv
69 272 li
69.4307 272 69.8125 272.275 69.9487 272.684 cv
70.7207 275 li
72 275 li
72.5522 275 73 275.447 73 276 cv
73 276.553 72.5522 277 72 277 cv
69.8145 277 64.1577 277 62 277 cv
61.4478 277 61 276.553 61 276 cv
61 275.447 61.4478 275 62 275 cv
cp
53 270 mo
53 282 li
53 284.206 54.7944 286 57 286 cv
77 286 li
79.2056 286 81 284.206 81 282 cv
81 270 li
53 270 li
cp
f
14 278 mo
13 278 li
13 279 li
13 279.736 13.4053 280.375 14 280.722 cv
14 278 li
cp
f
15 275 mo
14.4487 275 14 275.448 14 276 cv
16 276 li
16 275.448 15.5513 275 15 275 cv
cp
f
6 264 mo
6.55225 264 7 264.447 7 265 cv
7 265.553 6.55225 266 6 266 cv
5.44775 266 5 265.553 5 265 cv
5 264.447 5.44775 264 6 264 cv
cp
9 264 mo
9.55225 264 10 264.447 10 265 cv
10 265.553 9.55225 266 9 266 cv
8.44775 266 8 265.553 8 265 cv
8 264.447 8.44775 264 9 264 cv
cp
12 264 mo
12.5522 264 13 264.447 13 265 cv
13 265.553 12.5522 266 12 266 cv
11.4478 266 11 265.553 11 265 cv
11 264.447 11.4478 264 12 264 cv
cp
29 268 mo
29 266 li
29 263.794 27.2056 262 25 262 cv
5 262 li
2.79443 262 1 263.794 1 266 cv
1 268 li
29 268 li
cp
f
20.4473 281.105 mo
20.9414 281.353 21.1416 281.953 20.8945 282.447 cv
20.6499 282.937 20.0527 283.143 19.5527 282.895 cv
17.6729 281.955 li
16.9629 282.598 16.0308 283 15 283 cv
13.9692 283 13.0371 282.598 12.3271 281.955 cv
10.4473 282.895 li
9.94727 283.143 9.3501 282.937 9.10547 282.447 cv
8.8584 281.953 9.05859 281.353 9.55273 281.105 cv
11.2256 280.269 li
11.1958 280.18 11.166 280.092 11.1421 280 cv
10 280 li
9.44775 280 9 279.553 9 279 cv
9 278.447 9.44775 278 10 278 cv
11 278 li
11 277.618 li
9.55273 276.895 li
9.05859 276.647 8.8584 276.047 9.10547 275.553 cv
9.35254 275.06 9.95264 274.859 10.4473 275.105 cv
12.0112 275.888 li
12.0371 275.211 12.2891 274.597 12.6924 274.106 cv
12.293 273.707 li
11.9023 273.316 11.9023 272.684 12.293 272.293 cv
12.6836 271.902 13.3164 271.902 13.707 272.293 cv
14.4678 273.054 li
14.6411 273.022 14.8179 273 15 273 cv
15.1821 273 15.3589 273.022 15.5322 273.054 cv
16.293 272.293 li
16.6836 271.902 17.3164 271.902 17.707 272.293 cv
18.0977 272.684 18.0977 273.316 17.707 273.707 cv
17.3076 274.106 li
17.7109 274.597 17.9629 275.211 17.9888 275.888 cv
19.5527 275.105 li
20.0483 274.859 20.6475 275.06 20.8945 275.553 cv
21.1416 276.047 20.9414 276.647 20.4473 276.895 cv
19 277.618 li
19 278 li
20 278 li
20.5522 278 21 278.447 21 279 cv
21 279.553 20.5522 280 20 280 cv
18.8579 280 li
18.834 280.092 18.8042 280.18 18.7744 280.269 cv
20.4473 281.105 li
cp
1 270 mo
1 282 li
1 284.206 2.79443 286 5 286 cv
25 286 li
27.2056 286 29 284.206 29 282 cv
29 270 li
1 270 li
cp
f
16 278 mo
16 280.722 li
16.5947 280.375 17 279.736 17 279 cv
17 278 li
16 278 li
cp
f
214 212 mo
214.553 212 215 212.447 215 213 cv
215 213.553 214.553 214 214 214 cv
213.447 214 213 213.553 213 213 cv
213 212.447 213.447 212 214 212 cv
cp
217 212 mo
217.553 212 218 212.447 218 213 cv
218 213.553 217.553 214 217 214 cv
216.447 214 216 213.553 216 213 cv
216 212.447 216.447 212 217 212 cv
cp
220 212 mo
220.553 212 221 212.447 221 213 cv
221 213.553 220.553 214 220 214 cv
219.447 214 219 213.553 219 213 cv
219 212.447 219.447 212 220 212 cv
cp
237 216 mo
237 214 li
237 211.794 235.206 210 233 210 cv
213 210 li
210.794 210 209 211.794 209 214 cv
209 216 li
237 216 li
cp
f
219.461 223.909 mo
219.311 223.93 219.157 223.945 219 223.959 cv
219 224.938 li
219 226.994 220.233 228.816 222.143 229.58 cv
223 229.923 li
223.857 229.58 li
225.767 228.816 227 226.994 227 224.938 cv
227 223.96 li
224.967 223.79 223.724 223.115 222.997 222.504 cv
222.327 223.065 221.218 223.682 219.461 223.909 cv
cp
f
229 224.938 mo
229 227.816 227.272 230.368 224.6 231.438 cv
223.371 231.929 li
223.252 231.977 223.126 232 223 232 cv
222.874 232 222.748 231.977 222.629 231.929 cv
221.4 231.438 li
218.728 230.368 217 227.816 217 224.938 cv
217 223 li
217 222.447 217.447 222 218 222 cv
218.425 222 218.83 221.976 219.202 221.927 cv
221.462 221.633 222.092 220.574 222.118 220.529 cv
222.297 220.217 222.636 220.013 222.994 220.013 cv
223.003 220.013 223.012 220.013 223.021 220.014 cv
223.39 220.023 223.729 220.223 223.895 220.553 cv
223.917 220.59 224.761 222 228 222 cv
228.553 222 229 222.447 229 223 cv
229 224.938 li
cp
209 218 mo
209 230 li
209 232.206 210.794 234 213 234 cv
233 234 li
235.206 234 237 232.206 237 230 cv
237 218 li
209 218 li
cp
f
162 212 mo
162.553 212 163 212.447 163 213 cv
163 213.553 162.553 214 162 214 cv
161.447 214 161 213.553 161 213 cv
161 212.447 161.447 212 162 212 cv
cp
165 212 mo
165.553 212 166 212.447 166 213 cv
166 213.553 165.553 214 165 214 cv
164.447 214 164 213.553 164 213 cv
164 212.447 164.447 212 165 212 cv
cp
168 212 mo
168.553 212 169 212.447 169 213 cv
169 213.553 168.553 214 168 214 cv
167.447 214 167 213.553 167 213 cv
167 212.447 167.447 212 168 212 cv
cp
185 216 mo
185 214 li
185 211.794 183.206 210 181 210 cv
161 210 li
158.794 210 157 211.794 157 214 cv
157 216 li
185 216 li
cp
f
179 223 mo
163 223 li
162.447 223 162 222.553 162 222 cv
162 221.447 162.447 221 163 221 cv
179 221 li
179.553 221 180 221.447 180 222 cv
180 222.553 179.553 223 179 223 cv
cp
179 227 mo
163 227 li
162.447 227 162 226.553 162 226 cv
162 225.447 162.447 225 163 225 cv
179 225 li
179.553 225 180 225.447 180 226 cv
180 226.553 179.553 227 179 227 cv
cp
170 231 mo
163 231 li
162.447 231 162 230.553 162 230 cv
162 229.447 162.447 229 163 229 cv
170 229 li
170.553 229 171 229.447 171 230 cv
171 230.553 170.553 231 170 231 cv
cp
157 218 mo
157 230 li
157 232.206 158.794 234 161 234 cv
181 234 li
183.206 234 185 232.206 185 230 cv
185 218 li
157 218 li
cp
f
128 211 mo
108 211 li
106.35 211 105 212.35 105 214 cv
131 214 li
131 212.35 129.65 211 128 211 cv
cp
f
114 225 mo
110 225 li
109.448 225 109 224.553 109 224 cv
109 223.447 109.448 223 110 223 cv
114 223 li
114.552 223 115 223.447 115 224 cv
115 224.553 114.552 225 114 225 cv
cp
124 222 mo
124 219.79 125.79 218 128 218 cv
129.2 218 130.27 218.53 131 219.36 cv
131 217 li
105 217 li
105 226 li
105 227.65 106.35 229 108 229 cv
122 229 li
122 225 li
122 223.7 122.84 222.59 124 222.18 cv
124 222 li
cp
f
128 230 mo
126.897 230 126 229.103 126 228 cv
126 226.897 126.897 226 128 226 cv
129.103 226 130 226.897 130 228 cv
130 229.103 129.103 230 128 230 cv
cp
127 222 mo
127 221.448 127.448 221 128 221 cv
128.552 221 129 221.448 129 222 cv
129 223 li
127 223 li
127 222 li
cp
131 223 mo
131 222 li
131 220.346 129.654 219 128 219 cv
126.346 219 125 220.346 125 222 cv
125 223 li
123.897 223 123 223.897 123 225 cv
123 231 li
123 232.103 123.897 233 125 233 cv
131 233 li
132.103 233 133 232.103 133 231 cv
133 225 li
133 223.897 132.103 223 131 223 cv
cp
f
79 215 mo
79 216 li
53 216 li
53 215 li
53 213.35 54.3501 212 56 212 cv
76 212 li
77.6499 212 79 213.35 79 215 cv
cp
f
62 226 mo
58 226 li
57.4502 226 57 225.55 57 225 cv
57 224.45 57.4502 224 58 224 cv
62 224 li
62.5498 224 63 224.45 63 225 cv
63 225.55 62.5498 226 62 226 cv
cp
53 219 mo
53 227 li
53 228.65 54.3501 230 56 230 cv
72.2803 230 li
72.1001 229.7 72 229.36 72 229 cv
72 228.47 72.21 227.96 72.5898 227.59 cv
72.96 227.21 73.4697 227 74 227 cv
74.5303 227 75.04 227.21 75.4102 227.59 cv
76 228.17 li
78.5898 225.59 li
78.71 225.46 78.8501 225.36 79 225.28 cv
79 219 li
53 219 li
cp
f
76 232 mo
75.7441 232 75.4883 231.902 75.293 231.707 cv
73.293 229.707 li
72.9023 229.316 72.9023 228.684 73.293 228.293 cv
73.6836 227.902 74.3164 227.902 74.707 228.293 cv
76 229.586 li
79.293 226.293 li
79.6836 225.902 80.3164 225.902 80.707 226.293 cv
81.0977 226.684 81.0977 227.316 80.707 227.707 cv
76.707 231.707 li
76.5117 231.902 76.2559 232 76 232 cv
cp
f
27 216 mo
27 215 li
27 213.35 25.6499 212 24 212 cv
4 212 li
2.3501 212 1 213.35 1 215 cv
1 216 li
27 216 li
cp
f
10 226 mo
6 226 li
5.44775 226 5 225.553 5 225 cv
5 224.447 5.44775 224 6 224 cv
10 224 li
10.5522 224 11 224.447 11 225 cv
11 225.553 10.5522 226 10 226 cv
cp
1 219 mo
1 227 li
1 228.65 2.3501 230 4 230 cv
22.2803 230 li
22.4399 229.7 22.9165 229.258 23.1699 229 cv
22.5898 228.41 li
22.21 228.04 22 227.53 22 227 cv
22 226.47 22.21 225.96 22.5898 225.59 cv
22.96 225.21 23.4697 225 24 225 cv
24.5303 225 25.04 225.21 25.4102 225.59 cv
26 226.17 li
26.2578 225.916 26.7002 225.439 27 225.28 cv
27 219 li
1 219 li
cp
f
27.4141 229 mo
28.707 227.707 li
29.0977 227.316 29.0977 226.684 28.707 226.293 cv
28.3164 225.902 27.6836 225.902 27.293 226.293 cv
26 227.586 li
24.707 226.293 li
24.3164 225.902 23.6836 225.902 23.293 226.293 cv
22.9023 226.684 22.9023 227.316 23.293 227.707 cv
24.5859 229 li
23.293 230.293 li
22.9023 230.684 22.9023 231.316 23.293 231.707 cv
23.4883 231.902 23.7441 232 24 232 cv
24.2559 232 24.5117 231.902 24.707 231.707 cv
26 230.414 li
27.293 231.707 li
27.4883 231.902 27.7441 232 28 232 cv
28.2559 232 28.5117 231.902 28.707 231.707 cv
29.0977 231.316 29.0977 230.684 28.707 230.293 cv
27.4141 229 li
cp
f
236 165 mo
236 164 li
236 162.346 234.654 161 233 161 cv
213 161 li
211.346 161 210 162.346 210 164 cv
210 165 li
236 165 li
cp
f
218 175 mo
215 175 li
214.447 175 214 174.553 214 174 cv
214 173.447 214.447 173 215 173 cv
218 173 li
218.553 173 219 173.447 219 174 cv
219 174.553 218.553 175 218 175 cv
cp
210 168 mo
210 176 li
210 177.654 211.346 179 213 179 cv
233 179 li
234.654 179 236 177.654 236 176 cv
236 168 li
210 168 li
cp
f
172 173.722 mo
172 175 li
172 175.553 171.553 176 171 176 cv
170.447 176 170 175.553 170 175 cv
170 173.722 li
169.405 173.375 169 172.736 169 172 cv
169 170.897 169.897 170 171 170 cv
172.103 170 173 170.897 173 172 cv
173 172.736 172.595 173.375 172 173.722 cv
cp
175 166 mo
169 166 li
169 164 li
169 162.897 169.897 162 171 162 cv
172.103 162 173 162.897 173 164 cv
173 164.553 173.447 165 174 165 cv
174.553 165 175 164.553 175 164 cv
175 161.794 173.206 160 171 160 cv
168.794 160 167 161.794 167 164 cv
167 166 li
165.346 166 164 167.346 164 169 cv
164 177 li
164 178.654 165.346 180 167 180 cv
175 180 li
176.654 180 178 178.654 178 177 cv
178 169 li
178 167.346 176.654 166 175 166 cv
cp
f
120 173.722 mo
120 175 li
120 175.553 119.552 176 119 176 cv
118.448 176 118 175.553 118 175 cv
118 173.722 li
117.405 173.375 117 172.736 117 172 cv
117 170.897 117.897 170 119 170 cv
120.103 170 121 170.897 121 172 cv
121 172.736 120.595 173.375 120 173.722 cv
cp
117 164 mo
117 162.897 117.897 162 119 162 cv
120.103 162 121 162.897 121 164 cv
121 166 li
117 166 li
117 164 li
cp
123 166 mo
123 164 li
123 161.794 121.206 160 119 160 cv
116.794 160 115 161.794 115 164 cv
115 166 li
113.346 166 112 167.346 112 169 cv
112 177 li
112 178.654 113.346 180 115 180 cv
123 180 li
124.654 180 126 178.654 126 177 cv
126 169 li
126 167.346 124.654 166 123 166 cv
cp
f
65.8535 175.146 mo
66.0488 175.342 66.0488 175.658 65.8535 175.854 cv
65.6582 176.049 65.3418 176.049 65.1465 175.854 cv
64.5 175.207 li
63.8535 175.854 li
63.6582 176.049 63.3418 176.049 63.1465 175.854 cv
62.9512 175.658 62.9512 175.342 63.1465 175.146 cv
63.793 174.5 li
63.1465 173.854 li
62.9512 173.658 62.9512 173.342 63.1465 173.146 cv
63.3418 172.951 63.6582 172.951 63.8535 173.146 cv
64.5 173.793 li
65.1465 173.146 li
65.3418 172.951 65.6582 172.951 65.8535 173.146 cv
66.0488 173.342 66.0488 173.658 65.8535 173.854 cv
65.207 174.5 li
65.8535 175.146 li
cp
61.8535 175.146 mo
62.0488 175.342 62.0488 175.658 61.8535 175.854 cv
61.6582 176.049 61.3418 176.049 61.1465 175.854 cv
60.5 175.207 li
59.8535 175.854 li
59.6582 176.049 59.3418 176.049 59.1465 175.854 cv
58.9512 175.658 58.9512 175.342 59.1465 175.146 cv
59.793 174.5 li
59.1465 173.854 li
58.9512 173.658 58.9512 173.342 59.1465 173.146 cv
59.3418 172.951 59.6582 172.951 59.8535 173.146 cv
60.5 173.793 li
61.1465 173.146 li
61.3418 172.951 61.6582 172.951 61.8535 173.146 cv
62.0488 173.342 62.0488 173.658 61.8535 173.854 cv
61.207 174.5 li
61.8535 175.146 li
cp
57.8535 175.146 mo
58.0488 175.342 58.0488 175.658 57.8535 175.854 cv
57.6582 176.049 57.3418 176.049 57.1465 175.854 cv
56.5 175.207 li
55.8535 175.854 li
55.6582 176.049 55.3418 176.049 55.1465 175.854 cv
54.9512 175.658 54.9512 175.342 55.1465 175.146 cv
55.793 174.5 li
55.1465 173.854 li
54.9512 173.658 54.9512 173.342 55.1465 173.146 cv
55.3418 172.951 55.6582 172.951 55.8535 173.146 cv
56.5 173.793 li
57.1465 173.146 li
57.3418 172.951 57.6582 172.951 57.8535 173.146 cv
58.0488 173.342 58.0488 173.658 57.8535 173.854 cv
57.207 174.5 li
57.8535 175.146 li
cp
68 170 mo
56 170 li
54.3501 170 53 171.35 53 173 cv
53 176 li
53 177.65 54.3501 179 56 179 cv
69.3599 179 li
68.5303 178.27 68 177.2 68 176 cv
68 170 li
cp
f
76 173.722 mo
76 175 li
76 175.553 75.5522 176 75 176 cv
74.4478 176 74 175.553 74 175 cv
74 173.722 li
73.4053 173.375 73 172.736 73 172 cv
73 170.897 73.897 170 75 170 cv
76.103 170 77 170.897 77 172 cv
77 172.736 76.5947 173.375 76 173.722 cv
cp
73 165 mo
73 163.897 73.897 163 75 163 cv
76.103 163 77 163.897 77 165 cv
77 167 li
73 167 li
73 165 li
cp
79 167.185 mo
79 165 li
79 162.794 77.2056 161 75 161 cv
72.7944 161 71 162.794 71 165 cv
71 167.185 li
69.8384 167.599 69 168.698 69 170 cv
69 176 li
69 177.654 70.3457 179 72 179 cv
78 179 li
79.6543 179 81 177.654 81 176 cv
81 170 li
81 168.698 80.1616 167.599 79 167.185 cv
cp
f
16 172.722 mo
16 174 li
16 174.553 15.5522 175 15 175 cv
14.4478 175 14 174.553 14 174 cv
14 172.722 li
13.4053 172.375 13 171.736 13 171 cv
13 169.897 13.897 169 15 169 cv
16.103 169 17 169.897 17 171 cv
17 171.736 16.5947 172.375 16 172.722 cv
cp
14 165 mo
14 164.448 14.4487 164 15 164 cv
15.5513 164 16 164.448 16 165 cv
16 166 li
14 166 li
14 165 li
cp
21 169 mo
21 167.346 19.6543 166 18 166 cv
18 165 li
18 163.346 16.6543 162 15 162 cv
13.3457 162 12 163.346 12 165 cv
12 166 li
10.3457 166 9 167.346 9 169 cv
9 175 li
9 176.654 10.3457 178 12 178 cv
18 178 li
19.6543 178 21 176.654 21 175 cv
21 169 li
cp
f
14 158.722 mo
14 160 li
14 160.553 14.4478 161 15 161 cv
15.5522 161 16 160.553 16 160 cv
16 158.722 li
16.5947 158.375 17 157.736 17 157 cv
17 155.897 16.103 155 15 155 cv
13.897 155 13 155.897 13 157 cv
13 157.736 13.4053 158.375 14 158.722 cv
cp
f
20.707 165.707 mo
24.707 161.707 li
24.8945 161.52 25 161.266 25 161 cv
25 159.723 li
25.147 159.638 25.2886 159.54 25.4141 159.414 cv
26.1938 158.635 26.1938 157.365 25.4141 156.586 cv
24.6348 155.807 23.3652 155.807 22.5859 156.586 cv
21.8062 157.365 21.8062 158.635 22.5859 159.414 cv
22.7114 159.54 22.853 159.638 23 159.723 cv
23 160.586 li
19.293 164.293 li
18.9023 164.684 18.9023 165.316 19.293 165.707 cv
19.6836 166.098 20.3164 166.098 20.707 165.707 cv
cp
f
5 159.723 mo
5 161 li
5 161.266 5.10547 161.52 5.29297 161.707 cv
9.29297 165.707 li
9.68359 166.098 10.3164 166.098 10.707 165.707 cv
11.0977 165.316 11.0977 164.684 10.707 164.293 cv
7 160.586 li
7 159.723 li
7.14697 159.638 7.28857 159.54 7.41406 159.414 cv
8.19385 158.635 8.19385 157.365 7.41406 156.586 cv
6.63477 155.807 5.36523 155.807 4.58594 156.586 cv
3.80615 157.365 3.80615 158.635 4.58594 159.414 cv
4.71143 159.54 4.85303 159.638 5 159.723 cv
cp
f
25 180.277 mo
25 179 li
25 178.734 24.8945 178.48 24.707 178.293 cv
22.707 176.293 li
22.3164 175.902 21.6836 175.902 21.293 176.293 cv
20.9023 176.684 20.9023 177.316 21.293 177.707 cv
23 179.414 li
23 180.277 li
22.853 180.362 22.7114 180.46 22.5859 180.586 cv
21.8062 181.365 21.8062 182.635 22.5859 183.414 cv
22.9756 183.804 23.4878 183.999 24 183.999 cv
24.5122 183.999 25.0244 183.804 25.4141 183.414 cv
26.1938 182.635 26.1938 181.365 25.4141 180.586 cv
25.2886 180.46 25.147 180.362 25 180.277 cv
cp
f
7.29297 176.293 mo
5.29297 178.293 li
5.10547 178.48 5 178.734 5 179 cv
5 180.277 li
4.85303 180.362 4.71143 180.46 4.58594 180.586 cv
3.80615 181.365 3.80615 182.635 4.58594 183.414 cv
4.97559 183.804 5.48779 183.999 6 183.999 cv
6.51221 183.999 7.02441 183.804 7.41406 183.414 cv
8.19385 182.635 8.19385 181.365 7.41406 180.586 cv
7.28857 180.46 7.14697 180.362 7 180.277 cv
7 179.414 li
8.70703 177.707 li
9.09766 177.316 9.09766 176.684 8.70703 176.293 cv
8.31641 175.902 7.68359 175.902 7.29297 176.293 cv
cp
f
16 181.278 mo
16 180 li
16 179.447 15.5522 179 15 179 cv
14.4478 179 14 179.447 14 180 cv
14 181.278 li
13.4053 181.625 13 182.264 13 183 cv
13 184.103 13.897 185 15 185 cv
16.103 185 17 184.103 17 183 cv
17 182.264 16.5947 181.625 16 181.278 cv
cp
f
28 168 mo
27.2632 168 26.625 168.405 26.2783 169 cv
23 169 li
22.4478 169 22 169.447 22 170 cv
22 170.553 22.4478 171 23 171 cv
26.2783 171 li
26.625 171.595 27.2632 172 28 172 cv
29.103 172 30 171.103 30 170 cv
30 168.897 29.103 168 28 168 cv
cp
f
7 171 mo
7.55225 171 8 170.553 8 170 cv
8 169.447 7.55225 169 7 169 cv
3.72168 169 li
3.375 168.405 2.73682 168 2 168 cv
.896973 168 0 168.897 0 170 cv
0 171.103 .896973 172 2 172 cv
2.73682 172 3.375 171.595 3.72168 171 cv
7 171 li
cp
f
219 113 mo
217.346 113 216 114.346 216 116 cv
216 117.654 217.346 119 219 119 cv
220.654 119 222 117.654 222 116 cv
222 114.346 220.654 113 219 113 cv
cp
f
231 115.722 mo
231 119 li
231 119.553 230.553 120 230 120 cv
229.447 120 229 119.553 229 119 cv
229 115.722 li
228.405 115.375 228 114.736 228 114 cv
228 112.897 228.897 112 230 112 cv
231.103 112 232 112.897 232 114 cv
232 114.736 231.595 115.375 231 115.722 cv
cp
219 121 mo
216.243 121 214 118.757 214 116 cv
214 113.243 216.243 111 219 111 cv
221.757 111 224 113.243 224 116 cv
224 118.757 221.757 121 219 121 cv
cp
233 106 mo
213 106 li
211.346 106 210 107.346 210 109 cv
210 123 li
210 124.654 211.346 126 213 126 cv
233 126 li
234.654 126 236 124.654 236 123 cv
236 109 li
236 107.346 234.654 106 233 106 cv
cp
f
218 128 mo
214 128 li
213.447 128 213 128.447 213 129 cv
213 129.553 213.447 130 214 130 cv
218 130 li
218.553 130 219 129.553 219 129 cv
219 128.447 218.553 128 218 128 cv
cp
f
232 128 mo
228 128 li
227.447 128 227 128.447 227 129 cv
227 129.553 227.447 130 228 130 cv
232 130 li
232.553 130 233 129.553 233 129 cv
233 128.447 232.553 128 232 128 cv
cp
f
178.97 129.757 mo
175.8 117.089 li
177.206 115.773 178 113.953 178 112 cv
178 108.141 174.859 105 171 105 cv
167.141 105 164 108.141 164 112 cv
164 113.953 164.794 115.773 166.2 117.089 cv
163.03 129.757 li
162.955 130.056 163.022 130.373 163.212 130.615 cv
163.401 130.858 163.692 131 164 131 cv
178 131 li
178.308 131 178.599 130.858 178.788 130.615 cv
178.978 130.373 179.045 130.056 178.97 129.757 cv
cp
f
126.211 124.924 mo
126.015 125.128 125.753 125.23 125.49 125.23 cv
125.24 125.23 124.991 125.138 124.797 124.951 cv
124.398 124.568 124.387 123.935 124.77 123.537 cv
126.208 122.043 127 120.076 127 118 cv
127 113.589 123.411 110 119 110 cv
114.589 110 111 113.589 111 118 cv
111 120.076 111.792 122.043 113.23 123.537 cv
113.613 123.935 113.601 124.568 113.203 124.951 cv
112.806 125.334 112.173 125.323 111.789 124.924 cv
109.991 123.055 109 120.596 109 118 cv
109 112.486 113.486 108 119 108 cv
124.514 108 129 112.486 129 118 cv
129 120.596 128.01 123.055 126.211 124.924 cv
cp
123.46 126.942 mo
122.069 127.645 120.568 128 119 128 cv
117.431 128 115.931 127.645 114.54 126.942 cv
114.11 126.726 113.896 126.234 114.029 125.772 cv
116.067 118.721 li
115.382 117.986 115 117.026 115 116 cv
115 113.794 116.794 112 119 112 cv
121.206 112 123 113.794 123 116 cv
123 117.026 122.618 117.986 121.934 118.721 cv
123.971 125.772 li
124.104 126.234 123.89 126.726 123.46 126.942 cv
cp
119 104 mo
111.28 104 105 110.28 105 118 cv
105 125.72 111.28 132 119 132 cv
126.72 132 133 125.72 133 118 cv
133 110.28 126.72 104 119 104 cv
cp
f
120.198 117.602 mo
120.708 117.218 121 116.634 121 116 cv
121 114.897 120.103 114 119 114 cv
117.897 114 117 114.897 117 116 cv
117 116.634 117.292 117.218 117.802 117.602 cv
118.133 117.852 118.276 118.279 118.161 118.678 cv
116.193 125.489 li
117.977 126.167 120.023 126.167 121.807 125.489 cv
119.839 118.678 li
119.724 118.279 119.867 117.852 120.198 117.602 cv
cp
f
66 104.632 mo
65.2842 105.392 62.2949 108 55 108 cv
54.4478 108 54 108.447 54 109 cv
54 117.759 li
54 127.013 61.1079 129.773 65.355 131.423 cv
65.5771 131.509 65.7925 131.593 66 131.675 cv
66 104.632 li
cp
f
79 108 mo
71.6929 108 68.7051 105.382 68 104.633 cv
68 131.675 li
68.2075 131.593 68.4229 131.509 68.645 131.423 cv
72.8921 129.773 80 127.013 80 117.759 cv
80 109 li
80 108.447 79.5522 108 79 108 cv
cp
f
15 115 mo
14.4487 115 14 115.448 14 116 cv
14 116.552 14.4487 117 15 117 cv
15.5513 117 16 116.552 16 116 cv
16 115.448 15.5513 115 15 115 cv
cp
f
16 118.815 mo
16 122 li
16 122.553 15.5522 123 15 123 cv
14.4478 123 14 122.553 14 122 cv
14 118.815 li
12.8384 118.401 12 117.302 12 116 cv
12 114.346 13.3457 113 15 113 cv
16.6543 113 18 114.346 18 116 cv
18 117.302 17.1616 118.401 16 118.815 cv
cp
27 108 mo
18.5088 108 15.8418 104.458 15.8223 104.431 cv
15.6377 104.164 15.332 104.008 15.0078 104.005 cv
14.644 104.012 14.374 104.16 14.1841 104.422 cv
14.1582 104.458 11.4912 108 3 108 cv
2.44775 108 2 108.447 2 109 cv
2 117.759 li
2 127.013 9.10791 129.773 13.355 131.423 cv
13.8057 131.598 14.2295 131.763 14.6152 131.923 cv
14.7383 131.975 14.8691 132 15 132 cv
15.1309 132 15.2617 131.975 15.3848 131.923 cv
15.7705 131.763 16.1943 131.598 16.645 131.423 cv
20.8921 129.773 28 127.013 28 117.759 cv
28 109 li
28 108.447 27.5522 108 27 108 cv
cp
f
236.84 59.46 mo
236.54 59 235.92 58.8604 235.46 59.1602 cv
235 59.46 li
235 57 li
235 56.4502 234.55 56 234 56 cv
225.51 56 222.84 52.46 222.82 52.4297 cv
222.64 52.1602 222.33 52.0098 222.01 52 cv
221.68 52.0098 221.37 52.1602 221.18 52.4199 cv
221.16 52.46 218.49 56 210 56 cv
209.45 56 209 56.4502 209 57 cv
209 65.7598 li
209 75.0098 216.11 77.7695 220.36 79.4199 cv
220.81 79.5996 221.23 79.7598 221.62 79.9199 cv
221.74 79.9697 221.87 80 222 80 cv
222.13 80 222.26 79.9697 222.38 79.9199 cv
222.77 79.7598 223.19 79.5996 223.64 79.4199 cv
227.89 77.7695 235 75.0098 235 65.7598 cv
235 64.29 li
224.04 71.3398 li
223.88 71.4502 223.69 71.5 223.5 71.5 cv
223.24 71.5 222.99 71.4004 222.79 71.21 cv
219.79 68.21 li
219.4 67.8203 219.4 67.1797 219.79 66.79 cv
220.18 66.4004 220.82 66.4004 221.21 66.79 cv
222.129 67.709 222.74 68.3203 223.64 69.2197 cv
234.446 62.2764 236.401 60.9287 236.54 60.8398 cv
237 60.54 237.14 59.9199 236.84 59.46 cv
cp
f
174.707 68.293 mo
175.098 68.6836 175.098 69.3164 174.707 69.707 cv
174.316 70.0977 173.684 70.0977 173.293 69.707 cv
171 67.4141 li
168.707 69.707 li
168.316 70.0977 167.684 70.0977 167.293 69.707 cv
166.902 69.3164 166.902 68.6836 167.293 68.293 cv
169.586 66 li
167.293 63.707 li
166.902 63.3164 166.902 62.6836 167.293 62.293 cv
167.684 61.9023 168.316 61.9023 168.707 62.293 cv
171 64.5859 li
173.293 62.293 li
173.684 61.9023 174.316 61.9023 174.707 62.293 cv
175.098 62.6836 175.098 63.3164 174.707 63.707 cv
172.414 66 li
174.707 68.293 li
cp
183 56 mo
174.51 56 171.842 52.458 171.822 52.4307 cv
171.638 52.1641 171.332 52.0078 171.008 52.0049 cv
170.692 52.0127 170.374 52.1592 170.184 52.4219 cv
170.158 52.458 167.49 56 159 56 cv
158.447 56 158 56.4473 158 57 cv
158 65.7588 li
158 75.0127 165.108 77.7734 169.355 79.4229 cv
169.806 79.5977 170.229 79.7627 170.615 79.9229 cv
170.738 79.9746 170.869 80 171 80 cv
171.131 80 171.262 79.9746 171.385 79.9229 cv
171.771 79.7627 172.194 79.5977 172.645 79.4229 cv
176.892 77.7734 184 75.0127 184 65.7588 cv
184 57 li
184 56.4473 183.553 56 183 56 cv
cp
f
124 70 mo
124 71.6543 122.654 73 121 73 cv
117 73 li
115.346 73 114 71.6543 114 70 cv
114 66 li
114 64.6982 114.838 63.5986 116 63.1846 cv
116 62 li
116 60.3457 117.346 59 119 59 cv
120.654 59 122 60.3457 122 62 cv
122 63.1846 li
123.161 63.5986 124 64.6982 124 66 cv
124 70 li
cp
131 56 mo
122.51 56 119.842 52.458 119.822 52.4307 cv
119.638 52.1641 119.332 52.0078 119.008 52.0049 cv
118.654 51.9834 118.374 52.1592 118.184 52.4219 cv
118.158 52.458 115.491 56 107 56 cv
106.448 56 106 56.4473 106 57 cv
106 65.7588 li
106 75.0127 113.108 77.7734 117.355 79.4229 cv
117.806 79.5977 118.229 79.7627 118.615 79.9229 cv
118.738 79.9746 118.869 80 119 80 cv
119.131 80 119.262 79.9746 119.385 79.9229 cv
119.771 79.7627 120.194 79.5977 120.645 79.4229 cv
124.892 77.7734 132 75.0127 132 65.7588 cv
132 57 li
132 56.4473 131.553 56 131 56 cv
cp
f
119 70 mo
117.897 70 117 69.1025 117 68 cv
117 66.8975 117.897 66 119 66 cv
120.103 66 121 66.8975 121 68 cv
121 69.1025 120.103 70 119 70 cv
cp
121 65 mo
117 65 li
116.449 65 116 65.4482 116 66 cv
116 70 li
116 70.5518 116.449 71 117 71 cv
121 71 li
121.552 71 122 70.5518 122 70 cv
122 66 li
122 65.4482 121.552 65 121 65 cv
cp
f
120 62 mo
120 61.4482 119.551 61 119 61 cv
118.449 61 118 61.4482 118 62 cv
118 63 li
120 63 li
120 62 li
cp
f
76.1543 55.4316 mo
73.6968 53.3008 70.5005 52 67 52 cv
59.2803 52 53 58.2803 53 66 cv
53 69.501 54.3003 72.6973 56.4316 75.1543 cv
76.1543 55.4316 li
cp
f
77.5684 56.8457 mo
57.8457 76.5684 li
60.3032 78.6992 63.4995 80 67 80 cv
74.7197 80 81 73.7197 81 66 cv
81 62.499 79.6997 59.3027 77.5684 56.8457 cv
cp
f
25 74 mo
24 74 li
23.4478 74 23 73.5527 23 73 cv
23 72.4473 23.4478 72 24 72 cv
25 72 li
25.5522 72 26 72.4473 26 73 cv
26 73.5527 25.5522 74 25 74 cv
cp
21 74 mo
20 74 li
19.4478 74 19 73.5527 19 73 cv
19 72.4473 19.4478 72 20 72 cv
21 72 li
21.5522 72 22 72.4473 22 73 cv
22 73.5527 21.5522 74 21 74 cv
cp
26 69 mo
16 69 li
16 62 li
16 61.4473 15.5522 61 15 61 cv
14.4478 61 14 61.4473 14 62 cv
14 69 li
12 69 li
12 71.21 10.21 73 8 73 cv
4 73 li
2.7998 73 1.72998 72.4697 1 71.6396 cv
1 74 li
1 75.6504 2.3501 77 4 77 cv
26 77 li
27.6499 77 29 75.6504 29 74 cv
29 72 li
29 70.3496 27.6499 69 26 69 cv
cp
f
15 60 mo
16.103 60 17 60.8975 17 62 cv
17 62.5527 17.4478 63 18 63 cv
18.5522 63 19 62.5527 19 62 cv
19 59.7939 17.2056 58 15 58 cv
14.4478 58 14 58.4473 14 59 cv
14 59.5527 14.4478 60 15 60 cv
cp
f
15 57 mo
17.7568 57 20 59.2432 20 62 cv
20 62.5527 20.4478 63 21 63 cv
21.5522 63 22 62.5527 22 62 cv
22 58.1406 18.8599 55 15 55 cv
14.4478 55 14 55.4473 14 56 cv
14 56.5527 14.4478 57 15 57 cv
cp
f
15 54 mo
19.4111 54 23 57.5889 23 62 cv
23 62.5527 23.4478 63 24 63 cv
24.5522 63 25 62.5527 25 62 cv
25 56.4863 20.5142 52 15 52 cv
14.4478 52 14 52.4473 14 53 cv
14 53.5527 14.4478 54 15 54 cv
cp
f
9 78 mo
6 78 li
5.44775 78 5 78.4473 5 79 cv
5 79.5527 5.44775 80 6 80 cv
9 80 li
9.55225 80 10 79.5527 10 79 cv
10 78.4473 9.55225 78 9 78 cv
cp
f
24 78 mo
21 78 li
20.4478 78 20 78.4473 20 79 cv
20 79.5527 20.4478 80 21 80 cv
24 80 li
24.5522 80 25 79.5527 25 79 cv
25 78.4473 24.5522 78 24 78 cv
cp
f
5 61 mo
5 60.4482 5.44873 60 6 60 cv
6.55127 60 7 60.4482 7 61 cv
7 62 li
5 62 li
5 61 li
cp
6 69 mo
4.89697 69 4 68.1025 4 67 cv
4 65.8975 4.89697 65 6 65 cv
7.10303 65 8 65.8975 8 67 cv
8 68.1025 7.10303 69 6 69 cv
cp
4 72 mo
8 72 li
9.6543 72 11 70.6543 11 69 cv
11 65 li
11 63.6982 10.1616 62.5986 9 62.1846 cv
9 61 li
9 59.3457 7.6543 58 6 58 cv
4.3457 58 3 59.3457 3 61 cv
3 62.1846 li
1.83838 62.5986 1 63.6982 1 65 cv
1 69 li
1 70.6543 2.3457 72 4 72 cv
cp
f
233 22 mo
232 22 li
231.447 22 231 21.5527 231 21 cv
231 20.4473 231.447 20 232 20 cv
233 20 li
233.553 20 234 20.4473 234 21 cv
234 21.5527 233.553 22 233 22 cv
cp
229 22 mo
228 22 li
227.447 22 227 21.5527 227 21 cv
227 20.4473 227.447 20 228 20 cv
229 20 li
229.553 20 230 20.4473 230 21 cv
230 21.5527 229.553 22 229 22 cv
cp
234 17 mo
224 17 li
224 10 li
224 9.44727 223.553 9 223 9 cv
222.447 9 222 9.44727 222 10 cv
222 17 li
212 17 li
210.346 17 209 18.3457 209 20 cv
209 22 li
209 23.6543 210.346 25 212 25 cv
234 25 li
235.654 25 237 23.6543 237 22 cv
237 20 li
237 18.3457 235.654 17 234 17 cv
cp
f
223 8 mo
224.103 8 225 8.89746 225 10 cv
225 10.5527 225.447 11 226 11 cv
226.553 11 227 10.5527 227 10 cv
227 7.79395 225.206 6 223 6 cv
222.447 6 222 6.44727 222 7 cv
222 7.55273 222.447 8 223 8 cv
cp
f
223 5 mo
225.757 5 228 7.24316 228 10 cv
228 10.5527 228.447 11 229 11 cv
229.553 11 230 10.5527 230 10 cv
230 6.14063 226.859 3 223 3 cv
222.447 3 222 3.44727 222 4 cv
222 4.55273 222.447 5 223 5 cv
cp
f
223 2 mo
227.411 2 231 5.58887 231 10 cv
231 10.5527 231.447 11 232 11 cv
232.553 11 233 10.5527 233 10 cv
233 4.48633 228.514 0 223 0 cv
222.447 0 222 .447266 222 1 cv
222 1.55273 222.447 2 223 2 cv
cp
f
217 26 mo
214 26 li
213.447 26 213 26.4473 213 27 cv
213 27.5527 213.447 28 214 28 cv
217 28 li
217.553 28 218 27.5527 218 27 cv
218 26.4473 217.553 26 217 26 cv
cp
f
232 26 mo
229 26 li
228.447 26 228 26.4473 228 27 cv
228 27.5527 228.447 28 229 28 cv
232 28 li
232.553 28 233 27.5527 233 27 cv
233 26.4473 232.553 26 232 26 cv
cp
f
170 5.81543 mo
170 7.08008 li
170.33 7.01953 170.66 7 171 7 cv
171.34 7 171.67 7.01953 172 7.08008 cv
172 5.81543 li
173.161 5.40137 174 4.30176 174 3 cv
174 1.3457 172.654 0 171 0 cv
169.346 0 168 1.3457 168 3 cv
168 4.30176 168.839 5.40137 170 5.81543 cv
cp
f
172 22.1846 mo
172 20.9199 li
171.67 20.9805 171.34 21 171 21 cv
170.66 21 170.33 20.9805 170 20.9199 cv
170 22.1846 li
168.839 22.5986 168 23.6982 168 25 cv
168 26.6543 169.346 28 171 28 cv
172.654 28 174 26.6543 174 25 cv
174 23.6982 173.161 22.5986 172 22.1846 cv
cp
f
182 11 mo
180.698 11 179.599 11.8389 179.185 13 cv
177.92 13 li
177.98 13.3301 178 13.6602 178 14 cv
178 14.3398 177.98 14.6699 177.92 15 cv
179.185 15 li
179.599 16.1611 180.698 17 182 17 cv
183.654 17 185 15.6543 185 14 cv
185 12.3457 183.654 11 182 11 cv
cp
f
164.08 13 mo
162.815 13 li
162.401 11.8389 161.302 11 160 11 cv
158.346 11 157 12.3457 157 14 cv
157 15.6543 158.346 17 160 17 cv
161.302 17 162.401 16.1611 162.815 15 cv
164.08 15 li
164.02 14.6699 164 14.3398 164 14 cv
164 13.6602 164.02 13.3301 164.08 13 cv
cp
f
171 19.9697 mo
172.06 18.5498 172.76 16.8496 172.95 15 cv
169.05 15 li
169.24 16.8496 169.94 18.5498 171 19.9697 cv
cp
f
171 8.03027 mo
169.94 9.4502 169.24 11.1504 169.05 13 cv
172.95 13 li
172.76 11.1504 172.06 9.4502 171 8.03027 cv
cp
f
167.05 15 mo
164.08 15 li
164.46 17.7402 166.45 19.96 169.05 20.71 cv
167.94 19.0498 167.22 17.0996 167.05 15 cv
cp
f
169.05 7.29004 mo
166.45 8.04004 164.46 10.2598 164.08 13 cv
167.05 13 li
167.22 10.9004 167.94 8.9502 169.05 7.29004 cv
cp
f
172.95 20.71 mo
175.55 19.96 177.54 17.7402 177.92 15 cv
174.95 15 li
174.78 17.0996 174.06 19.0498 172.95 20.71 cv
cp
f
172.95 7.29004 mo
174.06 8.9502 174.78 10.9004 174.95 13 cv
177.92 13 li
177.54 10.2598 175.55 8.04004 172.95 7.29004 cv
cp
f
119 23 mo
117.24 23 115.57 22.4404 114.2 21.4004 cv
114.753 20.6348 115 19.8203 115 19 cv
115 16.79 113.21 15 111 15 cv
111 11.9404 112.75 9.17969 115.44 7.83008 cv
116.077 9.10352 117.434 10 119 10 cv
120.495 10 121.881 9.17773 122.56 7.83984 cv
125.25 9.17969 127 11.9404 127 15 cv
124.79 15 123 16.79 123 19 cv
123 19.3301 123.04 19.6602 123.12 19.9697 cv
123.282 20.5811 123.547 21.0791 123.8 21.4004 cv
122.43 22.4404 120.76 23 119 23 cv
cp
128.98 15.5303 mo
129 15.3701 129 15.1904 129 15 cv
129 11 126.61 7.41016 122.99 5.83008 cv
122.91 3.7002 121.15 2 119 2 cv
116.85 2 115.09 3.7002 115.01 5.83008 cv
111.39 7.41016 109 11 109 15 cv
109 15.1904 109 15.3604 109.02 15.5303 cv
107.79 16.2197 107 17.5303 107 19 cv
107 21.21 108.79 23 111 23 cv
111.55 23 112.09 22.8896 112.59 22.6602 cv
114.37 24.1797 116.63 25 119 25 cv
121.37 25 123.63 24.1797 125.41 22.6602 cv
125.91 22.8896 126.45 23 127 23 cv
129.21 23 131 21.21 131 19 cv
131 17.5303 130.21 16.21 128.98 15.5303 cv
cp
f
71 19 mo
70.5381 19 70.106 19.1133 69.7148 19.3008 cv
65.6992 15.2852 li
65.8867 14.8945 66 14.4619 66 14 cv
66 13.5381 65.8867 13.1055 65.6992 12.7148 cv
69.7148 8.69922 li
70.106 8.88672 70.5381 9 71 9 cv
72.6543 9 74 7.6543 74 6 cv
74 4.3457 72.6543 3 71 3 cv
69.3457 3 68 4.3457 68 6 cv
68 6.46191 68.1133 6.89453 68.3008 7.28516 cv
64.2852 11.3008 li
63.894 11.1133 63.4619 11 63 11 cv
61.3457 11 60 12.3457 60 14 cv
60 15.6543 61.3457 17 63 17 cv
63.4619 17 63.894 16.8867 64.2852 16.6992 cv
68.3008 20.7148 li
68.1133 21.1055 68 21.5381 68 22 cv
68 23.6543 69.3457 25 71 25 cv
72.6543 25 74 23.6543 74 22 cv
74 20.3457 72.6543 19 71 19 cv
cp
f
29 14 mo
29 12.6982 28.1616 11.5986 27 11.1846 cv
27 5.81543 li
28.1616 5.40137 29 4.30176 29 3 cv
29 1.3457 27.6543 0 26 0 cv
24.6982 0 23.5986 .838867 23.1841 2 cv
17.8159 2 li
17.4014 .838867 16.3018 0 15 0 cv
13.6982 0 12.5986 .838867 12.1841 2 cv
6.81592 2 li
6.40137 .838867 5.30176 0 4 0 cv
2.3457 0 1 1.3457 1 3 cv
1 4.6543 2.3457 6 4 6 cv
4.46191 6 4.89404 5.88672 5.28516 5.69922 cv
12.3008 12.7148 li
12.1133 13.1055 12 13.5381 12 14 cv
12 14.4619 12.1133 14.8945 12.3008 15.2852 cv
5.28516 22.3008 li
5.19287 22.2559 5.09766 22.2188 5 22.1846 cv
5 16.8154 li
6.16162 16.4014 7 15.3018 7 14 cv
7 12.3457 5.6543 11 4 11 cv
2.3457 11 1 12.3457 1 14 cv
1 15.3018 1.83838 16.4014 3 16.8154 cv
3 22.1846 li
1.83838 22.5986 1 23.6982 1 25 cv
1 26.6543 2.3457 28 4 28 cv
5.6543 28 7 26.6543 7 25 cv
7 24.5381 6.88672 24.1055 6.69922 23.7148 cv
13.7148 16.6992 li
14.106 16.8867 14.5381 17 15 17 cv
16.6543 17 18 15.6543 18 14 cv
18 12.3457 16.6543 11 15 11 cv
14.5381 11 14.106 11.1133 13.7148 11.3008 cv
6.69922 4.28516 li
6.74365 4.19238 6.78076 4.09766 6.81592 4 cv
12.1846 4 li
12.5986 5.16113 13.6982 6 15 6 cv
16.3018 6 17.4014 5.16113 17.8159 4 cv
23.1846 4 li
23.4863 4.84766 24.1528 5.51367 25 5.81543 cv
25 11.1846 li
23.8384 11.5986 23 12.6982 23 14 cv
23 15.3018 23.8384 16.4014 25 16.8154 cv
25 22.1846 li
24.1528 22.4863 23.4863 23.1523 23.1841 24 cv
17.8159 24 li
17.4014 22.8389 16.3018 22 15 22 cv
13.3457 22 12 23.3457 12 25 cv
12 26.6543 13.3457 28 15 28 cv
16.3018 28 17.4014 27.1611 17.8159 26 cv
23.1846 26 li
23.5986 27.1611 24.6982 28 26 28 cv
27.6543 28 29 26.6543 29 25 cv
29 23.6982 28.1616 22.5986 27 22.1846 cv
27 16.8154 li
28.1616 16.4014 29 15.3018 29 14 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (achmad rizki) ()
%%Title: (Cyber Security.eps)
%%CreationDate: 12/6/2020 10:32 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bFrN4Qa8CBamZ>=,HC<(\Q=?'Qfp&em,O`@`bL-8X2@?U&^oRJZ[SiWU3)<%I!d9%)b&mcNYDa39SD
%lt?2s5JI'hfurjXYPuj$G:Dmm-qiFm[d:^6/j=aVZ_.2WB>;4[iLOU%?TnAX`U1i-?bV!^o_+%^%^2J=HMt`7GDEpqH+Eh>POIQk
%:Ng+&5(ERscb'/I-Vsb2Y.=OSqW?qno@oa9Y?sD;ZccDX)oFVIq!W]oX5jK[457q;^O@>#?erGA,;188`p#_brNGqd,Gg[Gci<8(
%\)0@GiQ^[9Dk=Xgq7hB0;m1\Ap"!L+IfDfc+ZK;[cH5Ttq;q$hqp/&eI/ZU-\QdCC^V9N_%_)6%]AJ$tQ61?OQ3TDkM]MXI=%>VB
%^2Wl)HJ72iiU;43G#=n'jd/J"_s7VSfu55Op3)#!o)Q/qS1f^?r57o[n"2giF3EN_`F#It(We9"TD9T-A/PK@pk9)qpI1:.NMXe4
%33kMR*SfDAT&'DAQb39;qrHMdf/AB8YMXa#m/N9SnjQk@/Csar+.qH)rqi&.hFM9j[PdIOhnJs\p:7ieHMPhW-QLLtg\Cel`ZLeb
%rpKK>8E$W45GIn%\Z8C'h;A2+i\s[4EXQ$.cCXU=mr)S4iRRthRsra)^=Q!g9'<&'G#^`SB75Rd10FB,)b@RmDLic!H^BNe@._/I
%1&]qoBAYk!q9(6.)OG7Ar2\Gq^0TjPNC2RaW_S%Is'm,rrU]0rmE=@!c@9p1m5,?>X5AA[kFQ"/H[,2b"8)cq\X+3';C9HU=5V\L
%f73:6Ef2$S[h!)g2h1Qo/pR(&2h(\gn+:hsRkLE6.)5]1lW6<"s6H$Or9EgIT3m*FlArEds*=M6c)]GOo\](cpW*:cs7jS$kFA<Z
%5J2I9<:1q0*p6ckH1q1ihJkpYcI]NerN0>JJ+in+jEd60U.a&VB^=pE:UeYWI6ZOic[3_R^O6%Ajce:XraO[P2pZr9h`R$M>&T62
%Dr:KQKC10$ot>GTn%s.kmf/RdVI)LI;87DMo$/i>p>kn95JMOC0,UqVc[Va^I.d@$pA`p^l],?NbO(dsIlb?B[=7UN^O5V7:U2V.
%^AR\[d0ofs[>3/qg@gO[s5D4`Df5U6b:inp=)uhU4Sr/srRIAb0>?oTqWd>2B7G;*pDohfJ,\fHf2'-\e$GsarTbPTps\XAY?j@6
%YB]%#j)sPBnQ36k+V4P:0/*>"lM7b.?AuqK/RM*l5C<8)p8bt+nE0FQ+q3;tqW70PC+%p;$9R5E"%4g.2=L53s11uF='^-8r:3)#
%;ndS#T"4KPmB=NNXSLc4;u.W/^3q=Hi#XKEeoSS%o+TM"^NoOnGKb5Po05Hd.FuT.WumtI\R"C\Wu'[2B\e+0V^LBZEp!!M^KPQD
%^6)uH?M;,.ip@,JMnAr2q357"Ie)k^=`T!@l]`5Td\XR.r::\^`pN.dH-GAn=nKULs6\i:s7H)KfODQQ+7M4U>:El"KRYPu<W49J
%r8;KRe`nB/R?gkq5Dm(FIC"G%M/G)^bc]h-#)_8JfC-!1\(K@S`4/EK6S/]6"(UD]O1`a:LQ?bFoLW@7IIql6P1S'ifH41Om6Z#X
%+Fa.HlgLJ'rlskTYFiK*%ZBe$b?"D(-2<er[udn:$%H_BG`TW0+#VKkPLlj!,`9ss(5IgZjS[nr+'n'q,Y,KWfDaLGZ*]]7a0op<
%%6q8^Q<J*uq<$a?lDYij^</*DWO^%6X"--j+@dq+Q6hl"6?2fjNh[Tk/@W\Xj!WrU6hYQ1]]:BpaDjgB3=]aVLHI':<9-S!b2JQ.
%LudQT*2e%C6XDXY.$'0%-c@-_O%W`p9fU77$jSfRF$^77NY:E(3(_-4b9$t%-S57Oa%;;d5KL*rj4_[HqW`tYGff%.em:C;I[hAc
%%X6r.EZF2n98Do2;rjuJ,`3Sp,rq]`a5@$^Q5_hZb>F:Pr7NaTE\nh;Nm&_"d>jl\Gl6e*iTS@@\T.E/^O5.f^\_/,5P@&2A&jFU
%:68$Bmm6sQ+NO/(07U/!D(c"&063k:`\?b3*9\$Jn;SD83=^)fF:jJt.WPX5&HP7#MsO8dg5R(BOe77G3"]UD@R1<P%&js"j)=!<
%MC]e/fMeBE.t5DUUKloL0RP'M,%$G9\qlTAb#/-XjT"uFs4;9Jq,?DTMu8'Ui'9+er]Gq1/7lp^Nus3(T&`^^4NO-X?@U%-&\6+0
%R?5ZGSWHW[np+^XME`;_I<:cNr:>q13g#IS?+409D@u]e,'eNZ&qL?5WD/-5'Gci#,i*VL7hI,:4#+lj[CD9q[%nfXVTK</VNZC7
%OKU:b$\s*S4V_Ma<p@f&Lo$;<SRj@TAV=r3]Rl)L&WLaGd[)`;5t8SG,TNtJf/Flu?6lD('O?VjSOE1A9Yi,_<Fg('iG^c6pq($t
%:<Z4R!<:R/ol5ID*p&D;S\ciGaJU6IkPB9[*TbY?)js$!'EA>i8ju.Gh<_'"G]OeDOe]7%J06]H*!d.0.>gqJq)%nF$6+Zd>(dDQ
%Gbd=Yh?t&=F?uSP-HHM3q!fR@BDc"-BC%).8#j`Ob\F.Rcfl"?<$>`T&!330T=oC#;'sa$4&0+'ml8_3?H.e"068=<4FiW:c`)e9
%Hbu"ZpL:uElf</L&S+t<Z`cf3>iPm-],[`dc/Al\7g;48SI@iL,M>n$+QO4*8hq6ni.uhHU.6#53RNnnElda+p>tdOJ>A\(d5"C?
%WHG-n:s4inAef/FL.pas%6O9<TA?E+bYoAjF>/t@3WKL.08R[-Em]imVcX-kGTjfr&\7!9;(9]u?&al.L#Tm>HDE+NdEo%V',hN'
%'0L97A',VO(odQEe=MQV5S\9jN'VTB"@7lP4cjf>M?OO1`J"X(MPj;\mC<3<WLcl_@$SB-p-eaF\Kr`7/q7..B,U&636Pa'*"GQ9
%@\k?-9[;("ni.oC%uHffZ:j:1QR8,KF@6`O+qrRK92*thh&8_.]ZAJE13F4<3J`o*b@@T#HBt^p,*>u`(+qLI@eR7?PeC0>1.78J
%MW:FOP,D_S\`Rp1F?)'3A<ANq&TTQ]"H1?;L1'h=2jN7:ic-Q@;7U?cl/TP_UG!Af)&Xt<=<'(4#@/5`/dY$##1m)a8sXZ@#)]0q
%E\bPng<>^RZQt>`3a&dtOrQo"pG>IAR3[n!M,T$p9FVgaHS\0"N$L2J*/tLe5Lf>(1cpkg*6q6;UJ,kK)@`_i7qZ?,X!,"=G2TNm
%JHRCO#i'PAE7[h"9;__ZhFNXoO17c%d[oHrH)#gEI4JG$7=sS7d2=-&$<ge.it;@FqLX%pa/*CXlNM[gp$_,Fr;Fg*:L;h*]DKmB
%d&V*f0"/sj;g/GW-/um-8><M\bl!+W@4*s"'`A1ci?2;AG!ZlDCEdT8@4Pk#bIr_q8aHU._OErP7B))>+)*NU.UB",]rW*O:*UKe
%U[:<h.EW9<1/^+JWl.'NiMeKF10OMFX,Cn'GiqN)0=f2(>uu*s<)dkXU#KTtR@83*n>`3]<N!u7eX\2&1=Y0\q"i<C&$]tN&U%`q
%*[a$eqLQV43o&ga"MinT_SmbVF/81h21"/BmlehlLYVF6hpi6!jGja8]055:4$Ml@LEE/WGi'C&DrX6`"F;(oX.2S]/E57cZ-$%P
%lt(a"DXm?c$FS&CQF.Z7i.<M&R2SOOM?s%*ZqR,o;J>^Me2-\+VHp#a\#1BnU:sKaPGiOP[15ng=ff67k%LE1mB`6mqdGYe6)Nes
%0ZGG,N37]pW4eU.a421a;lgpJ_2PX!9?eed5MBY<?(6D"j"QMRXNS3&V?]i)A[iFldVtfWf6W+Z*:`AdG7J@X@R0Z.jhXGm&%Q1u
%c_J2PO?:2:N;#IVI)cKla;mM8c[Us:^.Y4pqP9"9_n-)Li?i>O:OOG<T]hRb7WanE.'#5,(@a/NR+mI@9;U/?a3i:;N-#a]I3L;;
%1M<r(JbNrEY#Ar7Em9=.?uFic9WNi?<>8mBQITDu=gOX0P;dTAC)=:.<o@E:1;ibuND_YE?lSf:f/%VnbdjV(BH4FT2HjaoGKr%l
%L#Yku(af#3X`XRtBe$[R?1%=Yj*mQmDQWY!a6,P`CYeO<"FkQ;BFl<UM"J24[@-<dCN0Q/oAB%JZ2^fXU1q*VGelZs-Im'A1`U>/
%8f`*mG*=l2/?>Y#h:+#(n][ZYZKO>CP/F*a!qdQb-qjUE_JX$O"iGWoN>4DUJ@TP'DTNnfcU#_hH>\^-(:>))/82HZ[1sT=6lLm_
%Wod3;89IldQrJQ7$Ro,THDPD950*PfFp2KLf]7>*gCfp)caA("Zfa/l5[49Mgq'&*`"L)9n\T:WI&rHqMhbrPk+P:ma<>bTd!5bE
%+*>RE++3L+V)rj[EcZ;C]\1J;=DlP]\8eF9dntk6a^dpt"l8_2GSC_j,aseakQuqa%sro$R/j01p^-/jdC7C(4TTg0n-%MQYZ%5j
%"Zh^'PpseR&>oQ!)fX9!9sH*-\G6\LErn9,D9h(:_4-K-EU"sjfg/Ae3>LaWW)LN-Kff#EKrkJ@!IJQ42JP'LF;+^OB2R>'QT\Mg
%G#(*i>1JAHBT'iDq+sOrA'c<Y6Yno?<)r<\Z!5#AHM"2e@@"'2\k,oB6.>8lUClV4(@,7e3#uFKSH$+lO?8I>nb-o\pDg*?*_0?r
%NXn;`%lr^2%m'/#3:"F)GC8njs)maSF7WP0I+B^<29KQknu;'P=egAq.%`B>B8uKHmV!MMU`rV7F8^S1s%DK&'Ub[1nU$\^)Ca"S
%jbC(?,'0/(DF#'*Ktgk`<VSEF6[YJ*A-(orMs.V>LpQ5mAp.6NIWcl@AN-G8>l%a@VT:o`cTAmH"lIJbRe,G0CGtD^UZ(8)$/@]>
%"E'E./8NIY!&8oP)%@g=CQ8:OCfO19P,#LB@a<2U/Iu`eEg+hA5<jEUF+6003u-gB^ZFos6<Qos'V['-'87hK#>(%8DCKHt.Co>B
%MaI4gm\^@A`?Uq1pQCf,J&09]FI0T6(*WRuaEorEMhlVn*U5PXrmT]0^Z3@`n#,Qd:G>(>]KAKUrG7(%&oK1-h]i5+;1uImk!`D-
%0oVB.6+=).Qj/T/D@s57^jnD]=-9_iK"?VWRJ3Y1DIrTX%ULF_\Hl=Yo;O8VW%'#WF[T>h7[PQJRgIjor5=\?>=P&UZ1JsXA$q93
%5[_$&hQ#_>ScHV_d7'7!d`>>:**!/;DanoMk,3*<;k)mFp<;$M9]$M);`-eIB;c$X:dpE0S>FpJ'3:W(Ink1BB[5o'8#JccZb&uK
%N]<%U&rec8FaMV"8!?#LY3UIOE8c_qn\S^!ElUg;2tn?e=_?tC:;M4FJ+0/"\n?fRnP7iZ*M;fq^/o3(>T,LjYc4)*5r+H)cS`Y*
%R?42cIRg8Q0;a.ss"oIt6p5S;(HO03S6kIH*#WG$)2Wms1t%sVkqoc1k$aUJWl)L8'=4ffW_OH=JsocC.>".&#*J`1crG#o&!i`\
%H.#PWk8#tj[Qmb%PPYq'8!llchEB)B!4K36;db0.L4CkdA/I!km2Ln0["HmFMc9U<N]B,eHHO,ioH990_k)qHF7OZYIb0%K!Ro-;
%f;"@9NRXHFV#NU%5I47ufcEM%c5P1A4Y"M48&oT-M"_tT*ClDWjp*!i_GSVi\`96h[iFekLYVD#B>)X]TDOY^?tT5anC$tF?=M4[
%@080.QAhs-L775]F8Sh"hnNdt1Ug_u_joQ_OPKgM>RFEoiFsn-\d0m5c1<$Frg//3'irbqIfktST%h+SkFb_.Pk'?h[W'Y8-qX()
%$70P?Ue;h.Z/ZfbRQr+.j'B`>"cMdNLX#mmq&gOH0VIR"$mXB4LYVF$`RP28jjHG=nAC96q2d\po:$7Rr\NI%%*1WR10eb'lC+22
%m,.uR9bltV6Jn:K0qFB,6p_oW<[".@8Lon*:%'@)95*uqY<B26,F5[=<CcLTF7f7TSZ8HSTp;c>F[s.9W7N)5rM0G'6JrSX6aV<n
%,#p-lAR/e!;*?R/X\@Quo'(7&VY^(MeIX65I^5gH?j5)-bD0l1hmBo)0Mt@uSJGC!"4I>[Y.]DO:A(7D5Wu\/eW#;@%qVkH=L7d9
%ZACKhCrSLVANKD8Oj8tK5B=e`iUHR_mMuNip-T@*p3.R=+$JsQ4&56.jGja1l[=fnb]hiU)O:Sc[R%In2=k+S9[ZVZ"0i>@A0%`D
%EUnr-qgmH,%R[!d!_+;r<'5D![7Ca\AJn,aWr.E7S>`WOXJT!1iL3c2NV7-r/S/NWA[3a1k(-WQ]!Prb<OMn8nk[bV8*[ZQLKCTI
%8UZB^9i0N1O!0]oZsdE<VB0/j-7a'9N^4F7L][FX-H+S)`KE=,.<I(29M9:e[KSkLPe9^n&oGPX,,S"%:mXhPmZpn!/%BnPjC<JV
%d0mWEp$b,)e%6+#j#bS4lZ#$OjGnH<5482na7hUN-^;X'K<3%7@E#1t(;X3@ku+i@JDknjgRf=m<gI'J2LO^/VP%!akOC0=q(%5n
%r&l@.dS;F>'k+jZ/U3XTZUP6)D6fY;Ef.E+!X':5@7No.[]EqB@*snC[KRF`.^.LR657BhGFZi-mZ_^NOp]ga.d#X9g-"oJ%KlZ6
%&W?QEmcZ2f^*As2%'bc`d"#+7:>*D<HK?o5$ln%t*O@)aAC;$WohF3<86hgU`=7I/',$j,!HUu9)O)o387#[Y?OuEFZ%A_`%`*n%
%@ZeO>G@IBh=a1&k^50Vi`+XZ[IP$UUn=IT13/A@Yh_UGn#F%Gi.AZ_FdOY(ak+F99Ls+VHqL,nfGUfGM4.[>MB1KXVPWQq*30u^5
%1=>P/l0gOUc1i>lRN`/u*Z"`7R43;9'Qe6t=Z=HW;'s=uPgM$,ZcrB&))V)&QH^aZ0VSq6$o'WWABLAJG!/O&@cS?IbUbWT\k.#_
%#1PZ^Or?Ldk.dR6HHgf7of+>lcl/lYkKuc'No<%"QrjW5pQ/[PJp&ZHbfrO)'+%YL1)ZjL3<<q3'31`;%F8Snb:.GTE?^B.fI\#.
%:GnT."2eJ)7Lu9D0_oT[*b*W`h]]TYIP:^>&ELf6f-1OPjLgAS1fh".^C>2+g%OA`0tN1;HE<Yi5kipZlK+lN_pLW>Uub-:mCS;J
%#N"D!=4_fYfD\PCH:0lB'XUXYSN^NjXhG5kO\MVj$YUU5kp4-n-WHW`<#u^Q6\K(cC?*dMfoqPt[SEq]4I@gJ0WX)Om]gl+AbAs.
%pjMj,\efD/pK2j%R/j@QTH,ArLhgHk8r6S=8k^mR8k,s"M))2gdA>MNf`kK9WHQ3o=:!_P;#<U%\GiR@k@H]uRP>6:no8A4kQUB_
%*!9AFCJ+$)gc^BDeh+2pn^a?CR=+jNGg#Vb<f)1ia,`4PN[*qiR%LK1J'3(98Ye;Ce/fIuaI5rKFP8mu/ZDHCDqG/=;CWm5!=\L3
%<_Og5U*l5^8KN1pQAaHL_##7cea/SeZ:(+rU0/"=]4B>83jW1RUdrr0K/+$QKV@uK_2M8-,";ZF7Fos_0dUMd^pX7tL]E.W)]grV
%L;g6b8.3f#BCe7,ML=lbcZf<]IE0*cLBFR3@(o*?!UbeDF@n*7b_Q@tpgcc=Og-SSh&Zg/5US'r1-9#EK=Qo.&27'L=Ah[DE)!c%
%A#LV8d`P1[)%lb&Cgc@sM`Ho*/0!tAB:V,g(t\QFGW93%;sJp?QtuB(K@kj)F5kruXE/T2kPS_[$_reBT,i%cTZA:&B]Z&%:CGKp
%IA?H_`]E#W/$$Y#IY<R1i3F05qV_%\K.Mt*O,mZN))NqGO2&FH._eWME6hsAlmFpfNg$A3<NI^Vg(B3[.^#i'QA0("7[OC$27VCj
%2#KuaJ,IBb72eI%%3]pUlD(<:k&)>b9Y'>Vo\;M;=l3>eOWMf.[90.&XDVJc7ik1bLJ5ijRTBl.[]NSXpb3_0rl]S+@2"CK"FA@G
%6sK-QDYU2dVUhBO??3Ujm)nBU\oa<0/pFtoV-gUcm!'nc#5R'rIQX8+S`[r(NjiO?h*(2B69aDE*S6qqHbH_on:a$=XXj%V-Fce8
%>SD'0YYeuBqo"0>fr4J+Q92UTN"^-kM^]<4b[KVOUS7)/9)k;<S9PB0D@(!caM9h7XGkRf!U[VMc\<nIm@8]M58)l!8SGqdTL?/,
%6Un\br2Rdo-iP061>>skYGV:C'Xjm5c&#tP!gr!8lK]IL\9:UQ^?Gs?31(E81KNp:%8LQ8_;"V?.3TO`,mD%8/bj3mn@].EGERRH
%9a*G4h$4r:P(Gphi#Tl9fsogmal2(\#LA$SG=-p;Zf0_jh\t:^&AYn*lo'W?%b!.&/E`YY(787H[L?g3gb`6LTrio0B0A:g9H)3k
%gi3Dubf<kr?k"$E*ucFn[)R(f)I,>[7KN:-o4SLp]^=lg"7BJ/Y'g"!Gd/kd+<PbD-Mn)[h!lppW"i!]'kJE^YSTU(rp(9S7aHJf
%B-$YA)anqiK5W)2^Fe:r]hXRTND69d;aTpc(VcHNpb$i3J&=>SQtp8OZ)"0Eq/V[F3Mg$T].lV<L1'(*FO^mFX8Wf(oUW*`54B&>
%5rZ%n12=.Q=:;NlG?]1AW:7rrQuJ6%D9%cs'ji&3&$,14UVj>`/*>VRa0F_.(>L$S#3OWT`6N/053Vj(7DZ[P#_G_@=bPIC-Bsm5
%Df4$`3CuifPp^UTUH18%cP>]11ccT]Xd^0[7UpkdT%;.XYm?GBNCo1:n<c/1?s9sX1V%2m#+PKr'5>A?:ZK1PpR^ick6.;(a$N9]
%-=;o:J7Rn<DjsT7UjjJm;q%X$FXk/f)>DV(Dk8fRWsMsbZhpX^pHS\8ZR>B`\Nm3%>2hYM6Li.#OMBj&HK?1i&KCprn6\1)V7SPA
%A+$(4d)T<PX-]"`-&fUWW,kOBXp('06s;qK(Fu@Il8B_G,K&W=O$FWT36b";@4UNOCf>TO>u@9T'_U^4a)qj#RVCI"ajl3[cVWuj
%Tp^PN!:3249PbTlbeJ&\ouuEe>C:;-;)+hR'ImlFnsqo(CiP&pEhd7g8'<kUD5%3&m/WJp5N2j8l#>]199kF:QfSs?/!a1G3+1'a
%*Z`%^8Y1jQ0(:'Q,/?`\=u.-22`Y&0%in%c@5F[fj>ad](]I3ppN$#+=7.B_6u">J)aoftH7V"=-JfGkb[hreU6'*XWd4?=?3\gc
%5\/(\58n)TCT3(.(>??deQT!#b:n5K"W!>5qcZE9rd!DUMG)9)4'\>r/lr:K<>H(]#:m*^4'et^+he"q0T3^MCuomB=4s;t1T%H%
%.`>7,5O*L9^f'1E>G/CiJYCkXdcY_Opj$CJ7/Em.P=Mli;/C;%c8$g9bFZL].jG;]%$&!p88gNZHH7,ujs]sFoe"5FJBAnA0'W>F
%YktmL;^J3onSl;pg7KZOQc&+MCfuT"n*o\ON6mTk6<>"?Wu$r=0u:*3^,QS'V&*(RBUlit=\?RiWSt(e?s's22&'K2FSKX\IIG8d
%oYuGfN'P/cGkJ4o9b)8c_C'tjRnTP5]ffK.pW0T(fi8i9T:2(?m`H_;R4i0_g\)uHHY%>&>.kQL+jZ1pLKn^<7tl9kO!0abcI9dC
%B\njjU*YllG_bY)J9#)l4$MXVh=JaF<`0]5=)I-o.p$a:&OhdC'lNlM><qHog_I8kg\<uTIM[DCd:o:0NAldHbP_n\L*H%nQCA_Z
%2.(=<53VQu[J'/[@kYaNS%UI";=5.@AZUfFNQ8F&9,m`gblf2DZ:oKP9pqofn^HdS;mX"%>2qdM!D'*3+Fm.j3(7sOTlT%R,&eKk
%H)[5KX*(tA(9GQ;/qsH(*b"6$;KUXf_e)uSc/*QH*mXlikPN`1EQair5'<2MbYa1;h9_j6J']_/qmJKU"uq#uRru'+^?(;Rd*i?j
%JV5W>nk%Gb1]+B)Cj5-rb/^`V9L`VC8WuYo9a[u(?QCJs^9&l-//3P>.PAgOlcrIIk2=X,lrWAI+OV6!=p%?;-qU4J13p<kFI79H
%RuEuir)n6843j<-TK`4DX\OcD.]b_Wbo772GFP)1@3W4mVPUH$2+uJ#U/nI2V;bi@$.8-!\n%qk29Ase#pVh+4;Ei5e9fsHTa,;F
%"^dGs;qknZ+/e%g@s)8lnP(PMlf\>;*(t"OdF")E:"!I7P!IhBZUN];VL9+/2eKU\`OZ:cj.ANY&"CAlCp;2SlT,N2[\)!#HQWm+
%HO^7+DTU6q?k*P;UuD:F]F3Yk)nkm%8#UA6)*71jg&LK<D6Wrf3k)_h^3sK;W^]!NE,tuej$/d#kjI7^+Bh?Rh`*lL_H!pJe8;9k
%^U+3J3j%4@rR0=bT[+Em>J*s/!]Y._2`EX%;Q_H&:$MLTo<n+t30WgV0Vt8W.^RVr3Mj5(<O/p#W"C3k=<LZmXq[#a6K8u'1I;T(
%.(6`[h,uL78W<#<ZZM_S*t3U7C-8o@o6OA[-EHKT1j9Zig]E6)6D!c/:U'0H]]US>niqHPbIR2_[S$P?>q]hs%+1*-@+WSIcV)[D
%+2-td=8#2;_)]^kh,=,8R%Y+"aAua0'i6TPpfLZY"2L=nn;3r,A\iKFgSEdkj8m]E*G.O(4?sfQ-9eCs0TGCH-/t-1KT4nPL@Zh=
%j#E+\4I5SP!Y/C(FIqC]QqjEfRH=%MNfb&.lDDt"a*6D%FroUfN9='HE>Apn):`Y\_(F&)q_BhMI:69!6HIm.7suHQFl__jT1=Cf
%"a;#;jgXJ00MB616025^Am')+,XiJ:-4Uu?QmH4,M(L/iCrI&K-o(q\?FDDIHb[#.`FN)j7K1X-]sR6q>F):<3J7AU)2<o:0F!6D
%(OZ,S]C)GbqTG-m3SncAouGm>^$iOM1N?\Td`hXq_HHq=`8V4*]&Tk,\d$cPj`rWE5'5ueK$h(cb2VJoB%r`V%?Q$'hYB!^>lE=0
%.8]Lp8?i42X.a^H'@r.XZJBd^BC?T_F)a)QX-*Ef>@6ZbX`&Ccd<D1#k/Z5QZ2[e.N8\PISituua9e^3VrjfL@1#PQ1:t][;)64@
%PZ;j<nZD8g^>8X7lPm"qGVNH^1r0RcrYh$8'/[/O[;"I,^c/QI\,#F"mrpg&)l`Ej5(7&8Gg:VWqk!DKDVs";C:h*HcIX?t$nP#O
%YuX`W;5XG'6Bq7<LFP`>MI*h1=T4]B:]m.iF?Ik!gneA,X=c"><EXSX:"I4+1JHIZff#P!Viq8Gf<9)Gh9qK%FP9&V1Yf@6iWN+W
%#;YR:'0KhT?]Lnp-'BU0_AZ)5dBjXiGh8PCgE!m49e[OV1dMf@:>HTIGRrlFT-20Q#9kMQ@AWF_pX#LU_k-V-?;hhF7%s&Q2cG'@
%pOKjY;"bXbHk4$a<USB2!M"9%-96h]AU!6K5l9qa?F6_g$P4WY[5aM@D7S)kr:W.gr@H"fnY<'cBa,k*Yj:it&=GHKXu!`(9%5cZ
%I>52nWqa+WrhO,3(SU5uPg+7"pDgp(aP-hTD'6q.]>B&j9O(<rS$^0^!]Wik$<_/0bpCI-IaC.3ObbI9EO"M3>P$2finZB[mX9.0
%aG%]gm?r<>i+"bXI]NOW!M^UZ"NuG3)u@&i+apiQ4Fu%,p:%JYXY9&Nr>uWE]^NnsJM+Pl)E*n%fh/a/nT^r$/r&dHmX0<eZ93a6
%c.9Z^3W;^3Ii*-9Vo@8Y9`kbNZ((!7]9m%4e&H3c'DF%PUl_1!b/Sj"Db+l?##'ltBWkRdF$9i83EC\$N!Y+:AbZ[1IKh4X!Dn62
%M9dsI=XH>U`7nh^h\Mm_f6>Oomo!0@-<n-4%f)Rg4o.*bOOhb9M^BXf6-f8!(\X$41RE'($DrKk@2+a3K,On4PJ@BL1]8EFp>I38
%2dPm)0"3[JpUTo_T&,6-rZP(OS!j!oQhMlJA67i`>aKT.W`i;06Jpcka0Z5(\Q^9N$1@MY'CHtAo^'iihsC'_T03&gbd>X05@\)n
%0sJt@fOkWZ1C!Oj"8e%.IE'&d@pkpWgWt,bB:8NG';&jq1C!QP0JI5:k3lWir:9NeQZ&J/r9fIrAljE[c/V<DpH=!BoQOY+H1U1l
%oh4i7pHO-$jH$KN_1D')h)V+1MYK=rl/\n4QahsQ>r@b2?-)F`8+<>6NN`">s7g7)pIG1;Ppc#!nLsb-s&]4!^SUVLdLEhGmf)I#
%/\>pCo;^\h99B.SIcoMp1uET:mPgWtnRfPhguP'hm7gpHs8M`gopb!JVf/0?HMQXp?Zs36m7I;#s6A/+h9W9SD&r8nl.]ih?G6>M
%s5`FZ82l"hLM+qO^\Riqdl5%or=,q)^[Qa5j8[kpHC(CUq="0?jJb-F`j2u<YSXm3@e<e8AO5RZ?^$uYnVQ+4gPmr;X0@i$F!4eb
%>c[Nq-s*'pQ"C"[54<%!>qIIiFhV.<*(kjqEhV_H:(7$U;n[46N_5S]0o.7$1mL-U8Qt1IZ2]!@eLOTWm9Ik:V1l9<i)2DD7;a]d
%Q[)DkS62q).XPld=7R58>4PZ&\OfH(&g,'XV4nL'I$1sWnOdnVhhd)tMMqDDKrZVfmHu>b/R8NRYNE$?GUGR0e.?d4*'`!FhoK!'
%m4*W's(T4t<TeP5?k,*O]Sc^CeL]SiEETdQf?UPYbS'eqr[Nb"g=:G54o-j)Qc5'6!"WE4Y[(hf2/)J:kMCn-^NO9*22'H>UDNa6
%gtoSDUd8<K/pm[QDpY\Ok;<!HH-_GujGi5C7&D3WDKFW^Xki??CQ^T&nIstGH*=&6N_m_7#O)4#+<<6mg.NM2PjHQeak9`M<]gEb
%L1`(.Nj=OU8$a'Rig(i#_]9]]HDQO2KWc0],5@*cPd%N>Gs,fR*RMuD6*nI9j;I/nO1?\k&XD,1-sXTjes>O?V=@/7Ggg9<<(:VR
%OKq<p!%hcegW/Yj^XS+]aYZ;)Oa#T7d]Q",3khg/r-'Uk(Db*(>plc&f7?(_A4bb_</T(Gnq#BX<Bd]jO!`'i4L3'i_j9GjN'dd!
%:95G'./pmPH89=^ZG4KO[hHOA8pn&UC%pU^=eDT7_He;=11B9^al+R%-fg1$1rM9jA0p\O*b?`Ug)BTfLbe'S*p0YR_o"/u^#ONV
%&ui7=A6bVar$i*N<TZ](d)nGXb(%P:96b+C]3Q_2,@)qN\p9E'r**d"beL$<NnXUo^rcjZY'ucE!'ks'M@)VJ==L)AjAW^i'^]CE
%"V)d%r^tBF$mM:-.pEY]K[>lkBl"@jfrU6U\I)f6aC*q(),N%QXqoDNc:P4Ge")9q7,!J1R6%'7B?I88l2;l:JPQR$:spPr%/N;>
%'n+V:a\(!bFLVi6Q.IW.+K+Ki/.[l!P1W([VaKbSBj%<^X;EPR9GqYDTORMK[\^hnU8K`ZMF`_o>L]MkYG`NmbrIh%N_Ot`(0NPq
%Wnet7Ms(:,Vg3QJ?L""S0/!Y:`+d%hFB2t2"%AYNUAR[9!1u\i6K?6r9&Q%mRde`A6'fk%EW`aL;;(eWi-<]ajZCE9PS5diMtFVD
%/@Fit,-+Q#&lZ+6atACM'WMXO`DlK&32i+#Rspc1.a%jIR2Vmn9B?M+9bG2l+<*DT7L4o^GKLKW?D9BoJq]L?.q-1JS!LiVb"IX$
%)58i\VH[aY0IE8EJ9(?YN*=RLi'^_aTM#rq,K::mA-d[:BX[n\BW_n/RG]:F73<-2:h`M8fgE#4Tgc]!9=9/.f[KDM/.)Q)$s4`(
%?6ccjU[*p?XbTDZoJX<e#.k(E)Y)h8"4Gq54j,W:ej12HVu9MUEk,\BB9^P/Lg_hjVdLJWY0?Ud!gPB1d&rTV<mqCpi=>kt+qndl
%=EMoa>$5#sR/>+D1.;3lR$3O3]84uiT+<pjUX,,1;lZRg3B6RV)'Vb$O"E,W+q=J@--<Kpk<rc58m\lQ5aJpi'-\&\)J%N)7#?n`
%PK>G#[:>4WHV&Sf0+H>_%?_s6/21PG."nE,]aO]D$IcmVWq,^oW<fqXd4d01]AtR)=\W)(\or]/4Y1*%'BS=3As8%W4=j,5<++:[
%PD;$(pgr^,,\!4H0-?W!n^D[F9R0b&c,;Sn&mk(3`2EI:\;J#m20jQ+W[f?s&=6tMJ[W"PDRfhNM)<E147@;tj,u#H@;1a;T,Mn$
%P)=X<.Ar!T#!nBZ;cX_)';YddL&j(Dhh>I9\>^I8AOo4D-BL1%k_RkL?7@p)HX1NEHR0NMg>T2hEG=Oi8#P[[`/$%.(Q+I94$@C&
%cS:_cV(5tgcAPJ7?6&#G`^#&[/"\1m*VN"M`=oS6?[h3n8qrIZAt?`A*.?BRR,K`F@Ti=qq/<a)jZL8JCEhN=Lt\,]DR-9SI+D*l
%`)9#_b1KA=E"jc9^3or)j-#S'h3U`"McVuF5>7C4SA=kCc*EQJ>2;ocG'SfN\]c)&jI5R;B_Kl>6-F"+3#LX1S8.e`V=?Wpb[!d#
%d2mEI&-,l&ECZR,BSb1t>-D@#D^)L$<3nl%a[RhmEi;.6K]k/P3+A7h,1C;nMc(@^O7ANeC8.mU(/`Ij2RKcYME)sQjk)hN;%74j
%>H+l--9"[M=JLaK@?Eok&WK[K8&Q[P?!"omP3"['W'FFZV.)$1]^"h"?]moM$gmWWd&O,sH<i'PR>3Q9C<g@fk2=k)Nsh]J:uUo^
%i$DB+AuXoj_XnI:8d-rk\RffEA=B7=jh.*&h&Yae`g3(al6V_Pg7Zlh(gp\293Xf\ZGcrN>/K:2b9LNV(Mtd"AmL)CKNj979@D;a
%G=ah;7.8i@YdJ0'A#Nhun20<tI63Pm&2Z8BT3].rQSR;\FZ^I7nOp#uP=U=n:1u%0P9X.a.RLANFiB-[B!i(:\uA-',Y)"KHAA75
%H4Ji<UhhEqU6DLuMIeC3%MBbU2WdB5Bq<?6jE[K@Kpi7W<,DpOMcYREm9H"LN-At-ICXU=^S:j/J'P<-p^:R,e1QFFR6`uq%*'?*
%-L`kG2m@`!HMtMGTC9ZNIf9LoDO!`4?gRdcX#I5S^&2dBoDS[bl-g_]r;P69-TLoA\6'HIJ.OXX8CDdh/g^`=+N2tC,,$23M=[>W
%-5^)E*hb]->`u/!1q-oVM'jU0Ru0[e@Y9eM+H&":L#r@>eC0H#Z"l42FO[kjE2`aceiDA%1,6_cDq(Um0*XHB)0WsIY,k"nX'ai)
%K'1W__[70">I7u=SY*Vhs4cF\d^s?]-*Gb..dsB9(,T/bPIIi'X4CPb8&?BJkok2Ni,?9lCOaK[E3Km]TqIaQF%9;1l/UL%E[5>t
%^6m&`<uiZG\:b`W6SrJ>KhG,Cg^<$nEWNKWb%%A-O^VWWi\)03,7WW4_hoj];PAb,\8)cF$3ppm6[*!FKC09a4"^o22n4]^D:#[i
%VH;^!NUpZ^8U"a[MKG?@\B/&EXJ.=.n1tF&3P:8CM<;(@Acn^1!(7eY!$V:0&(q@E8rSQ1Si48"<+#kB^e=2s^^nA2>$e<nID%,f
%g\>4J$1stGU1UQWC2^&7?SAUFXVocWoNfS+>r$A%S5E:Dki=$U.H8H(Ze'9lNmADT8bJ>c\9J.X]hhas:Y#iR_QZ.nJpIUT6@3X<
%bYMMe/.a/s0mpcubffP9N&;G)YRtPOH8qQL&%*?UR`'N;?AE=P!(+P)UUu]]To2I>["u65aK?;;k`*C?JAhRA*Z]bH0nLTRJ@(sm
%Q-njCm,4r9(_jL#;&8p0#!K>L0-tDK(]fGunC#jZO(-8ieNBi2W3<%-1/5=a>=c@gb47p$XYmM-J1ulNSCB0lo!3cm4gOWdp5/2W
%M[=9SC4!4'&Q%,R74+ur[D9$^qsgSul3,=HdEOFRMk*C3VZKikR$k8$_\qu@!hlYUQsi;YDJ>En:\YD1(J)a]0D;QMQh#G>8SC]&
%d#bJ)'@[M`+aR/.M&'0C9nO3TM<J0Y42B=0-A)]'H%e497raeKOq*Sq`0j2>!1UoJo"0IY!mls@2HUE3!kV`;4P(&.FYP8^%V;\c
%:?^_--,Be[`j3)fa[&R`_<gk2X@?@6]SD4cgao5\iMO\rQc$+CW?AhqO>E=oL%u-?CIUu2AK\<_Ag%R.!a9Al=[O$+]Lb=>,>YYu
%IG32dkB4CB>Ec`:2d.TMRJ?3<<g5"E)?.L6/?XVh0r6D3]BD&$qe.+L`tenC+>%_=.U,eAL.$l,.HUrWV8jE`J-sLo0a5O1&-]6m
%=Vpr`-sJ7;BL-!^c7fnBrZph][+*Y-E@=S;c/f<s<]Va3+B*YS<PqOC/A0Y*JL=-kQSt9BM:*PB\P-UcXmdCn$"Ah9W/GsGd#5@J
%/%RqZL4H43:,N:S:Ktabort_@XCkcF0H@u0_Z92*hk]FC*5`SP0RgXk-16pV:SK&`gN?>hX^G+Z'3<X#3e>6(F^0u@BoTTck"(F;
%H4Kg'TVWc/7$"XJGNGY:FlMKCe6UB',m?ff'.f:Y:?$1(e"X!uJ9/Ad"7-)#'9WDcaW%H9L,t)['Wf0l\CXWb]j:3kGsIo:HnSZR
%IfPNC<@e+C$K0$b<hnJ'oJRI+m\YB?kTBTIM5uT&@tcKU+,UhR;JiFjP*Fi;_#^V`P;go-K"6iM8.MEHRi*j<8CRJP\Q.QeQK'Op
%Kn`jBO9:lRL2&!don7I!AVAp)ji8KQ1lUWt!j#03X#Hs+N=)cIn,X0!/Y/2")qW#.]KT__Q&Bb-de=&KFG;pcD%*dY>8"%HYo.B?
%CMRlG8&PZ*]CfJc,NL_W4VY./@`lgcLZ7\48<S8_)W.]IJP:nC;o_':?;,9_3k>IC9:HOA6>&&#=:mJ#h95kt86d+;="u(uKrWN8
%Ge7&rA7-*1`L7Nr>q!$NdD)uS]HXAtk^n0n<I(;`eC8W$5cX5EI/!(b1>q7U&:fFj!]u\UGG<Od=>grFR<C#a7j,'%rSd8nJ?ZE7
%Y^XL:&9D"2"/_5D8!J"[I]R)q!AQtu\TB^S1e$&1n3AlDTL>-iH^TP\<F\d#7F4pe(W>,26!-Q,1+[H:F]fFTZruc2m)-G'Ib58J
%Z!\7Q@2G3SV=o.P;3-\g$mbo6W9E/Z.H$?862eap'[Q7W/E"ERB#+7R$WWq"Hj=_bQaRAP?j\s"*#OKd"XQ;D@9`ed-4F:GdoeA%
%519Td6UX.!64qRR.<A4I5ugI8HKieC(Qm^O+ZrV3>YW.7o8I"5WXjLuK(kTP_b^M@kMSbpKoGdAdf?V(+Y=ZGXu%7.X?HW#!051A
%aB;[.[qL2'>c_EI+W-WUBFq4W>R0pHF%6Ad'bOsd+[?7abIfGTF6j\c'-3LZC+qu@@=]PtBQB,e!e@'>)K:]D9eS[G`s^HnU;&$,
%(%D]eaJ3#JMf#+#Ml_j'$`Z7@q:0.aOGMgU$4!pTi;k&Epgu?6:%$W5,.5h7MAFeHMcgtUi'9@U)FD#'<2&(h!G5GcdNID>QmbU(
%-sQOO#-(nU&2hjUa<_CU=3a-o>9;7d;\>#,==(&Jo&_-4EOFYi$m-#=?Fgn]E/N2ba>V\-GUk$\C%Qb#;ckmcprFtD<+Nir2't],
%8p?Y;a*_b"@)N=K-MiYj.L,l4Tqit9nJldKU8q:Ul`gFV//Z@A(:DbeA-26JKLB5"*I@05Cm@>SV(/A+8lj#(0b;tq)O?,ED7tMf
%Q_;En18.P&[VL\X!<e(ZcOk\O!?N9o<nH1M6\=?nO`K*.R.DuBI4\K*TILLs:IHWT^l#*R>!t$"X4GipD2.*m=Mc86%V,s_2-F$M
%.Z.Mh3!O69*q@ip^`O=(@l0P@;<_;G(;)=:JaK9NUr[\n5D(PT7cQZ"I-[^!f!jU/+)n\@NYE9ASBS(1A^QLU)W<aF1M0jK):&pr
%EYaN]W0@k"ECcijLfHM.7CR+Xe2Dh%#Q"Z#>a')6!/^'A8Ll]^9T3kY=QBnL#?dq7$H%@6FC$1c:`4n=RD@]Jo1HrZ5TES);I:A:
%cj5i811na$$EVhl1"i@VTT3=sR&m2HYlsSP&jrNuq@SAm9?`]"`!E=S(PLE0c\T=m"Q3[edFTt=n1i@JOt;Q`q%\kci'juS%UugM
%I8=[MeA@I,JTiDRJ4,A&M[Y>[E(lN`2C+9'RV820-V6NSn1W`a2!J&na\3"nO9_08d_IQLHj?!4]+/4bd3V@2Pb+dE6T"d:*TB1b
%j(K0C;a*b-"pT7tX.jm9T,FS[aU1OI3$L'CkVtmb1KOh$6`0Ar$T8g6T=P\+hp*g(M;VeDae`F$(`7k-&Q46L0aud)hZ?;FK*0Pl
%&^$$MgmVN;Z.L:Yf=7!^Bq-B`%PA`U<1lYq#"p8"FC:kt]!4U!0"%o2lFQ,n<.HD1cin;aq\`.G,he5[eC$K&51K`TEk$7hFk2_P
%(D1rk\sm[I!u8*AaD2tA'IaMo?BBUKAO$q*Q2W*!V0+Lape5;.LpDU<0M952Sr>!N!=L#-b;"!m)cd?_0TQi4AkTdhEK",P1;%KO
%&]#?9M^BZ<Ht8r$$@gAXAejg$RO");O0kR*JVB%V))6F^:NX5e-AL[M0kW0rk9P67R1Jt8(D"p<N\;dR@F/7LUp].ZdfRi]>%EMO
%pP#YI1_V2"eq?WN:':d>r!^9jP8W7TeB>]m:*t1DUd;%HG+CW-1*L-d:LQV`l]=44D_rYKW];HRG`/IsC^N`ja,7qa6qG!L6Pj8"
%P4_E<VD:l+PVdRK#lM[S<D,UWE$@Oc3#(i_RK(,(?AMi.2'[k'])c1\lAsa@d7h%Z?P$DfYaU@ELem]4Qm!rcG1DLOC1K`_ZM^.C
%f`H1X=T<-s8m5'#e?PgDZ!Q'CKU?.F0<&W,:OL<F,o&jgd)s;C.*HENEe<3l,Er@,=]6t.FEA=:V^=W>m$a9j@g07+[.C\Va:CBC
%f*8[<eD\OqS?07]OdQ;O9gR0V,%'i4.>';aLEDD7a?Z2&&7ua]peZtM"-&t-"!ie]L"TM8VqnDId9_AH<6f1qEI;EIjj""8?r=b\
%08N'Thhlh-fJ;,WO6Csa((G`Hogm?KkCep?[gMnl3h]Z[iPD8m5r:E/G`4O]J77upL@l1c$d]hkl]@S#3fZV3.,cBhD9kVj8[Uj"
%C)l3u3BMaC1/DO2;O7YU,%mpT%Si)jZk0<h6EflEETnAAJED%UEIa]<s&;;%TIl%@@WcXEZA6doN*&^g`fH8?N.>J+G!P\^6GiE8
%(-g2]d;/FXPDP*`eZ:>H)knHC;^uUFR4$RF%'B\-hg1uj8*1C!FF768_oP(i9Z'LN?%m6(@QjoW.0jD#3RuS"MaD2hl1^(<@e]rS
%akJQUC!f<e]IVf>ZuEDn.mLAQcl</%TOGr_RZmoJL8g;lHc"<N.s`R$06A@X,VlGXi-DkQC_2V0'_n_TZ`*<i0Q.`&_BNc)Tl%6j
%I*S$jr,mLBVnio*=eLE::muOn?_@"b1cKI%38C_DFnMoRV?CC9TeJci.N'g+QI+&L<jASpFh7ZI1+`kF<6a)PVPP1?W)+"RNGL-'
%9aXO?,S%ng-:Ch$Wfe)K:IsD3?6GD/HlHZAE]T@q]d/J9OM;K_i@l]Q%KodCnu5SD+)a#b'-0uS8Qi9[h3.G!25@EG!k;h2*PU`G
%TO(#[ORRqR!>&G2U.3-8^oj=+gF^XGO@=^$)a]+_h69R<c4d=;CgkV?jo\jfj9LJf`""@&BFDUA6J$`,28>@&Ic$D*@e/l;!r*^?
%JF'neEb:[GoQ>rI1g_([+YZ16H^ajU@Sf)5DP;[C9%8Ot=H01;7T4bl'iSo[0JG=/1&D_Z+bNNFAk<]hP(R5EW00]mWa"E!@SLeD
%P-"0FOkn.s2!,&F>fH7b=lY#J]0#!VWII(KF@fOQk]k1"f2OQmO<K[<[nK;\@ba7\-3dt2-fua"MN?Ab:h3TLEU)jBjuP7(.A.&p
%%5#ZrMo<?(?E,R_4=hM%jEcS=!XY2KWq%p'V3#,Oq;-$FJFo$;NJ;I?Me3M)Uk?Hb."+De5J'YR7]8i0B]<mg#q-."4_kps2iI_t
%$9i2nLKt6[?r<CkB0Moe-TWh98H>AC+Y\=c&)Q?YeE2>)6NfRr,+$iA7F$@6Ol4cK>nb9lZJT?M5sL1&h'jhD2=!b;`O\[A@RZ+>
%,N"#X--V[bkV0pMUg9%#Ep>QkHCId$A"h%5=9=:>beuag&_O'aZmWbG4*4REd1,^P4U7kLaheA)'tJ[)BFk;W#H%0`AA,c&#T#>8
%K1@8cK>1_2,lZTdIi%+,dGmmDmgUO.HYKPhq)o;+(VMKpF2d]V&2`"Q9U\bJ;%<TfW$>*]EQg!;SdI2`B^\Ak7lBt%P=ia6_,+1e
%PU.&?]B,m&Nr8@74Y<egkaEg#"B^J&E^7;J^_$sV-B&,Opr"XqU2S/fGJEe!GO!pjU^sui=ZXtT>t+6RS6feP'p%I0\.Tc46klc?
%9cU0.nh'iP2Db`;Ta"ZMFNB1T6M&V6o#N(G+;Yq2,CpM2^'+V0b8CpeEZ)\l,dbIaoN4?j6=\f9)72ZN4bMQbf2`%,\`B7KN;+$T
%Mo"7P@1(H"RC/>2]sGT:d8VrC^0\sp?(an5+?`nUdVu3K^?9>["-ep=dNG9/#'2+'AnAm_/IPqf:]4-;:t$SYf*?,=c^]`c0KiTM
%;Bc,T6AEE_[,`ZY;\k_><ejQeJc`<5J;7k(J?pj=<^g_h/db<-nYKl!<+nu1P^u8s7HU<,Vl!lDNN>qJ8VPiY[u5ed$q7LN^[A;G
%@Q-,rSVAdbk_0lcJFd`dLtRCrnYEbVNGL,T+!,!?W@)(oJ2AFN<tuo4-m2Rm(ckM5Hk:Z7qVCZ9TZ#f^ZXmZO0bnrL]*+jFJS?ah
%IN8mM,*%N"j-^=_=N4$7*1sDId<B8T*Q8dF"DC)t10^-UA=$m;de[VX&@@7ZLD372"`Q7_>993IFW!u?[mNP[9PLm>!K<t:O%NNi
%/s\>X/Z908%crE\!a/j\#i#Ij9Me!l>)7l3-r"*daMF?3c4n6XG_5D$%`b4tEMfYq+J"sM&7WrS"V;hdELs(I%.G>[T\!4hkn.kd
%;rtuibfl+OkQ_pS_oU"'"'G%ITe]?>T;P^NB.QFRroV'JO^m5-.;1%4l5>l:e?G+(i3R+1R7Jd^&B>RKXP&kmBK'*&_d:_u;P,Pg
%d!@f'MM79-om!58'q#HJ'KrmtLGFaf>#3(fQVs$=aRVCQHtCt/GR!%/n\,'7P:c)7G-lEKRhLb)Lh(k*_KZ9Kj3YYjFe>e]d4Y)C
%S.gUR(*`1C%8k:^n.t"V2C@(`FneeD&lG*M!\1!siWC%0@EM=6g.@Q91-q&VPEjLb]f'Y8HSU9WJ;";.d>SgIY^?%8QFpWm0N<tC
%8@X?c_H!nm5?lY=C3Lee"Tm#\"@"L(M(E+F\f5U(j;^l[.B_\.hJ1U28A8h`RC[&@T=gSjIO$TZ.NSogJ2i[caIjO&+YmaC^dDQN
%_s)DQ<_aljDWL-$SV&Ob,;WOa`=j5+5h&aa;"r2FA6rUa_(;MW:c4UY-,p<e"aCFOdKHmi;@J:QVks.k3d!0[PV2%L_>f;^1q[J.
%1?GW+9-f.j#Tnj_MhKkpdi&h*eC'*:p6lKQ)cOYf.U[dl^,7L:ql)+("Y&R7(f4c0Q8Lj$>4Aq%0]7!0he?9e6I`rT!&]Fl@Yl&P
%fGAYBf,T-Nnuu5NY[(r<4(qr@Z<Vd-dX5GUW^MYCrl(1^*%ec:U5[Z0]FG3(,:0W<k96aGaci.XfF6>#?+Ct2;iu<t(.>IIU)648
%V?Tu$,G3qBdmZK2Ku1GUkM`=f,'5TS6M!qc_!0(hD]Z5&p;=aGn.m7@,?ZojJ6iU%Z=TOJ%@*>H5TUMo7gk7S#FOmTh9KWn3Zr.!
%'tJl<-5.X?7E,GQ`C`W&4&R()__Wk1eU,.<n26$JBpZ#b(,!Nt$L+4W:%JZV!p;<gAus1XW0gl9221O6;Dk,T2DEiWeVlgtja*8g
%FtQ)SCXkO)k*_nK/c]jc:.!a.l-=0D+E[\-b[:oWV2JK^XI'8GBOr_,A7/U$S>RA\VoLH>KF&ZM<;&@<>=?JU:=4'#/_0Ml![8W:
%`dG=umZV<4FhBF=9.lZnR>5nGV/([Y7CD>ddPbM0K)J,j$;D7$*B$4RReMCt>!0C*:oe09J@T8\N#D$WaQd=03oLf%V.QcCA<@oK
%6+N6/@mu?Ui%"q.PCSs0aih7\'ar2Ob;(KOVY>'&62Ed<3eTb?j[J:haI%ad5h$>f!`LofWIr;r'G<Y50cmK^l`=nt6"D5pP>M>M
%:0NML(8R=$\21/A5dU;(#U!WY4L=4DQ!2R_.]b?u:U;mY@eHK5FCkqIF2kp`7:p36,gMi49g?QKXal"Fh6muT=a$b("epc2A$EbT
%\8p5#/SIZmc1JWq!sG!Q._EKfYc^Vk:dJ$7GtQa*4T%ZiUTf7l0beTp1=g<,;)1S*[6T])6LeG),*NOgkFXg%:FsoBI:6ZrC'4hp
%.9[*"Dm];HMG@*!&.eMhP6oT*U30eD%'VLr/CL27EV+TH$pE'fA>uq*+*]+0*QhgAJ1XsGp+YL>%5mim(AFma0O065n_tMH;DYRC
%(P)6`K?T"A#p;%KfNTeF?F8j'U_ti8C/D9DPA(rI%Rqs6"gk46M]"/TDq1>qWf]o2a9ih>q9Yeb4\.R,oR<:DXJlKcCI#oPPh2FE
%V?Ai;1872NX?d,r#3[aJR0!l9$t'B.@")O(8?fbm4-77i:m$@6S;>Ykk:E=BS<XTJ71A78hPZ#@OlMuE#_oW-&rfJtBIXW](eLWZ
%=F\6;mX53'#<"/^?DR$UTe`YZY&)\RNPJI0_/V^K<UF,&q&7S63CErkr="`*=UTI]#5<n"T2?-[)8j@gLo8[J6BmOniU\`$oUYh:
%W9O9LG43[.n21+?LMqY=jOq^p%^3VHb;ZX(RCl8/HN!-Ln*R!=0DYS6pU<rTgj]-[4QQG)D>3X/m/HMsnCJ'/:@D>@LT5K3RTS(Y
%J"`uq:1Ic(#RfK>oG3)>9j%Ni7I[-KM?/"m15muY!LC(uT%6Mi.ct#u;N07#Bc:mKN.j_R-oF@HV:1;+#C?YTRRk#_Ri7O9BGnc2
%aEM,H8YJc,^^T!FqtEm4&dg/?;k1kK&O/bD/-=\\.3+C\"V\Y&lkIO%W?_Jj>X/Lu8>h+Hph7`IP-VO=GJanXiiCp,Zpn7V?uF;+
%@)?@"^0]Du$X('!e&4B[/r^W('jn]b3N6\jTjLm/W0FD]I;Pk1_fc'<oX4BGr)(iBGUTWtF>+Bi=j\#7cc/pRU=Mm$#1BB=1Hqh2
%#lR>V#K\X[H!h_hdXlaa-uk#:#5'F?S!iP.pDPV@G%-`5Y<Zc5&kZ,n'6b()hJ&6p#3LZ'G,>BeZ.8T)$oPR"F"B;((5D.sU&lq]
%ZtODO>1W0KO[:0E9OK$h&rNjhBORo)d&tUV-IQj]a0'r9Bg`.^,Oe'o,:eYlR/5?ZaT:cG-HRBG/CN?J$3q_YMog0"MHJ;X1`fUj
%BWn1#]cmOi<^3m#d6`j,K,:o@;'jOVQO7#&lnn:B<6I6Kg=9:^@O?bW71*)#%taq$2aAmJJPdZ/J1j/<jTDFu_-Y(h7#LC6nh(a^
%jgnb16UR08c<fCHh_`MF0?qne2*fH@op^1:e'2XYfuT"G-7ho62_LqZkulWS-krlolh7EVR+gp5?6UH1Uct\W[[)B8"m[2&#3P+n
%K-Bn[Gnqa4DSfKJ;)p`a)hT:HQVC+L92"0&btY5FR-DW",:c]t"=$kgC>*lMd7[=Z$ba3EM"h`sQ8_0JhV&T5/n.o!3Fdqu)4%p:
%22WX)[jXD50e8`[I;+`[/`p'MM:)0g,qD/S\#)T*A7M9iQbq-[\,k<>_0pQ]fs*r@WnXCN\"pOlG;ZK66V@Vl"br-,<rhUM&8O[P
%/_ri+c?SUcTdM)i"t#Y"ZA'4t#V[cc3(1o<*oUt_6-7R9Zj%G%;+3!%nH9VL"_JfT^?o+C#mMk6BT`SLJZ!0Sd:-s=]P,]Om:%ND
%Ft",2<kZeM'9*n31H_EJ&#`kok[cO$"bfH0kYRf$64f\Zn;WggNARHXm9haU^'g*H0NgukJ`&%VM,5FU(=l\4P6ctuNY[OmU?^0c
%Jost?Gt8(&joAjU5F03];-tZ:"Yr=\R30I=(>UJP\8*""lSO4pR1B\:%OJIV>dVR;C&*ci[0-H;_O\1L2l3H?iKH<:,c!d<JKtUH
%Fu21--h,:*V].VF=@7u02Ul#?P&P$KQu#/_\3WAdKE7LbbpaFKkSX`L'1"MF<aZ5PjPnW`X7017(LC!,U1V6:F;GB2"U27GU<D>*
%"VDp,nrZKQqiuPb:0,*kBC\+Enq/Ne/R#MMH:>bRTSb7X.tZ?`+>l=&;+lJk9\)_2FcIE7Sd:97I%KR"CADgp);e&.7U]KVDS.mc
%"q^4df?$_O%8TJA?m;k@QrhXTHfX/(6&c&<92mNN$=PYG:_P%d(fj:;5'5afd`U!%"qE6n+BLse-'BBJ3K01OBPl*DGu=TT@#.M6
%WYbr3XnFHQ]Ng1LAR2'N7RNRDl^HWPm6C^fSQc[s5b\DLiD=0p.)>,da<b)]g-*#t"fiaI>'4rhI2d1M>h#\qUpl-u!N#op><d&"
%\W+mEhCnlq;6Nc_'YYBO$8]E2p-9d7)3Cf;:`)A"XCYe^MFhS&D5NJd#XH$7gT^cQ"BhL[j#YNo`%lSS,-/s#QpmAM`,#jDZ%;0L
%*(JkJ$<'AE5'U5'&!JWO:h'Mp8LOj\h8dQ>e.>5):+N;,fg03F.#S^f@Vq:I<JI[$b]<2,aHmiJqMH"2TZ.pBL8`8![D[[<"W/W>
%]9#We:^)T2-BL@3,33FWMOJKofUYr]!c\1TPQiOmXT;6b;A29QaV"uus']=fP[6p`?(V'"drcm"!13ki/RFpGE]oWs%@/bk[4r.J
%jP'^!6'2X'\LKt3R41uV7W9bEJq96Eb?D*Bd2OEBB4eu(,:-N^/g<KeBaBu9&5ifGX"`#,BIX`I#%1EKXIN9eKuE!_84>FO@(pE+
%H_e(pi(E!9QlZ8:Xpb.t#BM#NKHd-S`07=))rhX9*A@a'16LFJ]0\Gg7cqfJJFr+fbX#bQTVEL?8t=rE9+M^Qe8fN0L1/6H`KOEq
%m?/g#!T%5<0>Lh'BUehb1tB=-nje>VI1b85Bh(Q!0l`)9adX`gBKQc$Z84V>@9nZ)6RsZ+s!\%nh,,@fK7"OsL7">7^C8J7e3m/3
%Mnf>t=_TN-!2N">frLhiSR,oB*lLt@j>N%o]0MJhY)[#U$`Pj7j"R`FFJG4;bf+?M/!4l5[#>3pa%F,=lYIKDPVqbf!&GT(i+6YB
%85R4MlN13oaYp$Jnb,Pt.N)aE2h8(i>54u"S6^t[JRjfHTE4j&it]kSnC.-n?aV0Ij)^W]&<-q'.,CKC/YU/hd9ubAR8u'F?VQG]
%8.?/50`fPcS+97AU.cKgFhnDNC"8Ad&/8`-"u1^==rlrs0/iQtmUHtpYfp^Q(!WNY`f>i]TSBIZcm]hK1=F:/7?@VWKo)].@@UeX
%$pF\JSm8;r6JGt+^;3Din-H;T)I(dG)GdgWT-'69rTQ'lW=F&_i#)13qd6]OD<7FARqIu;8_J6Zl>ot3ft=Uuh$ot.dRdNeb_dV\
%bBDK;N"KQR750=EGuf(l.upi,4i8*^E+@2,]NcT5Kt^ei?Zc'#g;=X^Opjrc`\*mCQO$uMBCboIEAjIW/YNG".ZH/$R.R.FL;f*\
%\EPQpJ<KM!d3rTp>.Qg>!.\Ws)(:fs<bKNdGR0m,!k8u@JCXopBjd$tUIW\?W8;Q`YHI%?W0fnEE/TGq["OFOm6*+jaE&O9?I;Y=
%c)P3g>1;gHhQ/Ws*?t[;GUhBL=gR1f(73<K#ft$[*_4k6Sk:W([)q61=L=l9+VIkF&dKk4U)to!2f'mF4XUf?eEL\6d$#!-oMo">
%e0,?%H6`EL'0WXRZ"T=fMT&,=]+E4<HQ\LUo(A(MVsMIfMc;Q>OLPE+;>m.56o,4hJNa4H8^&]d^/%gBmU]Z48]Fm;j:SKMP*t@%
%QPPQeUZ;^aFOF&EaTX97"jK437?Z9bS=qf:nQ`/qSa`b(I)So3XQ#C?p!D,3cr-UGYbDI*P1i:f&8eNS8!MCEE0V1j;SY(&UdSo@
%3AAjd:>qea7M93q]-95S^<l6CVCeSZ5[o25^+;!`bDLr=eZ^8c/WbiZ*&K7<Stf$`P\=[/&Xl?C3]WV0UZDLZ)Sr0dQ12[E]nVEh
%,V^DV*[@_)6B.+frJDA&B"H:WA\GHaD%_pFo$:b<cnT*_#dX;Vl?FJOT[Cu0>c+m61(ID,6Kc9$=Vk6>Cdc(>913]Mp+ffBrr@S5
%[;ea*$Qb29K$SO(-HOZSj<s@ePmEm(/+!iF)b(QpddR\-;<GnJ!tOQP<=c@mTXM"25b`k8-[&[Jr;j('WXgdh\nLdF`Y>6<?[%Ec
%QlCcQ-RV6@9(#b\+p_Y$ro2qX!o[*CORc153j2'mJRRV3TuDQk<bkjld,.s5SCTXLlBE8\"<t,_b(43O'Y*9&C;glC#(mObZe-aC
%,Y!/pV6HO,5#C,=p*+pfU[i5SF&9rsZkqBGeEOK+rq+ZWWY6br'3I7f>J4MB/1.$'_.K$M!F)I-l*[g$=`L]=+?IF"8TH2&8q.Jj
%2&!h0U*qYOXH,ZNdY^;_Ic8X8:"_;+e-K$q'WoJ$:o5f2X'2.b;a4+m@[C]r4q_"cqWeo.\>'qh3JQ"]8]%7el_3#^6nZ]cdn,)n
%+DNM9DrnBi^s$VuL$3=WEB$(#(T`;jV^MCralD0peHYn4;ZKp4=6S>d+(E&-?NMsYP-qNTeRRW3;>?P7Or?)4?q07V?,t+"Y<005
%UJm-pL7!AlbE_&S1?0C`>OdU'"u*D(3a.u^:CL';@Y&(5!VcsXTIee`9+rnVoN3ml.-9>r2*$I.'uF#GMR8)AG`BJnc8!+B;7^.7
%a&2841!=*E%">ME?I(o`V.1?X]i&A(c7-FQnU`&;D.S>+NPT(5-<4[D"B3#P#`3/SNE4EB,`fkh``ALDab3We&R)XU@!sOPd>Ze"
%l23+QoWaGa`fE55TOLimAKa"?CUUkW5uF,&]=m:Q,LHoBm.LIR!+aPf;h`;X$C<NaQ=OHAltHIlKhT,bOMY&j,_=kd$p'afRj9RF
%,Fhn0M#a93mfN8,1HJ*\<-4g;k9eQT^pOJl/;K[>ZOAQW9q5P!P41/@W\VTqb\s:.,'"QC?NMEWNgZgro.!d]7"o$-@h*G[K:n>3
%h'.JO5)Tb**>5t^7%@I[^qf7`._O*7^SpZ/AOT&Uji[>A'$@4O(2PnK%KPB1b_XieLabT#R7Ta[WH$Ti98/):g6Jo\Q1ij`K131%
%bn=01K#UoE;Z)V'h)]F.RNiZ9j=CKA?ZLI%9PblE[5/HXSsbSo0HqaWW3>8m6=jt:XR7`]q[Q$[MR"8#FUJ\\+>A529`c`l08cXB
%11rXiE)k(P89`lMNWOAZ8E=5LPrTCbb[bWM4_`2I1:o"oIB=[V,rK6C+I#TK#\HlbRZ&nLh6gUb;?LGL.%DEZ2riGhg8'IBIFT?Q
%PC(uES)8:oONM3)`gSFZD<GS41K:s&agu[&EcOIS_P!A&?(gPI-#Y,GM<h;dR&pe%"Y4D%?k0aLd2<C0h*D5DC?\DgJJqHV4;[&Q
%U2,+\"-oOp5\Aj&KmT4Im24rq.)pg"U8Q^$0R$pVddpJ9VP\Sg>ZtUM,U,ola^$`QP@eZ,lG@Q!e]RW$9XS%]LP,J'%2V6k`uEbc
%'EbhpO2=.OI_ki8Ia2R%=3G2B0U$6`6Rj.`m??$[`Sk4(g+lECr0PCS1Sm'(PYq/0)9%M2)\58T``u.titD[S8LfbG-Ou^p=u;dF
%]N*ES)`D[eb]QK-8U+g"/Y%r[UL$4'lde[sJm;>+EFeM%N1$*PZ26iH7L,JUHs%o:QS\&K`>lcf*KI17%Lq]B:CGL>0o(gVl,;P*
%h-qfWj:+Vn!TCs+D`BqP=BVO2#6P1)QWr&1#+)^(5oL53X.(A>=#_H7^?C;-*%kEF2pj(lJQ/ibD8R3^/U*s'L8SWta.4lRSg0V:
%2g""LD-SXVLcOHgK4XhqaMPJ<;Y"I*iC(7ZpLdIa9UJ70HY3[u@Vp4"9]:ZUaH(+)iLi$H;EoEC=cXWM=MbI?nT$-U30K?48^WhO
%gi6sH>(jm/%`1PEPRa:(cq,rm^?#Y+HNVr#3__RJ.I4T(/E-(uPN@O?60.0O(lllRNXbi`e7XMTU^CPt)[,+D"kZCijTfED*?OF!
%*ZVm!rIW<)hFJ/_#!"Z2Qr?'+#&cpTiI`'h"I$W[#;nL;L]$KXAoRB>7"ITN"p`VCD$Dj0K7dhf\WU$'E:+.tlbj2A!\Beg>@qhl
%%>XHF?j>e=?n!2Ai)@hC%'Ijh1O9l!!Rp<mj8A%gEieo%WPO^;62&cI)@>K!>IhT%Q45ja2RB:.fYMhdqNm`nSFg(U_7/dhB\!7G
%:(L*g"Cs(mH>rG"@9\L=4ZJR;<onLNE)LFj1T1aG\8G2Gb=W;jKnB!;SKFAd>1hqP_[fL0OpU-=+.QQ:0lau"K>TNXL>IY+S92Ru
%/*QW`UkRfO!hCDQ/\:Q"L*%D>X)aOG4ZFB?I)ZZAXk?g_]O;$MYWGb')>Ag;k>>3_V$CWK)>?kio\`F)jAnmD*ZS$!L6K+=i/VAh
%DIj&CKBDuPG&WWC]'b^k;EcX4,j$$3i)lnAc$dJ>:*9f>*ePK'!$G5<N?+OF?*PUHPoUi;!pJkQ3On+`/C93D*ZP_4$,a4Di)jl=
%-osLN>.!G,dt=Da/)rS\i/V#a!U]@Ji!::,p1R)0N[U#.+[uu;!_LDRN#l6q@aE-34_\tQ)W]hJ[#4C4)k7$tg_m4Q@uY!NFDukB
%Q!;=S]\s&"=[=6K?fqX&$AjTY>[%W\=inLfH1<CFpj08A%^&SRn2unelg#/<2KJ<['06l<Id5GPFR>4<*%fscAEF=[3'3LS:j$Yp
%"p7HXdCI*8fpUV527Ui#,cXdqHf]m%.lB<E<L,^`WPO.a.0eY._#_Gfn>T?=j.+9:6oWWRSoo/*YLMJ1FTY6U"uS@hA<e]nV?Y)R
%26q4s#,h@5=O;f2N=2:gEl/=r[o,5s4#]-&Pl@Y'K0']"[!]k&:@bo04HSV.-f6WB:,^nco_(hFe@EE'V3[AcI(aX>%8IFn=h^FG
%S6T"($`\3!PBi0N-l[&CN.C?RADH*:>7<t,]Q/XGLJam,12_'O>m3i)\\Z*r@nc2E2`OhNji6ZBi##@il*W<+31;_Kgpt7H,5GB$
%)]\1.19++)i)o*,31.OIE7:`$$kC*]_Y](X<@M^i)pI4[^oTKClc/AJ)eO&0+>Mog1P91k<\`JcK7g(#J]H%E:0u=GgWBrmJ=$PQ
%F>/>KmUj'$K%ItXe.!uh>]qB*F]NJ>V)=T*$I5_80]:5MgEgW/[SqboYOi<q&Ni#65FDho.:+/.5&fk*&`$gscTSaa6O'-5<Pil8
%/oUk]9[YdJE!R'h9=IUQ#c'0#[M+3R;Goc"9gmq+H8=n-&NJ7!\J8$j!b^VG1=a]=i+NUBT/mQD.i3;?.O,!bMf/0o+Tek&PqEId
%E0qKt1830IdsNlFd?Or!A])&>%=%.Mq+_$@a(>:OjZ,?PI62qu!_sY=U@=`FS(q7j;:h,.<1Ot'D+kkE&F8E3g-X$9#eK]OE^o,L
%-g8ReSafqA!h%o?Kj9AZp=i5C]cX."YTZ[nET]F`K;CYX"9UWHn$FoeAcRV6_4Ar3!Lui?n9?tt3(u5$kKEqO)Rl"3Rp2DgG,,e%
%3u1\KG")JWW/pABD$8e41i2Jj,62AU%4\Kh"Q6Y`;dK46d9pN*1]KE.9Ec;FB)kGSGD#qMoppdpr82a+eld/#E3c=o.R51k^*rQL
%2@SLpjT-@J)8Kt`3b8dK"#t(@`8K@P0aP;)MsLT)XQtFAd0[Sp0"J:Ls!@al\YD7d2_A]T5Ks&_,h&Q!dJ:Np=engXr80no$VRp?
%rbl[dc$ZkCs%UL9)@.;]Ds#:%K00#j/I!,3Sc0QZNiq&Q&1d]<2qFiTh<D\rd`.g.:B+%o6cP<Jo\U'E<**/tDsmSGqP6mdN><fu
%hp?kB\_,LOg&o=&qs!b1NjW@n4WF6951K]*1&>g_j3"Phdsn\PL<4A)rgR(\WLf+K)ePf?NuRq69H<J%hV#Xa)/91`DV2^TJhT2u
%Y^c7E4aPl8^L9-ac=T`Lc#j[3O?rp6OS@"9OA>h8(/eCTfY8H[LoIS)0&C'l_%-0W>a^-]CtQMu9JVrXp2?BWXM!lchi7i?mYq&_
%hl/%VSc"taRk2n>OFK&,M:Qess(6-^V66#3ZXkkX@3tqs@md(frloY["kUl2l0bT-R`W<IS3m_;aM6,4N#['0DoXH88il#3-6XZW
%C"2&(_1gXC)Y5o!Wpd.&&q@7aNXt?lhfsK<UAdpcm?HfXDi)6^8kn)t^Y-K[TK;U%>KEhZ+o\@.j=U4"n;)cpbd?.:J()aNF^k>^
%G7bPRbhlsC1llSE$=F`"Ml"h+,Z;%4G:W8Dc\^i'h_^c/R34(sQ0Fss6ECiMPFIcq[it_ti?LoT47P6L5M_[#'7W@p9()@fKD:o[
%V+ep!rQPa/h&gj<rmlmIRE3-KB2oi1ho]Q#di%s?RW[es:B&N-5/#08rXChP.Esg<hfrp2,jF[QpbLYMH,KVUcR7051A5Xn<6h8a
%rf*CMk0D3MN@n$;YKm,Aoa%6.m,&`'G4COi)pJB^4862cJo7Fak/snFE5#5"6e#7.0W;aS-,t>l%J;Y96[YB%^Bo^97tse;c)eHl
%l'Epn2^53CK$pX5)5>OnVj[CN85(>Y[rHoX;C:--mVbRWLmi4k^M/BO8[sq5Zf[Gg>GqMP$;K:LIcX1Be`[&qrAQP2aM-9j^L:b'
%)<6JNS&$4Fmr\DE5\RaP?`3onMc0@fkeGNhA?\i/NCVWunMC,&_*+7`Sc5,CKf&'UrAPfjCL]a3%B7k-]@27>Le4[0keA!K+TorC
%rYm&UN&dI.)rnjGr<E3ZPLFh'C[bQ6CJ/!e^QGk`Z.$^cs43u"!,rnRD^OudL[P)tN^]m0]sD7W'6TA%%KA@=h\a8Rs6UX3B9u`^
%5I7r2#OR9G>G8/9<rR$7qb^^=pqN4n<t)'>:kip2D7@gjm:fX(B'@D;c+XH!e0IPHJ\6+apqOKur--?aND?P@K$OB*Mn:_tB>a`Y
%S?9<J<rR%2*a`%F^H))]$9%h>LtoDnb&6]u,J.1AB&`gpQ)H7fAN0D!=h'_4S]aXVR>c*4_uIue0>FmMi;Z9<Z0lSYq7g&pVK\[.
%^JT<SoE@\acC-M+:Xp>unJ58ahId%3]IkeH:&kbif7N]*!B:3fLSb`8CC>*S:&rR4[:LZb#Nfr@%7U>XXu(IbPlP&6ULE9a7cl`*
%5oBOWBJDG_k5WF\kf+X6s-r9J9&a^ch`-CO_M8%/WU-%#pmqDR%kW'<s$dDaVo+8f)]to2:M9\sbZ4afU]1NYY)^>Qs-pY;2"*L*
%2kf-6@F*m3L&`_leG6lD<Hb*U(H&RpS%*8?^t%+[D']0pCe)ZaMuXhL/0ip_J9.jVS*Xf?*dKeU*#.=E?r>g9!h;P"/;B\sS=^>P
%UQ^5cnbh8JH@.CQ3:eE[H#?0g*V8Z#OCBKng7d:acUbjF%tj6uZd(3M`NVlS3P_%YW7rmB#<4N]ebkq/^bM6Mc_D]k33tlM<P]4c
%^c'<)+<(r4Y"$[/3@8H%P)brq8J:O)?i'"Kp"qb936RIuEbn:^BhHepl6P:!II>lN8AIf#_`^OK,iIm)gN).A^_pG>7P^M;ghFJo
%3[4YqZYlVr8\d'A=LC"W^bP:L+29*&a/-KS^QO,RKdk=e&o^#:@.GE@a"s(h3_7&OI0$.")\R*NLo@Et,iB*g"-t#Si:+r`132hL
%LC,u3[(;e1SBq8B=??aI^]<cl%0nk]8_YsZ^u8>[[c!\Ygi5PmL4a+KE&9@^G&VsFg=+<rB+AmnSKj&1k5]_]dls[p"!$d'r3.+M
%E8YmsZ>R`C^sPIqNsu7PipS#+)@YO02rlYIJ28'SWFl@lLh*l_<rR#JUp><>o7&^Rs(k@.%4Eoc\?^UZ@0q'&rrrTCOWq-jreCD=
%#^0$oZeE1jQ2/&F%Nep7mq+Xn%,Pnf,&5nOGeY9")7!Up^X468iWek\j/1c\Ln8n,_-k<2Ue^dr1C$?t>MAO4&bR[?2sRg7!Hlh/
%7SI2"CcK2g?'><@358>(:P."iq$iKCOKraA^L8f2hFn6j1BGHY3<S`f!jjQ82k9SQ-2ZiUekFaOY&@iPZ*\@8oj*/I&.bdZFB.\W
%?n9bdS&n%HWP6cS`8mKSRk9HID5k5m]t1aSVtu.Kfd<G3Y^MW*El7M)M^/PP2_+;:1g+JeL>Nio.))s,d8fEFhpqE=*u*VR)f,,*
%i0uipWNH*TGjC$gahdF?N(s[FB7=bW1I]7W^"EAoB^gADKpKfGh]#_@27/Y*)dZljm>Tl53JHc'\Ml"';%#Uu]ogpJS?=ZU2jWT.
%=(6(N.ZiuDBt^e-Y(Ib/@J+MM4:G8/dbeI/G#E73Q@)4B:2fKQ$$M_&l&EeX)RI`Q%BYh^4uX.$,AKirqbH@WYV#ZsB0pMno-4I5
%2d/b_2[I*b)[EY#14#^`0nDXTNL&_/`a>u-Ee]Z=G,Fn$IDh<Hb30:g$3PCfkD_,&A?.ULD[%jklHn4s2'qOHcC;*'?j0%/."KqV
%8FE/B#4,.1]]J`3p5_JTi:A;^?]&4d]F"/(*-KHfNEF/O;PlbD9m@YS!*_d.XC&&>)2-jKkeu-_/"nn&C3n936>rA2S51Z/2d<NI
%C^If&9Q`E6^!X^>nNlD6f;4UhAZ#)HN/TTD:?`5ZJoUWQkm\;Z!VJ%@2pJ.e_b0/&BV$KPK@1\j`4NLChAq1hN8B6Vi=C'#D\<tS
%`LTkPZW%!4dbsbp23a%hIHC*uBbo,hl-58kHs%o3BnBn@q-GM`!JHXVISb>H2_:c1;L1F4=i)&Q2u*oEBKYLi("<IS;lB8b*rqgG
%9BkiT$U6&Q'cgkh)l:$8'@Rhq2tN/(Be-#=>\Ksrl'1$1-a9Cj6g;il8mVh;dCZ2t*/*/g.,p"$8oGp4<$Im]S),RXD)[^9pf]EX
%G=HL@^r3.9d2S[?g&N']Dkb$(AW5"U%5h>#Z!n?n!j,ZrD^OQg%:Cl9_o1.1G%UBDiD1TC(qfr)fZj]djZ@@g[Bq_ZDjL-=&aG>3
%9KT$.\"WGKs/;1BS^JH@-3:J>l)cc^<`-V0H3;::>s16F\)EciV=Z,.WLl%HHF"Fmi7O^p-;^XWi'usj2e*,$9BcniT0_I&l&@="
%SO7!]D_tOK63a9qlT6a.:2fOFRa*n+JN\9*Q?H#AU@^Y21JVjtotUe;V`.cr*#b@(!:K)AD`PLfm]gl,F*aT-6*UhnD[,Ae+hO/k
%Rme_X\<YQJK*o9@8A49U;uASMhIKsO<[jTh)rY,Z0sd'i1Fu$@C;]>]fJ/NMcK\,`(s0u^Z[,P'L,;H7W=XL8M8h,n+go7Se=5.2
%KV1E-2eG8V@>!.#WT)3W1Kn^+Hd;I__03J&RomAO5[84plHLd$]^8JZc"ujk,ZZ/_^?adn$g%0A.QAhBX\[T2H8@,b5iEjYAr.RA
%:abo_lgA4?lq6QFH&&)qUu$3&\T:CkonICb4'$2h]jZ&gn@+U-CREhRQ.29UEoha/1T<;B$<6=";K!oSX++Z]hKM3We+`-WTfP0$
%@5(&'T,R2?j?`q@?^MO-3f&J13+T.uC,h@]J\h^[&k/j83?5oYnF9=Z9/[CK7`,Qj/Ihtj@Sd#'!nL6)L#iS2-*)Z,M.4p[E`doo
%OSRZ4!DJ1'"%!nNXV8ra.`$;Lb3"4:<lEM':roHkctnU`Zn/bc\7=99h;n`=6+Vhue=oc#1>2=`]h%`^(W>Vl=THrB;ZO+rU(,*8
%ZUgogFma%an/Id3Yu:aHA$m3r-7@auLeE)lWHY.%,&OU<Q9nSq-ZViRL)/MDWEH0ecHNj):pjRB^pjH,"e,LSs->MbLra':3O9:f
%`.JsGo\bHoU3pr)8O?RTm^*U2=ZW&>?H6Mu,^YV&'TOidX+Crj4J?k1d38cuY7l[99$77"Z_"P!MoI5o1J$H%I\M!Z1Z'6*\k<+Q
%M]5b:O[;Ni#aJJ:ORLa1Kn?lfOJF^K\Ne^iLn]KtF?s@c>-]5\W[RA2c%]iD1hq,>>=>R?U?+CKM;=L.0Zp+E:fIFJ!N&[L8itbc
%JasE&>mu!XRDZNYC=T?DAU&re[5W/!4.ZUmeu?WN9,>YJdHCeMN>+WkN>rD7^o#_4:B2o?>+P5p:<@LHmALa3L=(HG1qM5J?Z866
%p%o4#!':R.R)FFT%DhiZ'c!Cl&[7Z*.r)keN>/8*Zm)Ch5%-sn0I[)K*Ik-u?kptO@0Gls8VLism[ie?S^@\e8pO@'>E++_1C$f$
%+oJj\DLp'\m`lQ(=4'XbB"3.05:2VJ`stt;O;>j:V`+'[`I];"70R@U$]YG^mfsO\N1a-8g,5l^^f#\tWIV?$DT)d(//7fZD%r6l
%KJr\3(>X4nM^(E:Kl_@lH)hdhnq=fo-l<,1.nc$s8!5i2:3?]0Z3:pckTSOGObohb;b,:,6aKh`K4?E.T;.p7+.>$m#J-43]_\>W
%4PFL*rL?]c+q?28H:LVA4=;YGP@!N+#YLZlAEO/7+A&..PfC\1DhBQn.p@6&8dec*U:)2<J5dPK<">j!)'$CnV>?%E6NJ21Mu:Ee
%:^Y=T_$+Jii'`.`dRD:$3.s<U!lYR`gf;+JEDi]q?d%\Q"bPf[9ejs-09@(9fU\i*"5/KJrrn=j%UNc8lOG<K-7:Gm_^O0XK@XM"
%A-T/+$?8r+!\KYtfSN#;FoZ%U=^&OP/?g#Ar+M+@;"t0hfqX8#KPVeH2U'h)Z]Hnh.8uTM:#EmXb5*kaZcg&S-Eu88O+u/*$T$\i
%mg\(5c)H;p88&%?2d+k+p.G]>#5WB<DSV'qhLP&d3l-73n5NqKN7&YA'gm_D(':a-?lUM.?jUp&1PV2*W0/4,d\,9lNQj"'K#B:_
%i<ib`ffM?b0QCkn%M#.K4=aQr.<'npdZ;"sT/$PMetmqL;Ko,T/o6h42L:B_R;oLu*:gog)A81EN5Sef_n7/\lT%d+?)=*uD*4BP
%M<$>K^8+"PnJYq-`"&B^YZ9&h1>?bW<Ji`Z>uFq$,s`][GEJPKQ;Epa94QaIB_G!&Tq%jg"j]_If7JqoJ&Zi:Pp;Ai:J,B9E7Hh0
%Q3lWL,2:fe^.$6"YWOqqVK80C+s4>L&Gifgf'?uu^emcg71Cl3URRolp9k2KlC1UANDV'Y$c^30>MJHeikZX-&YD>DMur4,G'j:/
%$_hPdrSnRPf3P$\U62^up8N]M"7ZY5aTs1&Y06mi-M(OLB6Ml7c$AhN+507Xh@-8Km0oMiJ93+hUk--oFGi&]-km<p$osit2/*[J
%=pV:K'T+$D@`r/G^kmG%r.Ugq]bHY?W=QNQ\tPP(d_Zu6S1IXo#TC^WEkB63il6MAOW*o`!MiZ0!mk2VC^2^Q6*sHPMUEcWA9a)Y
%cfR9L1e.n]"RS+f>9d[c2!k?/en[Z;C/slFJNj2Hj"06IOC%2@R>Zh9OlsG=-c#%7WN`,F8FW'8k*-=t[Sle0D)A]SeU?M_6Ro,&
%FDO7k9_*8&>Q';]/M2O1`n$s?.Mqcu3KK<&NZF.Jr62j'F'%&M-PS'qKL.W'`6@A$g5<Qr@&_3XZj;@K[+ZFV_@j'j"EJTQ2=5G1
%0gc`jjFJMM[tZu.F,%gi:j#d%7"CZ_C)WZX$hU.6$apOqlbd8)!8n=^cbkqr]pV"YfP[+M)-[_t;pAUVS#3$O8(9BHLM)PdZh_2/
%D_d&0E4'IC2/$MM349:3=MrkO=cV)o9bkP]@jD07LZbqGC#@)Qk,rS_MJg4W7.+1;b88EG7*F"M"Sn289,37&SqLjqB%6[Q5-tf<
%[UUVA.H+%,`G5i+Z>>*0^dW_.klT,"f$QI3<+sNGW2M^H$hMoq_@6K=b`.&_)P8Ms[h"5ue)^\NF7>^3$R)h)\'GEhdF$!eo*u9f
%!:tri,1]oMh8KTT"j\`)q;(r"h$%g[d:RA:(js`M=?D*lZ;m/$RDL\mPri9E&=r]\6A2qULR4/u0U/!,fToe[aJMFXKm/p@+,B_o
%FPgUI(K>q;Iti+OLfmQ69sn0h8L)?RlZt;i,kEY8N3?+]$\gF9"n-j%Vsi'C+^Q70[u]KO$4JBhm3pD2^ZYkeb/AS2njohEX)g_]
%;j?5ugQP)0IuJ0o>#[PJ.!U]LN%`imKdE_6PNr;iF>/HHEs4GdGSO3@'#28%,-hF9Nk&6DKt2c9$._O1,l#_l>)-cM]I4Pk6=dT5
%7W5Ne2jga(T?!LiiFF)<2U^7$[VXq\L8CB(itZLLN*skB-=-l,Ae5U=/\lO"&Vi9^QU2N8YcEsgpVWA0<fB3U$A_7"fZ%C5*/S2B
%FZrpZMZKQWWup%7b2hSECtP]2_=k(XS7Y>KCqoCd^8+3,@aU0j6Vs?jg4h"$,#/;$T9p!%k(*]![L!&[O9*riKU/>gW91"\3Yi!"
%A@`>:75K-83WKXD\rgt8q\%YsLJ\G6AkH!4/Js.s)rBPUOL(kI:Y&cpfEG\;kCL5J,b/PE9oOa,F9&dKs8Uc!ZfX6-,[:%LB)E24
%dUqdL-BtcJNh-BR]5QS"/YA=H[>g0f+L!8'KS9L0>5Hj#EK5B6Al`>3O8u<g9^A*a<Znm(4c[.H"*YMQJA%V+OZ%?e-d*g4dW%g4
%WCcf#fFOdtKqY%[#Qr'=r`&?Ur/h@(/0P$oV-VAABSC2"V9k4kR_T9*SHJXAJU857(-iuBQ_No"oU%8]bp8.tK7^-h7o2O/'Ir(Q
%&grZELEpM/;Jd#;c3n@MJD1*]E1RrO5Z<m,U/C7n9T^)Oa"$#%L<`.MYll3ZW$%Et#VFM]coZl9Fa9S4K!Z?5<)DS:8-</nqK+L[
%p%DDtj_EpF@'ifTb;4knD3)()#)VNeYEJV_]n(;r"km?18?2h0`3,f9%\jC)2=_\?>!N_hA\SjW)>4?p*8m3m5^AsL+P:L]i#%$I
%).2U@B$h#ZL-u#>N:d\3OB2eorcZAR1WI38<E?(FC()C#-LWUHba?aIFfmCU.uW@=V*R=?Pfg?*+]FH_ifIi?YRKNgV392>DZs6\
%JcDKqa<!s@B2$SDL9k-aIH4.VGI?e(ieO1-DjRD:92R"#<c59>oIC#@#9<i@Ht,tTO/,$cHW2.BWDoq$<0-N2=CkHMNh$R_>&M('
%BRZ!:[]1<'lQ3W6;;%Qb6B+qs:X02[@B9-pTA,Xd?PHFG(j!sl/AMmUeUt+K[PMe)6r$$m;fR5gDN7HY4-_VrjkRhZ`i?,ao<)TA
%K'HJp0bPgs9HeYs\JkR*D<f_-/e<1;n7Cla`upea1ju+G7P'>)T(OF<OhsBto,9t@0GG2[^K;omePKY`D:5a*d%Xn_l,H,(mf]Ta
%!D3"/HRPeB@.i0goa94YA6Rq7UsN\W<_tnp*N=__U/ZF?Gu"IM+ZQBbJgO97Q<;WL95U\^-GaBN"Q:%-;MZ/Wi1AI,Smf9fd/pI0
%)W(hD,W_&)R[dIm"_e0=?W%XAc6^DP0p#gl#6^M/-q6f$?\OZF>Dkis-3ZhZZV;MQEQgcX2LJ^EhZ090!cIK^TE>_?jPZmZ5R?^`
%8ck!2Sk)jRZ)9>?1p:NiUL:>LD+3:fPX<<!$gf*%%PsY,[f!X5!E_q(VmWCT?aSmu2@3u^'Z8D=+BN#"NJ.!sZQhZ#i-*U$:m>p9
%"EMDAGBAh;VhM>7=d_qb!Kou*IiTN$N'Ho#S.^&PlK$aU;dTe+oQ[s*ibAupQ%aKM`"ot.2OoFs#tKi\9Wiom.O=-63'iDY!$%:?
%)plI7mK?!K=h03=QuXSJ1$"3OZM7n`P/X^A,Rp%L7OIBG8L%Is4]*[M./3fSSrXVEC^,o7X8jb[Pb\:L/JV=k-?X*$/b#(1>)fE<
%i]tUF<Z.9!>MR%dc>"o(0**1'!n@*O0r:mj?QeH=')H2)8pD1K'"Xr4U)mW,7"*7\,tQij7aVQ12>:T&2%'an!YGF'Rmu1kU/[!2
%OHIup+W*6&(8?978dSRqB4Z#'6TD'*-D8`:84()YKIoUd+H)%J,@'ZXBu>)SBcpnMk_-0g8I>aSi22$gf]Of<Ea"H_o8'Y>k!-Lj
%9W7Xn)ihd+g!^SLL*6d96Z9dn_4IH4Z;o<b/Dj4^g$h:-m2`*flI1DC&iLIBm/]>)Sbe.nZ]Mt/KKn^,8*Zo_(![#D%JnJchT>qD
%Kd`BJLsQge4&>9%,Do-i"]VPNQb_WV38S<]Fe+a.Z/lUj)Mrd!Y1CK)km4Xrf*O4gMBZ22UaAr"Er$SI*4;c*kcI\A(3Cn=jD7X/
%,P.@4Z:f'C^rIASM.1K,Z124N&u8so(N</0o'e>25H-!1le`WE")9YW*Dd,t"C4hr#sCM\"Tp@r$=b"5qLbFJ]N>RSi%2cjDVGLR
%P.J?gb!q6iP`VttCE:EO;`t-W8LjB>qkk[a+%;b57k@"a($U]G5\T>:kIRX%[tl_.<"U-u']Nt^3mLoc.pWA_DSn]qR`YpA+`XAL
%-gSQ>0t8[jKB7YN[BP7h`Ld>\0Zk65>&MmT&rXB$,o;s`"E>YBM*gW`CBG<ZD7-mKqIsqMj2f#K&:*_;N$N2Ah!1U>a7et0#ooMt
%1Y-;es,FUlA53.h*5djWS6i%Q@@[\m!4WEp,mlVN":`n45nnna':5u.2$4c9FJqd^6ll_e`(_iDRluFQ!^,\>Dl%h<k-XK=2@=X4
%?+u+n%#@$,oF2%FXp!a_PZ&$Co>n%im==q`qZb+j!hH;)=eVmu=NsT???!2gCuf/6UjeKjE<VqaP=C;V#c%IK6DKL[W4c1q-cq>%
%:;3")SZNu%J`)07,aGBOabnL49WM>Xf$eT9oetZmZDfKNK\Xs?LDlO=c_(mcN!\S-lr7]F<)RiUp<7?k@G1prOF]l]LP$f+K*uCs
%UR7313*1pna/ZLI[](P^O0TYrSDpN9d`>V:!$<$pP#_e4fr>_L),en?E]<TA?uh()%U<O`b^(8A(i%V26XaqoV!e<^b.()?@WW?%
%[kRJ;]R8e:^l$j$N013qMma"U%$Zj!PM6Oi9i#bl:,\clPk7&`oU`W%_3BJXig>bRLjb7=0A0O-aBWE=pempY,/&QU"gHoU`CDQ^
%E7o^V;ig2&NcEZajX(:h-%496W"%\0ipd\TC;7<p>\KmGlS@gt4rcWZONGmMk>J3t.#hsJElCGn'1r<9L^_C8njOp8Gnh-X_[6ln
%6iam^2c?1O.51=5_*O)D"t$;4X\Md?OU"/u3Kt@E$lMDFp#h!t!SS^%!n2NIQtTm!P&_FIf/5Bn3sg@%%B)=G&rMHGB3<"jB06NQ
%M?7HUEAD)::0V7["7o?j^uf0e6O<u=j!XpMTnM_Tc5]"1\d.JFne0ot""WjHnO2#)ieb?&%9X#.lQNmUj<lCR3utr$8T=U$ZY>&B
%oV\D3,`#H@=E#@F!s!(JEgarsO^U#tZQ/^9UOb3,+/igi:Ze*H&82,cW.O?*38Qb-R&I'Np^IQHUiKoN\j/'o')LK6M<_G=7U&u"
%>@'1d'Q-P&%;'Pu:ad1:,f!gK816KE!#U:YTTfJ4^_Y&c/)EWsqGqk!G]6?!TVP%?\6s+\5u+gY0gUmhB@/T9&TA#r&6J[Q$!+JC
%f81-Ziu),&*uInkNSpDh6_^Ke*`c-p#V=\,X8q05R$FEbQ=BG2eW***2nHnIp7Y1k;$EKHOhHD6'=8<p5961`V.+M-j9r^++FuL5
%g)"OZ9KB<5ikr'd:d+p!%fR=g89.aB>(UTo6I,kb,jLI<T0?QgruB#2P6@;jJ-o['qR'9d5\H'R&KoT=d7VslaS8>JPj*a,#O_mj
%W?HM;e4hsMGtD:Qg]?=A:Sh,G:hKA2@-KW0/iF?M.\It45IPZcT\(<E_XNebe6>"+(3,kNGlq!.CQ&dA2nJaG0[7\d*s"mMe<k@_
%:DgUb"%dAkM4^GML.i0Lr#,<@Mni8UOF.ho@]K"&"jB?*[hDng\W4m.N:fI8<1kn!Y]`+L*QLZ+r_d"XM;'`EPT#Cc_8l+kb9KoS
%g4&@#-l@i`M&7(ISg8oF6TQp(S8^6=Cb\qKE.0Og+b`/u&?=gNM1M[AOQ6kgisSZ\e]K&I31tP[qr8DHRtF0Xs0KAUnc066cnb*m
%[.2ec1p)l$'dZ8%I_'88Er/>=SkKE!44qQ7FGM4\-,cD5!&?DI3B00ce('<-/V$eP\@XlC#1kYUI>VsE&'4l"-+GhD*,QE%.a(q[
%.!U&G.M!YOd!MU(0oBGC7':KN3Vo;:`'/lGe<LI"*.Wk!lg<WG"0.X%/Ju]B?/Yd\9oTu]+M/':^tJ?_7E0kX82Ol6*.Y=lPaat;
%n9Y%:5-A=u"^i!gFGLYE*?rD'LOjAc2S]c*OX>V@"G[gPR6(m)A4LW-#kK5I3)Y>n.Ebr*%e7>h%1oMd\c<^_)NC\(T[5n28gbe$
%?H#?c+D69@1++/,D&P$f6-,1a!<D4P+Jbke#;?j2f[-<g&f(SEF;_q27:8+u.tMu50o1-\J:eTDAU%>'"qrD%L$2T!WI]@_W?c1C
%-5.\%U5qf,IF1(^'NtgKgAoF:Fc?5"_#[s(^hChb,'83l'akEnp(BS^?ND'1i^ZT?=W"t0e>7M>,>%T,K#g4/$Io2rPnH&($9M@G
%b284ePn%#&!*W&,"o(-j^?plTNrkRl3ee9(28n:H_2ugH#"):<N1uBh8E;HRGsbKX$Ai`A"J`%.US.R9Z8U&JBZ.9Bq2`#-KiTs0
%!_+<1KeYosIopG4L(ARSY`=is60q`$Hj9@cX=o0iV5jXjd_s$Y!C\5!OJ='<OO^cL=b2[U1<OYaf6qVFYbQ1Z(%WIc75;43r!An6
%14,kXq6OR+4,cVhmfbEm"Tos<`j:8h>=gf_4@%h/R<"(X/3*<!,)Lg%@9m6>TY-1BP!\O?-!$1444&S]63=WI+`C*GKOmiI@K<_g
%&l2,88rXun!;F(3B9;n(:,rH?ZgVTmed2Ns<GEhJJ.*s\-H5%9\.d+3,>'Rj97#-)fNZelE'Adr!/?d-GX`(H,@F<5)</j?N!p]:
%MV9dA1iNY=oP8.0H;3kC;=Bk4l-UgB;>%FB0mP;.GsY_q_ZRd@_%alU(:h^!_ZckN,C#>*g,LHr;?N&)3ma9:b<[K)IXt+##U55%
%Zbp&Re3k:*S@h1ied>gsKCCEnJg;mkoNI?NNCrRl46/<0*<YDi&\9/hj$N/7g$QAa;^j.",n[$X4R@,]V_auK85ABP#4ZnU5*Ger
%WhLbe1%GZ`Khum2$NWU?(HsaoPc@i-OS+AcO3Bp?BbVs-D/XAoHZIb^K.%pUTa.D,-Otc>=XKD2Zkm@Y)iM'.*QFc[MC7p<;EpH`
%>#+BSL;G"r@a?3<bEB?IOks[+1cd-a%bhbn(8pf$dd#'UD1njR.7b0&8kMb2ZQQIh!#Kkp7A$0+1&/GEeA.C`OAel*<01_8,Z1ot
%#u_`cb82KsP+s;M>Gcll,p_3,>ELGS2ZV?FKU=OrglrGP<1TQno"i\rHQ,?Q2KBtc0C!&2b_slSS]G%lRF2kI&A8gcV6)0:O9-2^
%WjpobhQJas17OJ(Jh]F.17a=!;aJjS^l-oUgIKA90cKI/Z6Jl7(Tm8eX&?S4!ON267BsNs'alrO-&8J%!QD&kMNi'3@DKdSghI\G
%5hao<aFND]^ejSSb(,EtaP47,b+2(UCV?sG$HkY#@7*ip`^mO:9uNr!@b#`jYp`BJkqjl97/5@J'G?HC_*AIZdQ9N6K>JJQ&Rcq_
%NkD6djJ.lZ(<9n-*+\cDlF<RAPXM>Ioi1Nt-&bNP3dl2tH=ZlXAS^H$,4K0\Xk"t\/'k/26Gd.db#6EJbfWO%9S!57+qR;\#;qc?
%+_eHo-"0Xb%I-3A0rD7UE4'Wi!"s4=5uS-6*U)pM'/!"Ap2a7_0rQ6+[i['NJ-9RL>N$_AQI.*S\=V.=^6(["Wj9+H"sb(Of-3i*
%1):7[>(^0E;P)'hr(9`lJqH+^49-R'Cg/0%U4es7Tb%cse1Xg>MC:BBA_LB>r"h[bJ0h'-dWUB*>;Eo$=Y5:]%K2X7@0*)OXN":>
%Zu@N^FG0qG<(`5pJdL5;+@\s59S2_@73rgq&nh@ND'dhi)\ldaPgdR1TS'*V:@8L_Zq<OjO"sl7Jk09R,2DZB,6WZnH+4(;qI%3X
%._u7G.7*3&+j]=55b^p*>gqqAJ\%OcTFHT3-TKF<$pljiEhNZaE,:[jlNg'*5ktb'OGa*"RP]%^a973bV%L!:_M<p.:*-r:],%AI
%'u_&Ch8p#cI&AVdS6N1A(H""-`C;,*i*`Dg6H(Inl/4fqQ,-(kSZGX=U6Nb.TQ]`1&RXt69)76,87HBo4/X;0%bcQ8UUEGaW&S7T
%[+TuS,:Wg9>GUo,+b;Y^?Lh]CZS<B9&P<6b-<X`8,i_d=2U_2^kcg_@WA[s*jA;C`VA,t<apm".aa+"X4_2GQ"KpH,L2H.!-kjE.
%`#UUu%;Q6kL=!.VcZ;jA\CthcPfY@%GUe4Z2``J]qF(7sbu^ZNaHOr&"htgepAjEE66=3]>kH5$4QaaCBW,!m*KJ?]'J.%W@(bds
%"m+Ui74AO7)ArrC*$Bu2Y<ZSC.30`"S$Bi@/tWBu&W69-9ESNjDIDU.@MpC<GUju9W.D':I:T=<4B=D86j<"%)sAV`-*,nN+2DLm
%+[XO[K4_\P<-B!3Et2P4UN+b=Z@?&\&oFm`@?<<P\//`MK'WW#>LM*l1B:XBYEb5jFlbNM<Ct4`=]9Q\E>#!T^Qo7!#L!Guc;0AF
%*HDt'<.BZ,-p6-I4COb\0uaWFcXQ_t@#O1MFA#,47p9gNb#>51#/)K1[>?25M;DPWJ;C=?!s#]/CXc#T5Dn^lTRCR/fp(H!Y[`O#
%OG:1o@?-`4%.M+rU]_"%Fs26CfU:5RBZ)oFgKH6<ShLqa@iH;\=NHmQn&m8u2i6jod<Ju<?+,_$-=aS5)Bn\`?Xd<>UDI8^L'3\R
%:m-ph.f=Q;K66)s!\%Mlqcf'HX"]JOh6=hVJS5<?_gdt!Q@P_AoQ19cL*Sb2l]BP(71WBHV<G(]a![_.FJ9G"isnR3=\clmp_9],
%b]=kKANS!MAdQ]4@MlDD(t@Ji&@tk9C6du_Z=Ob7<Of)$>XC*+WOF(lXHEL[M8K]%qF^E"#pCG<b*o6E96j9b7Go$<TFM,^#DEjD
%"'n!^?gS^n=\Y]=OJ.S5+a//qN$*<NKOura2j']aOcgP-A80ZZA!Ts"'N&\3bD*t?Y6JbERfp9-n=<[b8^8`h:l6(_XMWNV8W(U\
%Yj>VVMj1E``f3]ROf5C<eFio-Uij"a(*PG*AlBej[L&a/>/LDZK4Eb!0b821GQdi_^qk@qL9WQ;)9m,b!f0,<(6F_&=V.JtqJ!Jt
%[rn'(^cL]#+?pG)q\Z+V>M91DpL'J*&t[s[%+1^`k-Dq<"+_?RO28+NS32h:(KDm7M0(l+'F8AB]kCNa3^u[7H:@;;9t)N,&&"&Q
%6B*c9c5J'As(@i9gu8TWi/ni>TVY/KB.rJH@k)^Srh9#p:,+:.PhbasWWcFT;<(LV=%Jic<@nbM7p]u@]fCKcE$E._<Z/V[8NEV5
%Z8F_^OG\l=j=m8U8eE<_]TuOa=DNYX)=`pN;af+Q-8'L:I"c>?b-B)M$cjHH![PH^_T5-UQWb",6-W<_$*>BrAE@5Zf"l:a</`U=
%8Zs/7Iaub[]b"^I"e5]u_9A1%`_[!H7sjBk9!N=f$\`&j.M8s58s$cN(K7O>6,SM\a#cjU88sG97#9d$!T@.7KWYM&0f2RC0Z7R<
%'VG3/fHCZn1J5@fPFtRk.7QoGPgHk7Rg#BLSZN`DUf=&"'2P>,+Z#=q9O:<-ZE<>c<:`OA46e=_M)auR=71s3"M)V-JZFII3_1_l
%F[D?0Q\=DR3T\],d@)6cn87g\GcX?nT!:j5;J;=#%0oNP9n>^!#b,6JR8or*MPe`S,NUnjO%BH)"j+,JZO,2,p^o2_Ll!7Jh:$(0
%K'?XcVB_3VaU3A=0;G5)<7V[Uk7F3uk+eq#'V)&q,7K7H$HX\WaXWth(^mr0#da\;Id[!PO$kFlqkD75P3+!0UU0(@SV4ZJee[j=
%@)gR__%Dn4BTSD:5oNCI@Hsj7&Fp+HN<;OGHk!ttgH<W=+`.^)!nJ3`r/@koaT@#!#)p^U.=tLNo;0Eg4iU`b4FB5k1ho_)@S/Wk
%dX?rk."b*2-OC';I,i7%pFg9g&]<&1o6lJN$MY'GG(1[CO>(#:0NbZ0M&VNkZ^<IBr&f'Y*nDeqOr.)r6o[Z0"4O9Mmta\.fH6ef
%%-^.d^f\V2;l??gE/1p^PSk,13i_qjOdr%h-*;De,tSn0hbp^S2IMb;&mPDnBUJ_V`RmK`H"[`M<[GD2bFUPC_Dg\Kneuf4A+D`9
%A)LEq2hO@9;k]1=eMCeR=ep:tj2/Ul#sYoFqkUDN0_Hh$a1%9YamJN3iJ%u%l&H[YWjcGB71%#4hi/eLjnQe7!u[PpiLuN:Jturt
%P/^,n#cA:F'8ZT6e"*Jh2T<+LK9:Bn9eU2A=IDk4<#$k?^*`eINHHm).B1Ta'kVHc_O?=$Y,Uc4?m@:3JjkjuTqm5**D*'#pG[ul
%QS^tSis-?B.`A("ZqdoU,R^2pD3FA:CTTC4Um$eW68+&Z+.-EV8:\=CEAro2@L/'oS.-J/jJE'e7Ab1FF[g?lo=uq/*>$J4ojlOm
%3RfKs$38^=iFND@l[Y>"Z;;dE9Z//@=qb+3DP06R9<.^nad"&";2Prt`XmT:k;Wl(.a6h$%8Q,Y!"]#\[/*8_^.?pJ`@e78_#@KR
%1`:tPHXChI:`P0dP&[,m_nbIC:*%%`O@,1]3Ot7o#LaMG'7Qak!`9+<Uo*c9C<9n$&kjr-p;1jjUjYiTfZJ:AIO,'MppehrKj5k=
%k"cI@9&h8og0PU,dk`K.XGg6U4%8#Gabih7V$9s8@SXLD6o[7"U7>&Ib(q(!Fp^[_Y^b]%/s6Rpb*o<=,2`fi"(P(e@:AZ"=qem5
%^k-4GLp.Q(=E5/hCQmMNjfR=S@)YO&J_2@q,G2ePK/j;)0<['5eYWp#<,<jc(^7@+,-N/o"ipdj@heQ6DM12U-c0:kb9M'75RTWL
%!*&3Q2X1LdM3ZkA/A[$F[)a.aDRHK?.+JBqL)2R,ZEV-%$FK%9@C1.;80S]-qOCb[-Y3i*1O!C\TnH!rJlKO.n2"0MTgk3QR4Zu$
%N+dla<%&ij+DLuk42Y;op#R?!"`&a+Lak?Hm%IW[ODH[3TL?Qr0o62p4gRDaHC,74Jub6D_Bqbg"Lu>4F9Vs&-Mk@nM/+Hh"Bl%p
%Ph]?&COga@#ochh6O-)rbeW&/Q^+%qHRboci+/b@#'=F"8Q%ZmR!6E$p!86&0NEsu6B^l9@DXGWkg:LjV@sfQXlMe?1a(f0'`Luc
%BA4P<D'\^SZSJM_*8k%sX3osYi"D7cYbcFaKse/seHf>.%oS5u"Corq!?bi#*!XFP:>C>nM$[dIY-]7(Qpa6r,+')T)A/kNi<R%.
%:?`39X(I6!PS-sLE\p!$AM>.\h;T]2lB@,MBfc#kps&(!BiK3m5`>-_!YPke&>)r"#im@\QB[os7Z,fBnQ[du^a[4A4T10*GTOM,
%O=XhGp5:jTW8SL"-#6I?MJ&b)./uo`,mE6^DjV%!<$oi;^7j0%&$cj&.4K4d@ud7(&rR?EXUkkjrGN,V\./I_lc_Jb5u)Gk`u8np
%/8g^^Z4],iOToFNee07MOLJK`eB--1,_0\X7^-%$6t(Q[]hdM,XYgF`RDP#eqIYjrbd#"1E:'<OTBjtkXlq(R("@H#`)1NJI)ftr
%n%VT+2)3G)K**bDU.,0bSJ2aX@22;>!]*jgk"]A"7d(+*EtnN&0HmE9^U>V&7aYS=9_.h6>Cf[,U4LFhTb3*i_9A3>!e(J0#c[up
%*_oWc2=V72.,!TW'P:0.Udsi@PUnKnmM\W4EqH,1nPN0Tin&2oj_(eC$99KnX%^p2VX;BUE2-hb2>2h4pPkAb67A$b-T"5GaT-XQ
%Cm"IMR#O98`0F:AMA3ZJZ++?2B:qi%@_'s6)sp?2Z1&/_0ZqHGb#_^"=E2:fJr"(*A:N[kWjhPX+^:6d(mB]X&Z(0kiQV<Q(XcKb
%NZU$?,o*;>AuE'P![&pgKW]%cK*i?!i"Tma"S\")QNfpSU$TO[,9BX0PXd(N.BqZp]=83KOmoib&phu]_$E7gRM:@d,]gt.?Q'*(
%6mksRU#d'=%=?;!l@G$`VhbQ;J&10_D9)0s9-sr\pmTqc;8IB2,&67o9:-2\RbQn)_U^H)c/qYNTGaQ"_L4_Y1^``g=("Y!!pKk5
%Qh$g1@1`.-[hj^5aAO0O/l/+`-)c/!6B'VfOEE=idud")T2?)<YmHM%_[mMM0/KU:$R]DT(j%&bB<CC36+X*pg0;Q8!JS<,%alYf
%PN):hj.M7/IO)1*,DB4OlYnnA"LG+.2=duS"T64O%L4XjKr5U%MD_8j@Z[gOBN\IkJM3sQUTPNVS1@ARcY-^cKb;Lu'HtR5IE#Td
%QkAUQ!cI5uFJKDO)Ehd[L0`jsE=Ra3>mEHc[RIW%S\n<d2A)\u0Mp=I0-&<Lmt!)O827gBE83?+BKsrS@>G_j?]>mLFl1BC?6Dop
%>/sa.Hn1qM%-GHn)5RId<e\"J<7J\npF;ehn'??U\5#<,J9i+a1=HZGHrerken00_TNAuCOMUHVGehruoP>[NU@R+b&'9!(q%.sp
%$lDi(ZO!ll<RfK%D'd+35%RMXKs!d:BPOY0Q#:CgAMaJiXghqroq=Zt:+JAt9RRS"\"K`ZD'`D(Hr31/ku0@Q1XO,j!?_!d1&.,X
%=c]Kij2*,WL&-`o$pj8Q)EcO&8odAHgOV-kpDQ/TJp*O,+]12=aM(_W!q%V<5IH_Q,/?aBGp>/CN)NPcnR4F.P0XZXj:l(?-=r3:
%+-lYjo\1M".hm7sAht8T%,_m*N<e"SS/%Tu4A&oD/U63DjLFABG!&08`3)4^--9b43?<G&1K*$BYQ,(Yk;\u-Ge@c+_OuKsP$<8<
%JN=i_Jh^#c:ng3h6*O-b/WmgV?SupF_r+LbJgj>ZjNlJ[,l<NYGuQC/SG1.P$S3kE:KXOMV#i%&L_d%V!Y#h'jf:sNMirhc3ttAf
%[Kb0S3c+2Ck)]rGHRHU1bM3Q&IM$Q?VKh-r"a,NN*DnqrCcYE:KWQPX"g(H5=7bbIc,-g//EBi&]nOD6nM7+QB`qA!&DJA27o;@!
%hghRJS;e5Re50*S*Zb\t](<S<[g(@kJoW,^jtUe6l9Ui$F@BT!7t@79\AFA&%lN(nH@75#g<^<XTLbm,[O%@d.Y/?)!2C7ln3XM;
%RB:#qWSOFAE^1!@g]BO%f/l\3ie#1/>]l)"!Eg]>O9i$4S2)AKKI-n%dKua+9\2nh$5ncoelEs\L;Do5OQN;SFpeqZ.0mVH6,`*^
%<\Pq1W%:U8m+BDK'l08^jVkDP2,t6_^aZ7JNI`(A>bp+D4C5dg3d%QkbT-J##S>Er"5cB9,/>CD!A;_Kmg.!3:a*K(\a])gOE?6b
%SOV(PP=4AnrBft+D8EeBWfk1Uf#nEPk;WL1P9AkX143mrIP5fs,+S_,$fU)990a/M!TTt(kAi2'bh/.'dgVGW\Xl`Scj8/)M2?gh
%8$-GMCl5/<d+5(i&<PM"OuDr/K96bQ'p51K8bkQdO2Rs6;sPp$,L5[Wp$79hPt[?4k!D<?!I=0nL1e%8.7WJ"Y*Bhh3XILe):4;K
%UrkbanItU+#T"=p`tD!14-=sOSPiob(gbtB#aHjV/!.B_1fH@\TFK?A9o"\R:*R0$.0'a?AT0C"SK1@67K__M[Q()o\40XUTn>qD
%JMO]l[3=at3X(mfYS(HjmY3/%)+,keT<FL&,4eaS$-sK?a]h2MaWOB+a!fUme!t,'+D$'q!cZu"'20B6Qn]>DQ5p_HDhJqQE(7WF
%\!=b"Z!3+EMCK8LQrruX_N*bM<31BO>?A!Ec^g"F,+1$DS`E2:SS438BR%,>WFKA:\jDLlJ1\Wj"2;8+M%pf,P@SD`<T2lg;eMc;
%'NF3\'J*c=k/C7Nii&.?H41,8#)Bj6C*(npjQNR"CF>rYV;BQGDj94;r2W(MW>\FE*CiE"K6]pY\4$*0$TTMqeDA6s,pj65B%ikH
%&hjfR&LPckko)D$&Kd2D]T_G$kWC$!PP>$Q/$WY\K0sY:=5ZD4K@d/Ms/gU^\Tt6,9+>8D5YF",g_("r7@h5G!b+u#M9@CR7M<7<
%0tS-86H$:Q+=5F'3%5UiNt$1S_q@\.hbHRnU?Es0g"^6q`p*Rk*-+kkOG%6Z/c\6BLMLEbi:J>N)]H+9#ACVX)9rR9.3de;?%aE;
%C'Ht^J=0HdU$5me[kbac=h$r?a+VY?E@`gZ4MFauR4`.o_P+0Q3-M@P+;2P,`%f^sGOp@+pi,.<8SiDkq.*O#,W5r\)W=lbq3Pg@
%MZd8r?>2\0KPF*=$_4XaYaWqgo<XX23YFfG+H4gM.ZtV40iAcAO4a*.Ph8h/TE?\J+pY2$BXkL40B:MtV\X!u[OT"lC$71JhRLJ1
%Tc:Tq!G'hf7=X$jN0j=n>-DYH,u9Fi4B#n+TJcf9Xb[i$n;_'">J=e>'W[YL_Vc);0uH3n9$9RWI%c(UagXhRLG7);ZV8U-7!FRB
%gFRotb7\>$i$9fM9^q\.,1Fcogn='t3_!cicpJ38$\8=@%*02#,OEYIXct3M)1uNERF"@&"0kA)\Eo;)8Y:>f*ghaWIlV1#@!u4u
%PVM_\H5-phBj,a<\Sf+/Q8+H"kVH@P?V7@\N7M%NAgDa/5#*'X<X4L]/sr;--am-@!tf':8e2%R7SV5Cq(L)H\^^=%HT[<g3=]r1
%e7At5gm63%bC"H$SCsn*!0rf7>>p[NM%)h_@E*na"@:Ad?JlYq@\X/7Dc9//,9mrB/_sm8ePQ(?&W,60XcUL]1.SAj1OY<ZW0FZB
%9L7%NMFHB.np*b+Bf#u(LUor6&W*mtkml6N:t!Zu1cH(B@O#],Zir%`&Cn4o4Bk:KTP+Ne$^@V+Ro+/Md:\?-,Vf?I(3\E7='e0A
%'E&N3_sB.+5GLZ#otkHM0M]i&(N'VR`aTo/6ieJ\f[m,76OF`.6%d,kDL65q7a=2n(hW+r;]i4f^rM4\Ce[`>-"n7:C^:s2,^]Z=
%152G7%$)`-G2TL>%N`82]Wm09hI:[Tja2SFmOUfa@#<IM+$`]#a;/ebA."?Md*[%QR!)4'l)M20r!22/mNhdsZ^`!R.$:pV9)b4]
%!64<b!]JcT$Zm\3'UsnMYU<_/)q!AI+;H7N@TZ%JU=3XU3-\E7CQQRE^,h:%AkcJASRfYerB#PdR$p92Pp@qem4?0Z).@#!nLd09
%WC,qsdnWt_/,9do";E,>KAo&T&445]"(boD;Q6_Sp+U4n]EP(f:rF)Uhl>$>kRo.M=G^K)o:^uH`qW@B/d-;0';!'6l'OC20qj+I
%20u0#b/1=B^QWK]F=J20o5Il5F[Il"'lMkRI7[HPFb02U%*fIcobH[,jWOEF4!=tAgo>&1G@_4Q0ph%*dhl(3*.s:Xa]Cr)WjYqC
%)CP1D.AUN4T*>3G+]?A+m_s/(P:Ti=.]c?n7?fQ7Mlp0[-&g8>#n_48R"7LgKrftlMB:fNJVR3-C,H<T!IDNl/&$^H_:0%faLMEe
%.T3Rs#c!X(W\F0Leq4)BfLft47&*@`%LfgW,rj#!OSDt0c3#qgWB!5.)*D%u"D3g#,:,0'GruPddDl?p&J[K%OqZT)L'!D*XmdH6
%m683Q!E2/[HY/hg_@k>^)4PB0NB$FS^pYS)U6l2mq\9?A#-^of&2Q'fOlbt>,>jpZ'i^/YNIY1Qak<NDWL/9h`jb5?+S*VGdZW_q
%gRBoQBI(uHBaRWjU\:^d0N&!E2[fik0=?<S)o_7?Oj*%,_TLZ/=<#2Zl,/2ZL*Jf[^6A4dn-l(p>#OR^Woo4@+Jp;+efVCB_.hSN
%&MRMnlm[[U";i:>%M2<mII)uI#Z*e5L\kYRR>@7TY"[c54UqBm/hiAXnO7qen`CT&:"$+7R+"I]*96CenF\I8$_*.E[8>h2-,jr2
%MRUD4mNd<`oO/X4fuTiKBghF.JG-9Pf*`IlMOG1%`eTBf:lGLoMIE4fk6.<4_`&5FdD6DBKVG36.<K%E0VYQ,[O5+5`_iE]M=PE4
%NqsfYPshJ(`,1UcZrWaAD2ElI_GBIt<[Dn"TKN;\!XZH.&Kt6t]L@(H*p'(H_%[+BAL`7P"$S;'nrE-N\>YPrHjuSNNIf&9-_)!Q
%:Iad!%r7]28^M0EKst1WS\U9u3g&AXer+`3=Z,;0g<TmZW$hs/oJ@5>L2dYQRVO(rCg^a.5N8;Hjm0FL+Y)+-'%o<'>+8"@DR_kA
%"mJXH1]s2'=VKaq,'eLZ(l#gg+N1)qA]Wopl7?"3#;hsdo70:VDV0lZ&LA'D%GH>=nJ7=RET1$@)Aui;Pt#R_%e^/?\.'.gZ*.l2
%k3gVjS^k(Q!9r^iPHraQ?,YDD1)%)HP/ak,N3nSk[mlX33\3@OZjl@D=LC9dP)p[BYKStDTnsB"X:DDOAh_D`$tV,PR!dL$;*gZG
%<oTBh9#_+ba'TAPJb!sUk@ql2*2;Zgo0Q8:Y3Z$FlV1L1h4Jk_4A\u@SaMf##O`d:OHDpP4m=H$/ZNsopO_WEnjo<bj,-)CS/Y2A
%,'14@e`s1*GR![oe@6Htiuqfj`3D`O&)f?%<JiaW9N8&:/%mh^[bS:t^#WJB88ks]N>Dm)gV+@S$:H^M@6@1<(-Bs`@p19\4,Y^t
%dgP.m.nY$f,e@:f%sQLHWBtiqL7;>n_5j2+AFR)jB`\r>+lHu[82sM`6e*In5Xk2#UP33(XFWlW3d&+=*_`MACN.I)O*$Vl*%Kn*
%kiEr2;?ZL[.>A\b=T:!gDGc\6,KDGI-q4)pB0rhOO2ULk/FgAO[-o4!EFUYMLQluIV@AgZ,SN:>iB(do6W:,Nh@XetAjuHSE1,uS
%d@Ee-&<L?;eN<=KqA%8eglh<:<7O&4X-e_=8G19D#t1W7U3^H[$lb'8Ms?j!o!%lEMX"L5K_`*7hI1Q&h"=50Y-enS;C1d8/'3`M
%nIF4nPTCb.h6e(mj<dp<4&Rln,bo*u3$TSLDCfsd!sO\_U324n:kB`mOh.<hQp/%C'4V@gc<!I!%O-cqJZI-<VDZ<s7lki7Z3]E!
%/2DFh<.4A3baj:qd\KuVmL7n&[N4Sejl<jSa<R6;4>7s6U?LC;40V(RS\%20;!1T2D<c93pi09t0)B_1ZkC_K(:l;0pk0,FIj'LV
%0KP-??!f@M\s$SY^l-baT7pcbe[dOZ$0K?UW-*kn&Ki]8G6YLOZb@6f6]$I\N5Y/TFs3H/.X#IGE)6;0U"CBCV-ZUWc@GG81=en]
%cA9ns=Ac[d?E*1hg)VT-Qo&!smQd=r8>*6?*S?rGL"qR<*B9c])RHBu)6.@IKl<o5#EC6qi`!*D(9dm@lOGj/%XY:"#BhH"VH0r`
%"(itEr/0-t@=GCoHa,Y"`Ia1tYrdRONMe9&;!cJ(*RaR`G=LdT>d&:*&gkGU[I0-/9bR8rF[o%WC(h)bmL44CZ,@?Y4&W[f_QIS.
%0gc(1)e6!3pfJ,_>,CWq228*?WFC)@\!#Kp,^'F02sCS_]-I>\$F(DZ,B"R%3>T4_Par&gF:l,@n9Ij_CF"(9(gLfc06Uu!aQpED
%ljb=*Y"7AOl9D\MQb&s(g%lG[46./;ho<AIrd9IU=/A!a+B$*mUi]*^$E?dudN*$:kpRuQG>b.H9eUW:`Js8]meUQ2WB5B>/<N7V
%@Ds"Vp*+Y2f:WE(8PKEnLOG*1@PCJ"c\tHh,GdK10]gfBd[d),K6E\5h4\2Cau'gC_ZUWBEtu8RlAK2-X3dC`1D]>MOjG+XO9O/e
%6?chr&78<I]!FetU)sd!JIotGXmLi1^r#<N>@*!NKLW7O'tPWLU^6._clL3^"Iq#0GK0HqN'1.O1X;u:>Z&("M=?`GV)s;\(lFiC
%PjZ?)-.2udl&PCIUs0f,h1:MN(qtpVSWr'LU3,#E3`<Nk"b]D](8X+^[#$T?.,A=*'qX9EdN)A"OWcAMG?FL=;^nbRkmgpaP&RJM
%SKW>nl?]9g6W2:XXsi*DU)ct_/)=VQ0jWb3.S=n5V:W4,h=3O''N1bhCf2__1lP)C-J/$!kK].hgkK.uc7h;r[4?hqL-eS]oK%3_
%a/BN4><udo(86l9*EIVe&lbD`m*[ZA7lkhu1&HV<Mp<=o*_,m)SN?r>gZbiRc<[K%\jb]jquMDG$q9T'(hY*odC@(3T[fD0;S&]"
%"&_VrG9U7VH@\.+Iup^&p$H/4`FN'2m5Wg)m+(K2$[C-9gVm"]l%[W0#aJnEEDa/3Z7AA9MQe,f7&E//FRA!:@7#4$[53f/d,2+0
%*Jt_J?Y/V$@OO'>AF3&hVUS/f%`OIKW?Q+ji&_M#Fcj(!JZ+rsAF7_eFFG!*4.%!%j=$aG1hTc"VcU8.cQWt',&.pOcb5.gXe"Bg
%"%D'-Et6517UD*4m9gJ]Y.6%7_86mHjh<!sb03C$%T>osmo<"U$A]+kgmm/e<b1IaK%-',(l!]k"G4g3$01NZ!K:qCQ'rf-JH`4V
%L:(4AItMWSg73gbP's"TZQm)RTa+Hfln"Dm1j=[t%mh5'`%ocI,?`J\c-Fbp'ML/m7j;<A+CdDn(n)I(WZl)2lnK)e.WT\d>(^=&
%ekjYPPg?-X;)LEL..>5Rc-CD\Vc`WYQih2O2*4aTZc?g(pgcuu<BWE5-^MH^BOZ-o541tfcIDcZU1Yjdbc6=D%%9/^gUOil+Gc./
%_aVkrnB#36<&m$-Y?kC0ZSV5:q:Mb$dDTY0_ar#^(XaG0C3DQsLh9I\ZSN:UE,e=k%b;XrN`F?LOF>'X'fA(j(kpV#g!QgMGuquO
%5c&6aO_uRZ7rDX#?\"$e)%nI<Xr"E##c)1*?P0V3Z)HRr0ftUragd5]TnGVuZ'ZQUMV.A[Zknm?>8K"U6e8$@*G7G&V$;`P&[O:c
%Sf,-aAd@'bin]KZ*D2:3QDp5l)/FN1*/W>dkd[HU22W`Si)6dh/N\J.FQ6FS40Fi>^T(I\YUZ#=1`!DR,cU3004nk44^aNEPg$Tb
%n`n]m"*.,2P&"(@%OFGn;mbm"fjL4^1Xr_j9<#g-[-VJtO>X%OfblQoRM@85e5RVpMNjZNecLRF8_Ke>9^j6;8'Wn!]..C4P"&4^
%]p,(eqValc%S(r!BN<38E.G#`6Rb+L_1E78.6D?UF;Yl@4$um?'NUIb;!^p?L$Xbpr)U"2B1TXL=(LY+BraVQbLkeF:"uIM`X_ZX
%6oo36A&i%2bXKO3-'UVI13P4"9]T<q%Q8IQn=_%9BCKS(=H6qY:b:[57E<\5UALqAYqs`L0#tgY@qY"ld,6p]+Q;,/8HbOJf^Tlp
%.V!*&PF*b4U9U_CKBkk&13WEu-N9';lu4Wi\X=XOB=r7O<#Ibb>0]IL<+YE8YS$-V,%QHX/J=Eq+ZgBr/7OaI_eL=`8!1*p66^`E
%,:P\gMq!0;Z9sHg7Z3KOM4!O?)/7d_X!N?c[Hp_p?nq@F>'<"HGoC1mAS8q%'RMDn4A,d"L0Ab6!=>YS>'=-o3@9WLSUpNkB@3E=
%*D3rr/(k5:BR1g`D@MRLlb/B#7QU>p<61)aqMZO<$/&`[@o,u:Z6NaHH-mgHB,J?%m>?uGR.UnuY`"S`g/lc=7m_AG'kt=TA;=A8
%_QG<?!PG1@n6!dB?`fK8.V/kI!l<fPR%9$<fWZQ3B3M.IXC??`0#4`oMV5i"n4dk30frJ`</%G`G(BBVPcT\o;.G4-GU"q)k$KeD
%XGGQg'f)UU@Wo]iB_iN"4).Rpc(/@5)rF8/@jGXkF,Sds'se"(6\20cB#f:HWf3"Wm#\p,K6J':!tZ1LA1rk.SRoC63kBVl45`ke
%V2LW['$[CQ;8qn#*Kd"s3"iPbYlN<Cc-DD;9nPJ=5u2ruPer<H*R/!<F/c1m)7mW:,g'8(8B;%JD5:bkn/&&3<R$Q0%:$#*C3HDf
%($E<2fb"`?!`[\983*7u+LEn5!+-E?W2SCCKTnGrbt_0u$2b7_lmu'ZciC(X7kt;Rj,DLSaGjRa:K.`61`\fiW7eHIRCFqKZ_OTl
%lr($!`rpUHRus-[;T:iK&?;0>BnM$"@LDuk4<`5$)l_MQG/uRIY@^:F0.M&Z2*95&alA.kG*H=+IV=kM@t"n&fSc=A^*AMWiD@j\
%3GtDTjm4\RKp-L%B1G)tp.pgWPEP!Q3BQ(I,ss[So(NFCW63eUH;&FlL2qGcDCKq1C3BkC(Nn&uB#hh43OoULm*H]W<YdPSOV;H@
%?Hiu3@*XbNlk%&UWUX*/m.aIbVcn8"R?pK"d^!?e)QfX+AOhVpRLM^0Np9O/L67oFR9OCe'fA(i`)VQ'ApRo3$Z[M-G!'CQd5uM.
%&#<7$hKh1D3IW_r7citb@3^%T.VD7[!le-!jQst;;3[i0s+s.MhY2VF,)Oj\'gXnmT.mOI$JL?L<Z4N_XeGm+i?<-12b3QoSj>l0
%FsP^LXc'!G1b,B.9%m]ZFK1P[:GN7f`R+=9G*FSQ_,;!7-pAnGkYT]f8er%2Vil3;gM'=[9;<t"1.t*"G!&??MV0^R)[Ck`!\.on
%?ISdie42!&QTsQ7q0tX+L\pVFV_@[k('G?LpuU2nf==?e\Pc4qCAIl"kPR>m^HD>UbLcYr.t?;<^O5XQ53q5^QbP-Ef:m'[r1mJC
%p>hu\n\]9@5.Z.4O]d)*)F'3Pjt2&W"2FhRrn%22ZJQFHn\sM&rju=GaS5Z&c'+3[[Q%)1/8Zd50?>OaoCdG^69('ChUe+W]:Y.U
%Q%,@a`UYbZ4\-I4kH,4J?e`EpU`^/m/4abp^o%SlUk+(_=+F\0*XCQ3pu/Pp^-k2s'd\je(OiuBMdl0k[qN>/1Ahf)&aZGD.uu1A
%=1j7M::'qc;L[/#=p[DuH]+35/`5l]aQ$qr,,U>61M*ALRmm`LNE]BMi`7fr:KGW#e;(F1kG='p]#+#kkLVilTgfT0JTgfg=p=!I
%V/G[9!A5OX]J#U$G[pl]=.*VWW0\7&fX$jcL='BPLl&JhnO9O-K9kg^,b_R3bOK*O_13%h8pN3B`8MQLBDNKoH/H98+-RU7(L6p+
%;Q_)T&@4I2*m`Gsa]o)u\njKi$<KEg0>HIU]OX+,I>jKXa#L=nqJp:&cKAF<;R:cK)\nAtAl(\j(jWVDDhHG$.b@0R?R\dn\:m6o
%B!QeXT)[j)8D1?"b"M9ZcMR'+:Cg3d0,?+Y$F"KMPQ1Ig_DF4?&D;^A1tootfcLt5rRYF=\>#qi&G]9(pW=kZiHA1XNn<1'=u<b]
%eWZ'n;\tSn=[)D6p]R5-AZ@@&38#3#7K)5kCRbNJY$J!frNNJT_XrE@GLA^P'TJ^o5ukkFXZj@]?hJ6t-&nP!7<8)$pZ/)ab7'-K
%s1ZZq=W%=ZmRhm<p@g[O^I_)^>DJas78]PRDmrOZL3dto>.H[iF!]H,s)bPEh@=Cc:2GL?ZYRtbZ_NlgCX90Fp"@5(r-nS4CY+ZW
%YtRk:J,K")rr0C%j8>i'++7&e%Fb3<+23"!jk5P<s#mg5DtqeZMiW?P3Bk];I%!:hr91'%MrbnHgY')$5?PV]nC>qVMt<bb#OLH6
%J"0j;J&HhBr:,*T5CT+-b+An$M;^n<*ZSPP<PKQf\9N/@AQViU<W3!3mOoNZbh5elZTPnQ5J'%+O[!pem.]7Mp6%T1rTV_KRgJa,
%?+m4@:?f"KC-J`Cn!gApZr-R4H1^^/M[;6i(N+;Tr%XldIr)7pTDdfjc]2AI3r%+X?Bq9%'C(1-r\El![r"jP\30fUp/X.[^:?@t
%1-3U4)]P>p9t7kt597C>rp>+/^R*-m_^T)<jn_\Ome#l#Mkc3JlSbY,"lJg\muEEp;c`bBeXNQY#3+`aDW'XDeW[U_X]KrG7Ohqe
%YK,nha]F66#JX%!V;]B,(Rs_Sgt_P\\!muQmr%Hl_0=elr#=mgDpL&^&!qc15C!.lk]"BSE&qP<38NrNR8T%17c_'#G&nD/[\X5Z
%3.&>$5I`[7T2:mRdLFNhB4iTqce]XI9UdXFoG'4GDuY>`5$u$/Ho`A2k+g^ZPad_S4*-YXo24r'*T\Ufcf^MIp7:8NSfd$7b41g2
%7rKHl=`2+A18![jZeTqoS'Q-H=mjR9[=:SW\Yo-US9$%MaNg;sVY/()T60dn^FkS^I<G&=m'kYj<OR>truT"r5Jb9cF7J8]jf_/m
%rB0$m0YDd3p%mqJo"(CW*D`N$Zi^5UE;AY@dD>)HosNOl]6V84HSK)#I'LL6ECq7Km'JE(\CF?D*a?C*S\9FHApJC6CtR^WrY=b-
%PI(0(L)6T[%aU0]cN!jP=4a'K7f1COa&=Z0]l$bYDF1#:S'1Di#D^K@%hGO;BQX'_,eR&5hRm/9IW]ql]\,_AH@jD$8m`V]S3K(s
%I<0CI3i,mC[qr-pc1DABp%R'NVoq/%YeOa>%ikBbfeaArk[+uAj^/rh%YmW`fQ)r1WL;<TduX0kZn]9Y4$('"4q1<`bJSbJ[lRN]
%X51"D7aL.TBC!%R4!GXdZqk)ALYAo%H1'hVfX;N&_RAsWFl:*?1N:_W)k4T9RIIt-E5#,IK:>aD\%+On),&T3F&WCNl$_X_36CWn
%_f,LFG]8+Rn`jY10r8B'C2Z3u](l-[kh6^0]K,EB+o!Z\mp-]l9m5_:bO_?mBZZgPG,A'Ba4VOFqA"(9c[FJujq1&XHl*_?:W%i,
%gN&\NZ%Xr-Wm:<n1-I]\45N2/0)mfF*Vn@JR*=E?<8mG$(Isfj<fV4ZB$Zp,,qA6"dIG$eQhaCIbU.GUcM1qJ%'k4d59A&*4?J&k
%lKn<4k6]?+(*5gaf.o6;?<b!c4f/q6.@EBkiq7cel:2Br4"5/cbL`hf-MWOCB7=bA9B2]mp^Tg1:?mS9T,:M.X'M,1bnOB%cL%6F
%qmRf/r*=@?[s#%/Q&TFs#n!hnD],\[;puC<S<r`=Cnj''2=f4L@C7oB^m*!sA[U5_-,,f*.XUmSi:M,:r9a'"GrQ7O=heNHp%rQW
%gZe/!>JFae]?TM/DdFM-*%k$QV\`\[]\^a^Vcf8a/Csf77fU-7:\i<cAl#sVWu$o#hjl+0:cl"bT,cq49o+b\M,V9UT%Oj:qAGHI
%^UU7e[X3Fle/-k'eYa[VmNg]1K_+i]/7DI,o@UrZ:<uZ_5Wo@6k.J@Ch`,G3iPh;Og'KohEAhB43nmm[-7f_G/h/OSP+R5N09*0m
%=@ZY0I1BP(;cn;*W\%QG?_3m\9Sj5?AXf^?n^6Ul?pa5[iPG'C(M?Z5\-J@<W_s)B^E*5,@@ZHXki1NJim&iODQ6=l9:fW@/.4+;
%**jQ_3b_$]QYrg(0.4bu^-"G?Sebpd]Xc0A'1UbQ:tV8sr0$A(HEoLi4Z]!A!;trP^>KS7ZTW0g8<g59TH-4n8<bQgfbO9kLEfYC
%Fi2d+N5lZi1(+<3TdX+H1/B'$gUUFN.Ef]5Ccsj$M_`,UglY^'%q['BJQS/S`tXFeV)!*CarH?15'EDc)2hrfJ68%-MoaK<:3.u/
%Q6$^:oZXI?e@Qc[18uq8IB#N_=Hp_D'T4`C1:o=-n'aq9M_R)QqXP,s`[:S'\&n4g7<m'?Z$VEK]@.?&qA#LtJk*dept7l\r1&-a
%5Me1_[#=h5'Z=okR!p(q3VGhHrbQ[b]c5/=]WU(%?&S<c2PCH>F_tI:k&kMgf!W8akE=M'S'A?X?IkDZV":TEYA/8ceRi<.2V."j
%D-ka6bGmJm#lV76s7WlYab2!c=-r8K3<85VFSBL6k%QZG$0GqY:SZ=)$-aYfLdmV$IkrMrEH(<B/@#dRZ77MY?Q]6\4T>3Pi/\s=
%ORou!A,5?\`U`-<l1J5FUI_?8bCb`!-W+RdY2*&Y5>kgVgQn,\-Zh(AGRntJdH/VgE1u&nQ'hqiAjUd!>+M0hql)@bb2ua6L&'4V
%$PW)\2iIV6TB:Xds8=eS@IZ$3/t4qRgkG90gJ"B_,ujX\%_A-dc^c=<^,&(Qe#N!_L@K2'GAR0;^U*ZJlZ:4PD=W$m*c37aj6Yk"
%fpd@!s6B0dFm:"!ZV<%TcV!SJEYXrApAK$&5A&Oc\7fAakCbliRJ"=2E7.O]_f_YHUH5moSn'1tiOX>ql<ndHXkJonEO):Qom>`8
%q9d0^PNBcJXaXpWa9NnrHk`(2/ik3EfXGq!hjipiqgW8Ymp0]ho)ETXG];EWo'HCIrP*dRB)h>$KJE@RYFeUss*+2:hM_%4&$Tn7
%SS1U?52RrGK!lZORXMoVcZf*YhV%gs@!j$/I!PO"q<[H)RkCU;`n8uc)`+Xp:7Q5M'"s@/hGgWV=<8QVrH<P<NfSX<Fce>%H3d^%
%$+4!N@:N?UKVeV;r+.crVtSm?nh"5G[XG((l2?DrV9(T`&[E8tgFe.qdN\\s@'W9HHoo5V1JG7!>0SbSPr75K9I:PRVa$e,Q`$Hf
%.rkB!hM@5A55Y!(UU0"B`M_nB(S@:i+.Q['f:MN=:$bI="??#2?UlK1(Y=KRNg>H@jebLUS5>d<EW.g-59!k>@@63K,6AJ'@4Q1O
%2W]!?BKT@kD't*e?Aop[p0_M%@B75"2m8R'q8d^X@$q*9M?9/!lEo\t!+OPug$3:J?i/I4?g"clSLW:L1'90cn1k)!1[m.%0/N)Q
%""uJ"EpL.AQplNA7:D"ebeVC;T0R&IjY"?lk,b>u'Bc\Z!7J?&i7VfIktYmdX[aWX>=S"TA".^^aCpbfdnDZN=)X7<@S.ZLSSVb-
%*O_MT@L?P`[ZaEJ2W]k]JT]_^00WR:M;t@hY7HYr`S9S#EJkXpD;Q=G-Dp1_*$57re+@ctlhA@[Sq-";ERSE8Amfpi$qtm/f9q&$
%Ama9A0`>C(MS=L]nD`fD=et2bA`Z]qSXQnU\&K]Gq/l<:6BNoJ.$a@t9b"3RFgu<2(tIU>D4_kR^NuHaI/.B"J_>"VHnfV4hR,BD
%($kW<ScR]FG9?!V@,$"i!Snm1djakpD&5r\`]&CYI>%TCoO:]HRU3J.rU,:tDE]pd6C1D$Yr69())l-^]in0h=K<6UGFqP`h)B#X
%pGg/d[f"3cN&]i74*7@QGoWT-"?=Dc3m9S'et-u-D9gHe`f+DD>L1MQ`f+Eo#`eF`*;skD]/Z/lVY&NeB8?4$qQcM]9K6_S$jfV6
%2h<79Vh6qO^R[%XpMtP*39::IErDm#G'`lL`R2Z`FVs?+(ldjq4$&st90Kk4;jD]TIW0OOE;\hNd?IT8\aS+<e]2S[+joQ9a]H%0
%^J='miPjQa>!2LiIjQ)f256dVDh>@<`S$J%j_TQ?b(P1YpXt]N$!G\%9B>41fuXr?T9jDp-8Y&<9`)3=>!3;]e)nH<]?gaF'_(_M
%jnV]=a*Ac[9i,el'tWc;n!Wh/`k%*Af/<rchCZib#"ke`N9>_p*CG7QFP+$WHVGE$3tq$>V)$dIm+!%!5@0]VrrF99(V)CE'cPuR
%E;WJJnJA[*%sAD@T+FTe/m/#umF*(?b=u44k0r+5R[[)oo4`)+c-</sq)#P_Vn!+gs*U9iZ.%J2>(uc+[sa%B7i5Gf@3j.=\Lh.[
%k2Y6ES=>R\gNf:so5SZgNcS"@@lVh0)L"8aTUXL[gOH$rca0qo5G'#kffpPTH1%pd92%%6B0q?tT=ZHtd-lc!gs5L`bl!haYJ^qA
%8o1_PO(\!o++fHrJ:P\nO;">\J,ed.i:*(/(K,AKqV^l,ifAS]"Rj(8pu?T+3iLYIC>;P5PM_dR1pK6V16)9fJ[^iLBPL%"`a.a0
%7lbdjT6=gHHUFOJB9-hFgMOX:$%sY*8,;N<P^;1b:'mtFChga[<hT<_n6hEI1V.m2[JK:@,US+QPrjJAdiLEKh!,?<Wo&J#OuJ`j
%0+SPZ;nHmoq0[^@VeSoVVqmbhBtE<l,6tl@RkXRHrcN='3QW(>YM<*t`X.SdbN&M9,2>>kG#ME#,/""PSqf(n5!Pd$n9g[kmk54I
%+^>/AlR'-*f%b'Zba-'Lf;:VYo^7Z\0]<R?.Xm./deYO7X5AS)Z@)%HIt)li]"CrFqcd[-BJt_hcmY?"U3lp%DflQYZr(p8h=rSZ
%A*5i5/P#:Pg^'@bm^MSP#ohbTfD3@?SUl\W28#g9@EPDGAV5&Q8fb&ZLDeXYD=smdQg:dle\Q'J06o\MXj_:FmGA]jcAsSaSLc/1
%0'q*eG^OW'otf%`8'#ssgu:bJgGd/%Mt4;pN`55Im@3.#Z*`nfj7IJ/lhA@[Sq-";EVmf3#J2q_,(_q8%;r5oo.Z+#me"PPI`5'B
%LrUgXI4MeJ/imNUP$&]G1G9?TA$`g9&$>Z9afT*oM2BHNdJmJEY?Gsns7)^[qQ=)5$`j6WDd@k=GJC[3MJF#PY*4M9\-\BVG?t&'
%Ha5^s49+<;MJ`)Cn[K"Aa%Gmln/658S3oBaOn!OF7DAF?),D=V9?+lC9H0tV=77R[G*B7^LIii\@&,s.Tsb'KP"-<r#?LtQl+711
%gO9isOr`bUX^;^b'M[b][&8["2'JH.f4NFU)q9p_A&VRIiT9Y.Db&t$"Qo'F;qN]L5fXZG592EW@k.I;\p@;gc&[*S&D,el:Ck4n
%a^o!9/XjX@b][WdrI$V[R@+kt>oI;O)\!;9&I0c$hjkjZ^3M_-8RW"Ir8"HCXZ+\rS-q(S+.F*edS64=UhAoOWnq1*gLnRIo*OSs
%a6O^Sq(NtX&+g$L'LDTEBE'[1O+0<@;8nW!(/XY`QY34'kGODOkc'm:07Q/H*WG0B7pit_cf#t\rSut:ZfCs8\]`<J><H9,]_M)^
%B(=Q<O.+#u^HMDVZM\(9p^7%$U47Xe"2FhRrn%22ZJQFp=a[LLYQ&JU0Cmp`I.QEoVeoqT7>eh6$]>\tG&bjIcBc=P&t8a5.7Uc_
%?.09U>-g3L4o2d+jjrBhP-OQl]LRFl4cPTEPq,baVX[T"M8#ne*dgP-9)[JX50ogJ[/UdX5lS+i$7"Nimn_>D0,?dE+1sSU[b8O[
%Xnuh=QQOa[]4gnCBPi3HDT+cr1qqGiPlKUdS`B(.DnY3"Vr\0@][oR?oBScUkA?*7rS42%nHJgem%/\o(ZjtHD>>LpJdM4-Bj)Gl
%pkTd_&]'7"C[mH<2@9D>2Yg_r59/0Zb71@tQ<U%u@ZhqB;_.7fFO&Fo\J:`./%3l\]Oc>3$r(TTr6K"e4Rb)eYPGq'GOr:->CY0^
%&+8SHp"u=DrYrH/o0I4u56>>8XVB`^7\1Jr^97D%he;(tS;h+@ak_4R%*!p+Sa5QWC\4eI;8^$=GMc;4r8r=7ITcL7B;8WmB;bda
%pJ4!L?:Nf_0:mP*(E`[&n\]i_?,i<0\PD&[hCe37`l.eb-@]4NHF?L"[sRrDR%*o/ehr2SS;1CfZ=_F+DH)jUREh=#&j:Q$/_*u!
%BC8oThmSYsb5AUuT2tsTK"Nf;p3S]?XM6^bFh+`?0@hikp(A]ea:ks;Se'-hgi0!J#MJ'D!*fEfE/=A<!']`SE39cpLh=be5j,d:
%9B'-\hL`<W>dXW$s5uM\9[akQnu!r'\J.r5s/p3#ZSqhXg^>RWm\fj_K>YcdB$Ydm?YmScQg6,nS3JJ-HpO@^>ojeHjA*p7SI[n[
%*1t!qTkW*HATO5hISRW51Y/GBro)VHGCSV!;jZjB0eI\uc_<=>T'rd3f_9'nB!36B0'bn#l@$`,^3G6LOJf"skJc6#[Yp\OqYV(R
%no2#2HSIoi<qe4T&9d9V]L9n=%ZuCHbobX"8j++h%TGQdQG^0$Heo"15DCtec;XOa=N5.Gj,8:4_^Th/J%!U.QPX5DLF"D3'"oI7
%(Kl][gG:Ri/=&oI4?m;Ue&0qR`]1+`H)!n>f27m8D7Ilccm<RAl`G;S__@C)/3'+3a0CuE0b:.o"M=>HS2WFZk4dqN*0&;ELc5!R
%aofh_4NA,)]*it2Y3"e@2E.[Z;9!UIfd>d;A#FH%??L1(rGKsC7`b<NHs![0No0E@q\.kVLIbaGo)=JXC\&I-kO<.)s67R?4(!qB
%#ClTT;(E5jfA[?3[*-o7M`7gL?8!*B1kPaZb@'<-GjWps=)>(@(AbG<!OM-L$l=jUq<BRNSJnmq2bD(HR\RiAAEJ'#9obS(Dd?8Q
%^"d;(?BSCegi31^pLG("iO_4)Cr=+P9(E$[[Rls*'$E]h\#RiBjS]6td6l0T4F^'uX3TnEcL/lf<?Asr9<QG[R$(QQXbjbc-D,)6
%FDE\+nV^7;k#K^[Pqm44)l?Nm<&.a7.>Ome^G^@>KXjDHg.\gJ/T%*9=B(K"nqbTgU%9rNo&02PR(9oKL<3Ynlge)6H"8XU,Gm`M
%O3"3U<HmS*+QW?[Dp?I5DC8SQhsR?<dpAL+&9\J"aYD,[d&".`i0LX>YNTl['tEb,:V,=/FYD+XNfrRR8KJhsF`aebb"Kq9b4..;
%&bS`5[lqLF,fp#ME"'giLh1\)e!ie7rNhV-(O6m5`:WERL<e%Fq!fH.]GN5GoBlEVhVQ);`joQT-a$e&5(78;51lY`%M#]>qk"lM
%?ClOcG0pP,e4&cUh>JDP2&m6SN+UfHDpM^!ntM1pjAd@A@sRmq>=9q_F`>k2dPKlSJ"Fo/54=!/V=Ut?Xo(e/Gie^%Sg)KND\1+k
%*ZO&])qY]?ckB;;?-/L(:FYCYj%G:5Zhd=u4MC0hbi4ibZa400Rc3S-hj;Aj0@*uX%ke'kpcf"]094Y.c>,AsqCMC6_8XCar:I1j
%E(p6/o&te%?@Vh!pA8sFlM&nCk83"j81/mf>kf*7B-Kjg-f6HcN[8lOIidG$I=$>e`5oJ`s*fFhir:V1d)Uh4=+.FQq<6)B3SSoU
%_OK:GWpr`1YVnpU++)4&Oe/VhT._hS*$*>7c]%bF\Bfqdqf'/N`I5rkmUOge+1"\O:J:Rs(&J;KTY2*6A)B*9P8&Y#l$PVuj);qd
%_DLVW*FM*UJ+"-)c^!rNfM>_V+7hbM:O$O=-XDB'a>nDIqsj+aqsi.?+$1A;$1A,rWAmM^Nkr*-@PI0Lqb[X=G$!M"d#Y6S:Md4d
%IO;gQJ(eZQq5LlbST1:2^jXF,\<!%tT,IC61[`.H^Ue@IDBQG`51PDCd3h)A"5q4!E$lS0Xm?*V4K)T=-*pY%?^0/oi"\1bI6#R8
%Ai2/+p!2*^[9n2*&'5V1M(<a%C3=C=Q>Xlo-ipMK4"?<@[aXQr4CiSDfY%-+H>W.WX(E)@:UWNP%2CJ=G$0oD+OAPXABNXo_LRk'
%ECQO]HbU"jCo*p`/q94ODiL,*oq5p1c?IPb=eYFHlLGTbL(3$5`@NPB/%\hQZ-7*Odsf;SAn?5PAI7\@5P6ebRXJ*X\0_iigInr"
%=d&M9Db]W!,Xi%*%"@C59`jEfq_N..\tte4>nU5M4=]FHZ@*DX+HgcsFe&-XVU1XMlUrU;HnK3=Noi)lnkqK3gG]]]N%*(pl/K@7
%-#?e%oP?^6qHZ"!8EI]Hmlk=171XAq_pkt8QLe+PBpuXiGHoQW(cEE34Z@Ig[<&Sd#V)02=UmqXjI`p7Yka3*[^h5t@Z`OYS$0UY
%%7YqV\@aF^f.+:tb%S`_aHO?TQ[&es@<g&90"7QpTtm)FT"I;LaW7:X)_XAC#SRR#B6.j3FhMecY0OD,73e;LDMTIeX1EIRdf1?R
%N:(g_>F1bBlbMOWrmJV41B*OJ[?*^\Am-WuFc,>1>:W@(Qb<d/PZti_]Z#SMTdd#Fp4u0k%RG%Hi%[.R1hcOVMSj_ham4Ndr=5D[
%/o#YCa*cfNaQf&EW$fZ&/Qhs(#NM<&J5]'AM,9NVS>27M.!_5C\^cEWX%[CcDj!f4I'0ICUHCsoO0X1<-U4qC;-+XP\9Y)4XW9#:
%q/h^5lcPA'AWgb).n'bN/6Pg%,V3cF:MT9aAC\IkY-"a`_^_Dt"!CM=bNTg(X>7aCbA@mB$L',f*ckRf9`J.ZRG>MBg*c@_^+Cj@
%2JAX6c#'Q*9W6-.2UAHE1b`C64>tg+&R,WQdWRqQh8=n0XCKe;%j[KO%'Rs8Ir`O8G[([,)*r^&#kGrT#*<HtGm9A&IWtj5lIGsr
%`>C^DN.Bs-Q@['PEr[-UG63cKVEj0W!8*c+j0jKIE>iNG>m2-BIdd9SpD2*mK:SZTgHH0^m,&[;N`UkQS.ob30aslP!uef9TWsmn
%)Z'aCNFP7mgDeMo<7+ogHI/&>M=@XZ!B"KER@qQKJ/[>D^&&K#/$Q8pA:VJ#Rt9V/!03PLJE(5GNb@;FD#soMo9sFL>Ql<1Mk?Wk
%R(`nObN[Rg^g=;2L.,,cNP+0eT*euD"h)B1hO@qNDF:#8=!*gepjD`5k??]6$RQ]/!X\\pOZ-lZD!jEg4$k^T\FRET5o=n%E^k5H
%)Z/@Qr^ome.0TD]as?8q;qc#M!4;PrXg*`t3Egj$jrkFH1h)&!/"bp4:fPO2VLDS&&=\8Nqc5p+pU00e05iY_R[(aTDsPSt"j'4;
%+9LkL0$L*02J)JcBsMAfdaAeSpiW8O?;(BZ/)lkS678Er*\:ERT!.$u9@.=C`O>.6d;&0KMtTa_24M*0m]h'=C[6U00f<2c#\kD4
%3&.LAAfYifJt:cl[/F4#emSSq]CD-_\!qo24)A2^T!n3Q+$BK5>ng(gNp&r+%:G[CG'A5I"?e,$/@<`]6\I&o4^Zk,(Kc%^m<t6/
%+Fo!r=!f"@_f_M]%GFT#E\X3Y/(heF@bs\<Z`C:S/"pZT(j=Z9ceY5_geKc3eJ7[*HXOK=hFm3O.SHZVNWT8cQd.mZbl^u.*N&9Z
%4?Iba$,_o9LVMEB4g$BXH$T;Y1<Z.LYT%&>n/0!jU*H`CSrn-&!9>k"FB^;6<YrES3a+86a+\elR-N,bb7hN_qLl:0RA$e%fo@LS
%-FVC3/t$QZ1>u%"rCS-rOpR5jPQfD)Lk[]NY]cj^jkKWP-XJi:*V2lR4&90<FdH3GZ$seoe@j$5oJ!Ql\998^*8l*J1JP%K\-'q!
%4YUlZbD?tL>PohqKcZI.b=NP"&eMCB^<IKg>u"X1:@c4Xs6Mm//!$mmgXXN8@ID/AF+8T<ESUH2\NMM//"gdG5J7ZrcKCWC>QoDn
%Fi_1/`i+*2k8=!VFXu*g*+@b'>Aj\\9-$KEI97?A%q0F,'b"t%*X7rX>0"LVHjkh?"'e_&^4qL]/5B&^cYT4N_fjb<:P\`?i48q[
%D?h;0s1T(C?<k,X.G+#pWS`u.q69-Oi4M7J8'g9VXQ]KD;gJ^4X[)+;9%D[)eH]K.\Sd)!VZEMUC?dYTU`lhR;KXqrc;E!fU[6eo
%@G1m5*/80_PrS0Y,TR,*V\S"#WD+l#]Dc,*i;:\u@!IAt`\>%_=2FBXht/W#E$UbMmS^J3`EfYfU%7NUB,-jomYZ8Wk"9U,]5MZ&
%<K,^=P8M&lOf'7i%gnF4>.bW>pB@#[4YhN]QgRXrBu/oYMLs$`#7orlrYf%UGRB59]JC:hmt80']dB+.<a:(R'D`Ftd9hk[q@ttE
%XPeqD*Lon?S0(.@LTAet0SJWdQu6nGY/'YrilX0+\<-,t;f$TT.(R#8V#*c7]nCK/E'B[/Zh\Ndm<V=t27U@GoCpmbg.?*E?B*4M
%'l:VA`<H>@d!Qh-o_%3DW'7@OoiN'6N:@[ElY;CQK1mrVob-@@`p;/B0uiNHG7@m9?%LV2P\H'51L?]D6Ka/%]cB.0"2)?JkT$i:
%fAcI?_<V>FrLMiV5OG!Kf*@:RNE>6=g^UF$.F_RJY=nsIJSbR@i3(F:K586_b$/=^o5`TQ7A$b*erLir,25Wm1WHp+^BlOJFMSab
%0;!Z#XGedJZCQso"oW=db5V'0l14$AmQYIKVmLdTNRRZ2j"u5;*6,,ZHFUsL@BFN'G_Xc.-$^utco@eulsKdW.i[YT>PoO]:GuOq
%4XEY2TTWc4<n,6nrJC]qdeMdRRP9+#J(7b_?i*hFFB)%JCeCr]Cie9YO8*)ZLet*QB,>3%2!,d;3CdRCrU?O9B,\gY`c7kqS7rsU
%)TS8cnR81JB,\fN.eB7+18fn<12=$d@a=%?Xr)kK;[bdSTFFSekDsqW-qHUB^1;fXrDCnu1)G=.:qh5go7knd1d5%e,@>C83D"JX
%J+Le(,dI,r7$-mo;Wl4Ob_o7\2=M&$5fUWtQ_A?oLm'q[[-4JYi8kE;1U$cf!*rM\^L_.:>uRaSFH=N4<D%f<<->(h(WSS/6gdXF
%%.kA=/HSl>C7=Zkq7F:AT@+-3n+iU^Q+(>FmM^\0\bfniY4q-9*Clar0sA.T]b<.)FlJq`jh@%-=`gr(cm12"7e2O[U%)Yd5[iF@
%r@D8F->c:QQ7^4uE`O1hKaMts"/[CPUPL`1EYnF-'?^3Z"2Qf*S_TQ9Y&AfWhbHD2.:KE**D:7YncTYM[BS?n#g$Z->9-C_G`m)T
%=L?Y:j2b]":dH'Nj:ORt'j/_XY%\.&ZKeeoK$j/5ZCP2Ke:9J@/_'@B!OIsumeYQOVQ5[OrYnJg@B!";MHO"62LDa<&"ZtJ`a@(/
%pKuZ>F&9(57Q;AFP&l8,J'o-m#JLlQjcIAE=>c1Ac*5.6,cjjmBVR3ROc*#'%r[.`9-X'"?27hGLY)UR*u-+B7:Y".#NZ!YY0uG4
%+WAJ[/pg++2l(boYFh,=C;?s#I1k=<F6C/)Shb&E)CO1=[oB\S,=2p[!gX)c$W6jB"!aF_Fo<:R,M/bq#t2Ls&B?XK'TSWY0-@Q0
%SlXN.o!P/G=rNjfmJ7`(];P]*[a0.>FF#__(XL[eA-0VcY]<h1NI9m".L\=UhLL.m^/;@i``P.5E<Th?p,[$<UIuS?-(7pYp7%YZ
%J,N<OfnnpU[0Z;O;h%;dNSO"m&.Bd'FZ&&"7OcC2W"8W?jXd>7EN%'c0'Z;n<Sn+'<)AFa3pLJ,`I89`FIeK(]p"D+O03gn9FpeS
%NV<:Y5U(?7E/6mu7ZUa6Wu3$Y8I6b(B'O<]QLs['7LV4=SWQjr$P'5b;e%!Dd22O=7][PV:Hnp4SZ-fjB)L/u$sm0=Zbbff*u*hZ
%>IT2/F]_I5FR_tq%Q8ak]UU5i3:'UUrEsoLjiXZuVZ7JNj3$(NCL7G')H0Ll1TOC.k]JBc0Xhm[JdU<+A#7U5UI]2eVo-WE=Pp!2
%T*AF5EZ^SngHVmh6Vf>DAUKelh$qV_[V]bfhfTc=j'e0BVAI[W^1aVXX)lCW:V1'sqMMT2gledY`G#'GJ`a2`8ktB[8uY*br^]tu
%?Ma5?aJOYIH7TX([S]#hHp]>F/2_.\3$2CqD(m>ACB)de2ZA<B\Gt:^RDX?Q28Wd9+6Nk2I?=Cb*p?LtktOr"s2<@FC0)`f2)ioF
%?+Hc&"0C`tQKqgR=N"UsPWc_rk/n2.pqAlASM*44M6a+H^7r(:(/7pulDIXRZi9:0%!HA%Fi]2<D3KF0?Z2oUji0F7D6j+mqh:qs
%%[a[MDn^[\dEIAD$"Rcf0gYZ)%LP_Nd[(Ku0[HVDCA#!.0i3O>W*NaDHPM)-oh(padco"q>Wc5/P7cOKpqlIVc9ll)nAf.Yki8=H
%ZYmq&kdJm+q:hI*mic<B?(I5k(*pYS^<:^-KE%$=R1BqsI^Nh[VI9.6!o9VW>SlV<XcC\RTq?%;EcenPk]HRD5',h$h]Ma>m,so;
%S?ni/p2ds#TC^cMp5Sl.EQF?bE\k\rBEs"3<*YIN%=ZT%r1%X9c$n8gmSA1BEH<c#-(+Y.89V'&kk\3dL18a``58%"651X`_.liX
%HV3'Ok\'e&mC9kYQAFj_s.t-0^t1'0Ct&1u]WFR&ldpDar/DXaE8U<#rEGl6=Dkl?B(:o>Z=I%5;801bmG9b/7E_Nu?RmUM5G&7"
%=/2h07TZ)R"%Kqakj!)Q#NplGk4%Xr]Qt'k^)<Z4_lMtil8cM'%^2I4LDb9&@>Dl,43Z[6]+eS"9,>4CI@*o=4"I:;0)&D`m'*+?
%X"kdCN@^;BFM?9lnqOH3j8N0fDMl/.V5h2Cp&'c13KnD-;+$O6"7e`ToP'T-_MbE($V=W+!uQFV.W""^Sc]\,B<<)KhTF>f9o0..
%XkD8ra=\1uPu:#r8o.1-d8\5bnPu%bI3Z"(+CFaRgQ2eK)`8\[W3fDS9WbZL[,,V5NV.J/SVP^+1SEnSc$+C*$EV7SOFg.#hrK/.
%!DTCRE?Ik3(+On?I%'GF(F*+ZaD+J!o)=k$UXn;):^.@qs*lXOB3s18_`\sPVG^+M`b64<OdAf5-9mdR:b)RsER1[;J=(67LP6Wa
%P_YOmiqQsj\K]cC,=a]l]TuEhX]5b&7PSZi@1*B,3T4)YE(P!W@^&6$b.ooM<US0Vpq6kj"d:e*8-bmZeT?A:T/3kbG$%kA=1]1,
%pgP)nYmT-;:ejZoHPFID[AfP^?/E/^Uf#_qCie9L$G_qY3"8#UmtnqZO<2@)\5.WF)R=XBX+36h>j8@L-+qJpMaDUu#oVbaC8!PK
%a<?SIom8`r,&AfE3)ir%o'9$-c(112aTKgG-)s$AP9cbLbN.3]V8\D$<KkeNn7=Pf;(jj(;/P/1@1Pqt0bWi=(FN-+coN/ES=Bmg
%6Q$K`BUn%QND3RoWENDVeN9I=*F@OB`i7pMD2Db>Y^S@'59Zi;Ng!L1m[-jZ$d#l,DuMFDiUXOg9Ht_BD/R<2L=^[,?fEagR2("?
%FZk/SeYqZ]@;qEmI$[hB;<LacF,^=n.hZ+L+I"8d#?Cqs&PR8j[8a^oWE0e(o&0HQ&&ug!Bm!/IIXV6E8!l?eXeV-qP*8dM[cgbP
%gp0V=/NO\/9t#kCCH,*_FAi>NaqgP'D/qMD1"Iqf'.#pn/6d5)!^!Xm!&rQQ;AOT<5?kV\4F*]AI@t$%U:k5_b.d7(lANIACho2%
%=,;-#>GD?V'giQsD*gsEZ:5nUE\bO*@G.>;=M7oj</ji!,e@GbX>dJ[8XBOdXJr70jI10gVJHQ*:;TaXo=Jg7H%G0Q8P^h"?41o(
%[rm&_0@%1fO']LA:025`@$.<W5)oGMlMd%5rhRu)C3<W*,!fQiai]=>;"pmc=9NC)2oN9l@1c7'hR#LOa!eua^)!QLL0g/TWkZ(6
%Fb>RGIO]\>fq8nqlH8Z.r'8,!OZ95DX*Ngk4YRR/\>h&[p8:_&-7a\+2-!J*perQ7[!K=3%19_AN@T/$6>\$p]mG-D-lZ..A'u/D
%5W>Xs1!01g>kY'XaAd9uHVpQq'Y?DJbPl%jU=='MFeX&#X1<i5l8N.^[Q\Go0qF'ZqmsPr7UgEVI,>f!3)\S)Z98gh/pB!K[BRYQ
%GEN=i]\)Es(kmpMQGTpl_9+[=+!thTj'(gtfsLBu4#$TAA^Ag'.5/W]e8Z8hrWMZa&r^&hVu/4&PoXa)$kA$uEAoj24hgF@k'_Km
%0$[eLUt@IPp.U?,P@C^qGp^M%8[2o+m$SQ7-H2QJZ"Hu$R1sup`I?H!@RlWjVW,V70YLh\?Y\Hfg95`O,mDl@gh\\\m+*Gt82isJ
%Wu";D[n!OG8PGDs,qe'[[ZAt+i@CM*J,N<!p%a%]KnUSI"O'\A1R<"97Q`'K#J'P$Y+3C^+$KGjJ)oaZad;2Si&NjnK8^9]i">)Y
%4CSJS\/L4VK';-E3fG;:6Q'QU'd7DNF+eL,&@Qf/9<ODg=!e`e7gQS*,plE:mhHGOf-E3]da/c*i<hC3^6+/ZN=\k:6jO<bL-@qK
%-"-6D,D6:E_c7PkeI]W8&]1<oH8pj,hK7D22,^os!b:G3_AI$<YQfNhm;(<.L+?W3(dg_/lqS`5RuS!H+b`4(n,Q@rms-`[#=$r+
%i&d&S>Fn$_oB1&W'5#3%6/[uE#<LP`p_#dSHi<:nDN*&CNBDa&@C_7RNR$)7?WH!a]A'M.PecRLOSiu'hd\6Q^"(i)jP95o'Ue(j
%<O),GQ!`XqCqoMUE-%.L%-(^.J/?qP>:UWccLX4<VY$MjLk?X57(G_M,CAFcVSr??Mi:bW'hoT1C.ol=C-l%&`.GOC,/'SZ6%pV@
%X(l%1aoXLO.ZYL_L%csO4"Q.#>YQ`V28]YEiF2+\XOcgDW.3Cn2-=?-#-#&]GO8$KEd[qG>T1>E2bG"HW2Mgom5:bVmBFk19F7N^
%L0Z?H]qKqQl(VB4.aM:D%H^cf1m*FB,\8;DI-1jeD-@klHqiX>.iQ-AXU"`sGL@:A<6qcR,oqJ3PkRR-I*LkXlbcRdGO(o7;5XhZ
%K-B1(8k/`WUF/4.'SpJukjiN9+O7/*L!cCBXf5MT.Klp#=.ajZ^I&B(83ppmMQ<S]d4T)AF@AeU%+[Fs-nNUY^g[rSFVf\DZ?8%/
%G1r/SV`_LW:q,]?,AZb1='4'IO7fdc-+^[nL:j'W*#Id;-$7IfRJ1iSLUs%Qd<6;jG#fu&]Dejkl/lluDNGIsY=)p07#VY6>49rQ
%@=Z<*DFBWOj)fW>_Xc9C?Zl22E_ds%92X0@s6:=.CSQrJL>DHK'\o,DXsAM"H]4OS#M=A]F)A6e;C5r1L^$YTPM1SMe8sM\b4E6V
%8Ml''G'_O%URTFR2C^3&Wc-h/Js;MMNu,t<AV^"PODJi-e28uk^S<ol?^TQYN7YldlIH^IFtR!#*R\f\\jf-M=i30tWg)H]jQi7C
%:WfgTqo=t-CK+9)e\<9WmDBCj+<+?Cr43X"<YWN8-`1VDmW;CTn;Y?Bl3Gp4?Y%XTV<fe5_k<sp<GpH?K7Va;3'-I(&^A?&S#d_*
%1agGUW#rdTNuE,knCcpTTH2&$Jjlt@q-cdjDQQJ'WW'orMuW2Ag$/2/j*omDX6]-Inmo<+5=[raF?$VECNasQ($e5-Gg1=i1EFb7
%LGRE<b]Gg#*R7?61HW6m_;TME*KDUe(&KYdS@-$=L;&HjBG?<H5nPB3nnLD!;3Hqin5A+a$_@a;"QQa[C<16u7e=,sLNPcE1u,qd
%Ki0uMT#'Sa<5@;%h_nbrj%HTXk%.^>g`)lkJ*g/gAUQBcc?t<X>bc?M;+3X;M\p4MA?'slcr_Rd3\.LN12`&[WX5)F$BWiUUr#<N
%"fEs6i6IFt&!*"JDU8ZW_Pa)FbIgBqoTK-cR]mb@^\<"VK9E])YnK7e=Kmn//J*cTaL3UQKC9_EB;<Q1V,Pu3U:4B&$'JTEA@G[!
%P=J13`k75k^SmBjfY4e_c/=FuKi#\''$Hd*2&@2bQCWu'M,3!#n78=u\E*SA8A`L(CN=Y5Z:S:Ii=[omR0]BY[49dt#I6.cR+jW&
%da?T)D]okYh7.DdOp:#F;YK4WKm^aqRn^U_%".C\!E*CQau=QR\:J\'0m/_)7;+=b*9T3D$EOb1OlP.JNQ]=O]G/7G`?HPQ/@5_V
%?OGn1a)-!,6OA2)ncfAQ4h@G;(e[q@4/ckop1/%h:m>=.X\1AD9?@.?#ObH60M_UJjXl6l`BEdt3-A5moY5_0F]7Nql7Pocc+phD
%-pkWL_T5brlogrR9Cud56"Q%S956Wik-`.>?B6hk,rKVn6(j=Zf-N;H_3AAA:m`cj\iSV]Glleh.`9eo8.(@__IA(VO<lbn8ZasB
%*rJTQmt!DLGu:25qA>p'l?lKt55oh,3;f^PGur+tn5uf.?L^,5.>D^4XL+X?@N(CP.FaS:*;st>adZW/6hP@p;p9S"rD>>`MSfX\
%+Mk2pN`r\@:LL-l<Gk^$P9Bi8q1c2Fi$20+:0^psE.Tg0:(M*(TeM9_06qG\(X]'(_UocnXn6N`%MI&8cO@gl(b+]=Y%fb,c/G1]
%Z2R7Pofk\<D2.n"W.0QuT72#]^I1SOT`2nIk$O&irl#YhqlPH%@u0$W;a-,m7@h+O%H?jE>A3KJpV&kc4o`e=J%Q]ZkG244pi0nn
%57kT!%e6%1&AN]kLd)ZRr>GkI6LCa!Q?^kGr#AMV/9*To[+J!>&cD^h^\`BP-b`Y)Ic'h")/b3(hZDeUY(HG<)<.83rd0Fq25%7.
%fe%r'^)%.D6'87ITGS-oYQtfTd^Y?Ulll?lE:\8&X`Kb-,;5h&IBS4s#M?]Cr5&9=+T0khe&it^[`Yl5n@",=?i(B9r,?MU!W93Q
%42;\3-,`4PVPJUtoT]1tM#8t^.b[,jkGa+H>"1%EQW6f16".1UC(YX+aq1T&_*FoWmkJqTMZT"E.f?A1JCN&"aP&hi-9"QO.[9C2
%-tZ>M!tP-#<c%skC^8O%.EYk&C^O6ej/)`l*Z/L/AQqmG@jd3DJPH(M'\\d(&D4A.oRlHej=4JWYm2kep@RDnmn\57+L9rl&Qo0R
%'p0L_`ZShA`">O5PRWGMX7<5A![=]CcfN/':.oU"=%NKC[+55ti'KK(qdNXH5sRn2Kk5[KQ*Ies4ULn_Co:<Jd?>C])DVI9<`b\'
%"&DnEJ#p4=+5);gs"#?/KJ]<d#BX8T7^KL5df>l^7^'\50%L,0R1"9A2ef+-r+1:r?HT#lQ>tq2I(n?654S;(RfUJu#q-#Urpe1<
%e$%)Y:+u1I4aj?l`#4>[H1K@LYPGY.rq?$TAcD/%Ieo]7!DboUpp1cL5:m]KkEg*n/\X2(4ns;J^A.!k`U`rQ\,C:iIslKZI!h.p
%g"3Ef%e\9=Ec"$D\Adcl]u;q7_EV2<2Qt*q)<3gLTY0NTn\nr,>+UlFptP>T`N;(HGBS9,C@0@<N&Rr_mFmh4S`YF7)VtG4jmg;e
%*XBkITDWu>VbNVl@GIMoffANeSsor#2(aTt*qg"lUTaHBo)J[^g"b@@Du"jkqKeM.1OOK>J1hF\3Q@H!4"LHjf(&b]o$(5Hff-+q
%45d=`21hCi.;q"W3r)udQbU6/j*:C^a[`!$^XKOH:AG8*oZ-jL#D^&JG9MJ$X,B1q55?s<?WbZ=q(/`1^FniKT01Stq;73mo1\3#
%cX%V3SM&t9.K6Y)c$IWAY.j;X$bZ,og\)07*$#MrFa!W@o'#)Elgs,JpuLano8Dqk3TX1@hg'9-F5dUGs*/c3YJXpu#=j'QqaA"O
%?b@rWqsbE=A+@Zb7i05DZfRsC^H2Dgir&-Zl&jreRQKg$ig]&g=^KZdn?7>fKB8TabP\9saC!_'Mbf'PD=QlMA,VY,^o6<8]D.a,
%3%pqC9!R`UV`u7V^KK^.jDjbH)?8:<Hhc4clT\aj?CnlUo@<+#%K+t1*1S*j'B\1=q:k(&\]NK4W2?qW%a3W0hp>>G_24L*=YQ(!
%,aZ_u:'6F*_KKf`gKs]:+$R<^AI!"t,>n3Er9(?FcKM8)PL"<.J%E^rn)M6>nOlBcJBuLs':!k7qY8tZq)N>F;U9>=Ph%@7?#)_)
%[J%s)m9BTSIe]fK%][KmqQ.tprT!gs>NX5UA!9^PqlJHYm1o#:V2KHB_YmE9s7i(!U6Fi]Wn`$b>s0HM$Pqt2\oFkM,Bs_&!i/KK
%TUpp?C\,?TiZC+=acN.lFsHSChS.U\nuJ*1h^gEgNP/M&+THG/Hq?Esm!NaIqss#`EV+p54hS<5b5("G:+oq[WkJo>PN/DOQ;DJB
%VG_m:o$,,oVSKhZCiV&1e$jot0l$6NS#0'>(*Ic\0CAMEZm0\0GOK*W^SbWN1[A?3?NH2Uh^ng(lgj\K(GB<<ikbT?]N\JL0#\A)
%,\jN57.\5\54e"re0_sE#H_4FA[<U+bld"B#DW%q3TKPQ\-S;aJ$6lM:A/Y<mgafmVZ-aAFh[%B^Fp*NnM0T)52lprj7;AcT?b`2
%r;3tXMg)h+PKFo#j]e</h?h65mhomfce(!Br`lSI*j,@D_6j+.`Tt"%hX@r[^V>LgJ:0iV<W5L$D88HGlV_CXBnF#V7Z^VUjbA/5
%QM:G]/"E&(N_U+8ln1L!hogZ>?*n4*p-Up0hZ]fm)rD3iNR=Os:PjF!ip-,d4@Lsc6!q9_9mbpZh1ka`5%CmBa(,jiPEF'$Jr7B2
%n=&C>g%13hR/PFoOk@SW)1`kj"ri]p4_(_.\'dJD#!4Ku1]FtD+H/%(`a:t&JPh^njL&;S8?@F8"8lO[D#GKE_:UiN"4f[ngqK!>
%igLa\ITP1b]5/AaZIhCU>V<`q_PYsdd-!Q`hjjER3+H-as.a@EbbmA;K^U4Ro!o5965sbK=.#R+GG`d5o_3KQgL,[/'H2]?g#.sc
%#R5p/LeY2,=;-cc[hm.lJ9E*8_=c(4*_E\kkZ[$SJ^M469th%"BM=;"%dS`6DJ0R\8D5;3^28_37>`QeK=HY`;]r\;/p.9mHkXp;
%m1K'/,AE:i7@oc\JmQ*sLIn:;b3dRnjJh:BY/>f_K;AB\NdEOOhd\1Fa[Ihl_)1(&Cs#^Une>AkD\u:]3Lh,j,'CM>K%d&Pcp$g=
%nc2%nL3Y=4bZMpq\77nb]o7WHMPQVaXF-B0P5/4)eZnVYEr!Q5n\otg%trg]S\./S%to8!+//04c4JH;C0LG@_#9O@2C4sTlb#8a
%N9\2P[(i3H)!%CHT$[3(_=@*U@OW&fqPUrQq8`Lmbio#o5I2)Rp_R+Pr.cXAI=6??97?`1YDt6$jj/-C`0ZForlKLmkPfu)hQs>L
%>Zi"p5G.8qs1u]#@r+12N5:omU.pYCJAKmX@:mi5G^fOj;G#\ZA&?r80mfIDc9B.GQBbHm=-Zshef9UnU[%#'>gJ-7RglP-`DR^k
%>U3Rt,ee,On!nX5c^O5ZKH4S,/Bopj^X>BuomX7#nT((uUUY!qC*n=2OcS&9TDP\SB6P>d]%.1t[BB>gSqR$G.H0C?CfRb0[CrF#
%[auHAs%`7$fbmi(,-'b7.\/_3L-ppUKWEc9eJS^!i1drABfQqK(/TjGAuO3AVrn/des,IbU%OZ<L9`8GoVYR6>We^UfbV#h_)Kf@
%?OWP.K;M1^)TEdbpI@*V+ljARA.7cQplp2![tJmWE+_4;+.JQ?'rq&7Qn()NlY3RiP.$s&PsC%">baYF8]PZ$<QA#$_F#9HJH8"+
%1D))W]jE)X;'g]`SVkcch/H'Qj#XV<3!q0W0T\#:6VXD`UZndRpjcFX6N<^rfp(at*J@4PBNTniWK,.O"/hQa_>dB0U@[VLVSVW`
%FS^*/`>uuW%Gi,M6rnNa`&T_tnTA+e>mUeK,M#:1$j&cBLliIYOfKu:G1CYFq8ADp;G>^&)FK(\]$NT5(BiO!F>cCN#/$]=Uejh9
%E0l+9iXDU@7'\jJ\e_)82J!iA(g2T&lc?Lc#ZsF@alHkd-MKAT)m1@T\nLO@=:*/X#oCTS),)t'g,H;E-G<<S=UKfeVWO.Qe"E'>
%mK-kbLc%Lul'1FjM/CXr)3h64(BRH2Gi26[%2:gleYF/@3)rtWb9<FNU?gfh#p*h"RmG\\;oB\)lZMAAOC?\HI;!\=.\?pY5DNNs
%+Iijb9fa)<M[q<nOG0BHRcY!G@iGoCIT*R(`UHT!"!g.97>:.pi'&nia.Ig4q6kjP6;2^7<7)l71CVVq9Mcm+(@<pGTQoeG]4[7p
%%6@7:pQ!*P=[:Ngkc,M2+^GFJE%Mf>k>J"[D&FZ8<%%`@i"h-p_5:q>FI=KLc#kFfO@@M]GS>gmTs-mR&Vc3t!`DZ,#Wh0&Xl10t
%'`jhnPYb=";%',+>##'k3;T&Q<h@7_*2cfSQT-#ZDlHcjYM34bNgti+![b_c3Ue9JJROh+Trk5#m&kjjAC<%J$]&nlBK0NcJgjNo
%K2<r@-MGp+(l_=h.fu\c.h6fK&6k5HAl!Ch(;oPjNsP(9%@o,1VY]RTA%.FT>Ba@X:=j#iATPSj>l+7%6MUE%V(D"1i=I?]F\E/%
%#$Fqe+Hpauh<ZBpU/3.n*09l(YY38h!^UV%n5TM+l*c,AL-_N_,T[olY,.4/TG*u&$=tJYc#FJk#Lj`@j-Q])=D14'(h0LTI0L.g
%C[&8oKa052dt-^('!`8#&B%_b%eQ,\[UffPC>g_*`?C.*l_RgsMQ0R-o^LbmlnpV>[6OnWM(gM27m>M@Vi;;b>a9bsR7NXdn]daS
%T>fs/5QlZ>d!^(DZN\4K;Q]%oI`7V-8'al`ctNjt@0C?(OMRl;n[\5=\]/6]-_S,NmLmlEG?##h]Gl`"ocd8bY(j#qg:"d"TXbo3
%WFK]K]LsgV_*fFSAlCn&6.;Q)5S,/KEkF2thAJ@CS7NM6!pA4.@`'Ou7J3WT@rT:YfIGa>G#X+J<#Y50b(WSVaCZ193S#WWF&?H9
%,,s\<(d]`X0^L1#K+)?%<)]kVR\<>4PTto5E>?lqri!DbK`]fmO8?dl>7BolX.B.MLD>h\a/XUPC4_fJ5OrA^,m'kKRRXXIU;=*a
%Wi%CHUNVDe?iaW[na5pfJg2QmSd&FCW+u)_1mNM_-e2$Ae5QPldt'L7+hH":ro9jlW-o>`_=S<U:)MDp$DsS3P_i*#W,C"MD"-G:
%okU(*e_3t@^ppfV,]b-9Ar(mG^nGA'WR+IFTHa`3g.]KFIf[LqIfX//1a#9!MC!?R?f63_64@F)dCaP\"Ku%)&4Seto%03]![lJ5
%+QA*JY+*"[&4Vb>RO=Eq?ViJEqRF+6i3PORSu<LEJCr<^m$2<=mkr3(_<\I*Ki-ZEqZ&n6cD&+ROo\F-,5;J<or([ErPuH;0rTg2
%4=,K*s26WsMEqB/'W1m]%:A6C>i)5q_Gf"mF]3gu2;a$1Q5r7:HIkSA/9EWa!ECgu%fYe)ACQ\p@&:tPJ#/!jV?S*HF)>,K5Cb13
%P8i;C+-K#G\5f)7&rSBH^Ega"6:D$DE;[27*8*J4atDh$ggY=fWX7eopen%]M;^i;2!e:Wk*Y>qKr53$52:4T9>`j$TCmDP]KMc,
%Mc3Si%>KG9XpN,l-=2Z,fB[rV_<ZQRpS+mos"M/bnG<bnec,m;Pl(FIT:o0SNjc\%clE2cc6'M69hOc2#-BrbWB(ptWm@#eh&]:(
%=9$,WFS@6R\V[R%9p7ogC;9`ZI2-FUFlT#9Z0BPXl_M8?0OGi$C&C/dJ>)iAH_WFVFJlM#D)C/F3>n:cpN*r61;p62@D>eeKAc:u
%QH5Rqs3YS1;(FuIqEq=>kVkS5+Ue+ln7Uqi&"K9Z$uZ'Cp'41JKX.!>O"0LjZ-;^Ti/N\7[YfhW%.TjGs-KU_f'5*5Ygq(D'UdBi
%F1=m+j:fugAmbHf#2ABchWfDpT^?XqWS.'r+F2OFaV6s(&aK6,n[Z&F6&a&a8]GCDpV4H;57S%DIs`:Q+Red8j=nmUBJAd:rs%ue
%V(B2?W5?/*d%LSU50p5.K\VY!rGMT0^Eq$T]0CcIrr-8Tj9#\.r-r>G@B5`#rd&Y(J$p9fo&Rhac>rn"^eL?3Ns>=HcggOD1*G4U
%s(Fe29c!U!j'hJZ^W"jbn7LaV_>X&+EW,R"%*=E#o&b13h''$Q^q&=f[tk^pWStNCo\12o'H,*M;8:u3_E#Bg_h'"gmC2<"F)tH#
%&C]n\FN4:Dc9rReJ)jNj-fh-r_Ip%$OLN\*9VPB;<2t-08(IKKBYW:@ou:QoQItXb#L35ibtt84mpW0ABFV#M<kC6MOp`poFKZ!W
%J$.N$UH0g4rq>.)EKR]?6oK@nK\odG\_:q@Gq`@/HFM]Pch:Ta4H66JH<i^Th*\/J[3<&ZRE\Q?2!fr,X+Oien+T]PL>dlerF)g4
%m5IA-h(EWue-sTI1K-gPof[6G1/6SP40'iA<<Dd:="i&AFPG>S1K9!ZI/IH!+L`<T<I;u>B[D&H[J^Kki`@_ed'-mE%!kpjO7g7S
%p\e-FAG8Rk@4uC[)h'dAH[Jof\]dCZDiF^qe#biW7mg0mfAk*d4"PParaMeYBT8TNLJ9Oj,BbE[';7u!!B9n2bmp.@b4if8Y_/^>
%I[C2boM0Jsi3<iaIA%\,JP)TVhItOd"8\[P=!ZO<2B/;ONiR`a&q2tHZf(5C/)?flUDGb"^"oejgP=&1W'0Vh?A`Nu@2k5E)1:gl
%rGF:;DcUqSIc#pFf7rg?_E88lmD9+N9a--'HF*&2rB,KgXXilU*]&mJ?k18RgCAVCFK?[+V28%7]=YZm]3IN_bae+a:(DL86ZYI:
%#^rW"*RYfI*1&NH+c\Kgqp#,5f;'3&iO^[#FCkp\*X7-oR+a)km=Er=]/!L,5[?S'W7jt65ZSBiGGj2_,SWl7c=9Kk&F`8Rd#apj
%KWLK$[FuM,63Kl\*(oBo,G?C$3IJtc(.[aM(P6/FD)+E<f/FL,BUtBWm>^Cm'JFUpeMbLkJ7b0bbBUQViAL:?5*/kD]`Lqj1d+,L
%9q%"A4chn20gO`c4MtP;7TE8hTi1KCApZk`G,ROgon_*.6M0quB^_!o^BZDGhO4l$Aa`V'q.U/M*!C]9$j_"br,;VJ21U"beYAb.
%CcDAg1r;Cp-S&X6h[:'ToI5%'rug)c!09Zj[8W^ii?5C!O6c9f+4=Q07(H7`O^Y_g45E-BCu#MgpFr`\o9%TG])DTq]61FJ+am<k
%Y<%&U]97QVqPR[l&k'u/0gE*-Y>3UI#A0(899dMVB:,:Db^Wg*BH^ht]W4gr:#>.2M\BiJn9^r53".uBaMEH/l-=g$:RG;AHk,p%
%a8"sS^gBC0>M(T]G,!DanY&C"Q0FhX5GN+iM@\jf?R=F*EK1dqJrUGNl-_9n7.s?+TUGTmb5oNe:+e@bBm)_a@8"=1[oDfT'(dDF
%h@fW"_0EZpOcj=.Dl*=E-g'aN5<gG8]<rg#LDnc;itZb7pKhta[eoQ&D.FsHeXfk&>JhK2HgUZ:+--K4l0hg83*oTUF#N7fcPiGC
%i57YLOf:uMG,c$eXl4?/pHdY*F3qMe<.icTlX@:"M0cWug)kqD1&+EI\fZkNlLYX]L8W2NSbI"D6=>UTSNQ_p"2SKSrJdhm`:s+b
%ehb.\"R]];qcj"AG@0"#R^c7E<]GHqcB'.nF^@75>8rSc]Z21W26`&uT5WQu/80]OItdHA@]K*rDm1`@.EpF+eTYa*\e"E2q:U/4
%%P>Bh3GA[_65n*1J2K(]46mfP"nbSEY'1*=Y9^J["'_-$B5IPp$Z`r\mZQ$]IGppM#NG7n0UF.g8,G7-(/L18)VYDlm!.FN?CJ>n
%pp/G\l[&DiSLY&<1i#bV<6ioe[mjc`l4(`X:2RU7Fj:+).:sP.gV<nf3?:f"rukJWh8!14I"MU$!V4&^ODKUCHGg$cqt"kf"qki.
%$[>(IC4G_*R_d'BPOs0\:X5&gna.et*oO30+SP87`[MEb`9T]$ahs^adnRp%](qqF4t!j3?[r(@koKIE3MCAn=1a$%<7`-SGeEVX
%ed$`iXT]\hQVV%"([g=#(34B5_MW+8oduJb^50AJHBXnkX8Ss4a.h4)oEU5b;5`hXkj&R1'/N;emjW4E1MDnEReVC,&d.8krX%GW
%f>S9%jKUa0i$jhagM;a3at`[qNdCHu*3bc+IH>9=apB]f#<A0J6r!1FRq5`Vbmq=[2CWFV5JE1JpZj/;]ml<tScjTiB@+>`aQ\<[
%dH&)'!oH[^YoY[Q#OHTb)%srg%Gm:MaO=hsqKH6&/XjmLPZb&koC^Cl@!.&VrIi7K#d-spQ?I5>AQ"gt$_43jB=H@&Vh&F:cNW_l
%aP-OFMIn-2GNXV4g+(TR%Ii/k"W]^))pNhQnBN]oT`*Nm$AR%lM]0qfD`Ja"ik4:E:MAsbdJn3a"8O=IG+e]ZTUG9"kru+dk_-Wf
%JfTp]0,YD2!L:.,H""bQ5B5+[WqqBQqh&LII]WDEXC.;nL[U]9e?">L?fQ9u%s%6M(h2pB=s#l7HGgij4M<Q(^6dT':BJLO]F0pi
%A#ihg,_g+`\0i6JL3^1(o6Tk=o&bk?TnE0th9cgA_I1RQ4SiQqdpR**hL,oeV+T*u9HQpTGFPd."l$o.rGZ7Klk?Ms)jI/Tr]O[l
%(5j-g$AA>jA5N\-Ij\1m:AjFJjm!p^qE=CU]9sO@lMj7_>+MSb?q<[oe9N.;=N3Y?J(K/fj/pSO;[=ub9P,f!I$_9Cm<Atl75NiI
%(YL,ZCl3@^6em\1DSm+L%IN+Mi`;gk])`rgZ]tVGKlIaGhs%qr1nVU#MpG_,SD2h@bWM<0#*"a#A$#(B?Gol>;KKtFl/J!m],/ej
%qs2Q=bP.Rs<\_6H5F6.c'8(#bBVSs(QIA@iX#n>TEp7U^-f#lpm:&B9EFr1fLa^Cgs-UQ.<2S-dlbl,9A[+0b&%8kldS)])$MShK
%X^UpPj.MWC0q.3//%&R,-PCLpYM(H`c:ES2^,WH8T<AdsO&oKE4MI2.mZn'1B8-r%<@]gSk)JVhlskD1KJ\n-;mpESCR_cg48\g2
%i\FHS-'$l#<Qqq"Q!S_c?DWtnM<@uiEFr1??Z4_^B'=UWDf>>=q7E[@453N>:RCOU&&[1TIBEcdjE<Fg=%b42Q*n.9XGCtEOLr6A
%mLj:.-,8-c$tnVGj)h.<O*%T>Vq&eC1ugdFa6JAiGqbk;0Q*%(R2LE2QJGiZNMU];8&\_S['4kh'mW@$ld[AU>-YqMklI8SQ)1M:
%Db]+A\$!1Yg%NYD>eD/j*+_b(fbYJj1nEEJcq-#oo(X]*l."mfA#Z$[P5TcrC>&=/i(hVjl^MYUBj(,/XQR%sa(4?!\YaeL.uiXk
%DQ-5D=kuZo`tt5u[_;^"@lQ!`UiW"UOd!YVCI2^(r8r\J=g`>,le'@"j'l/l7BU=;X.:+`UfD1R!m>UmSQH+;R&\^';q-[\#!Hjg
%'_Nr]P@(>mbSJ+$o0,!@_%5/)(7Kq6UXZ/!%JgW?/ZpdBjeT,?q/_IJ>HCO\dl%L;T.7+re\\&H?b9+=MG@&"ai<B/2-iq[a/$G_
%XN?qT\[#FG(U!ZgW:QuUaON+\RMjE5Ds2<+RtET93k$0rR7dH5QG6YXIOS6sF449mG''soOhY&D<$(>Bbl2^4-WAE7@"F8bFVZ-S
%)Wuh'gU3/&9?=aHDS:MiCNJ3drWZ`:ZYocF>\MJ5-1t<6Z.2D9"BPnE-I!6BeC\cl38H']qu)9p@sR6JNNSFS[e^bB_1fj1[d.7\
%cXq.[imdS!_Sq5/82J@iC,B;A\(.RcAM002lUhO8>.&,$FL!Zlb#Gg(UXuh4[[P(_o@6(mLEWc$R.c\VA]CW_FQbW@o<Z,Dm_LqH
%0@Z5OKm^5a?W<KkWMJ,ZS.T[#9'_n7/X>n^9)Q+',.jDeDa)lTL'"lb:AO!s40s.%h'qLS[N%`lXu2*I`q(':dL#6DSo%]2'>JR'
%=A#,s2_'s>==6WqU`[jpr;+l9PI,J:!aqcRGKVAifDQ`9=!uMWE4n21F59sHfH$HFj<h-lF0.aOU<jdmf[lj[bmf/-al`0\1Qgq>
%-ns=L/@BW7`EU$j,abHm?Y;t=lbf43F/F>sQ!\:&k)3?Xh;!aMWU+`qe&R`uC9c\:S<@Jb@S5V-Ruq#cZ+I%OB<C8oZLB*J:k*eZ
%jXj:pBibnDB.rC>"=mDlRDX2d6-OOLh&oNRB@qtM$]3+$=h-ng&J1LG\4KcgftCYTV4n/naMMcm/i.\l:^Mori_;9-5R0UU\C2^t
%A_+kMjX^BLScY?N.)%srl?]qD=K/4>6lqj0&O2hHXemY?rgG8hVE;=hl_"92$U^4PIX?Dd?<eqH;>Md`c2Bs6o2g+`1YMJfP(<5:
%n-.?celiGNqREtEmr.P4WjV/fN'82P/niYsl^YPX/#@f#-(M-8P\+cX9jO:8Xa+W]UmYU6bY$@B0ae8TUF#0"<A%tjn8!mspKGX(
%=r+0]XMg%*):'C>2s7jUA6AqdLA[-rpY*bVY$JddC^(dderf[;^Zq(TdO`b9IG-(&#oF,N."e(AOlDb%>;/>X85%Cbr+9U_j0JlZ
%T%#6<jHBdJQ@fiC$ROb53fl4K2DI#[%O\Q'T02TiThMB6CM$!TNPC(Gn#l,W(Lq8-82Fb6JV@LGr6"7hkYq^u,Xoc85LQREVUtcA
%OCj(P\iP]<hH^o`1o7j)@B9APj0X[0nHn'&bU%145/3%t/fW')o9I1t;@2>=P4D*PRJ/&Ql^5bVB"VhONK)GWQK;KpCVfH"r3GtH
%Yu^\Sp];l59jh[:IHIAo@59SO6mh/@ESlB\A5tOV,+VA1mq8P&ket),6Y@EA!9V_1I!$&?d_U2aqI@`?f7ZlPMUqpsje:e7d61+\
%&pRooXlI>?Jb)C&.7,uBaW00nD\IbE]/QTO16pne:,/lN:SaEORIqLS/`s\l==g5"R?cdVYd0?c.f3Z3;5(u#p[RGc>#p!\m(R+`
%4MR9pXNnNVHKbm".mE?i/T/2Q]gLh8B^_>HjJgh%B'-<2c/flBeOuY7%l\m,D(!Y&^hF[=1paiqk$(6#*iB(a.$=/lh#)IA[bGY8
%6k3/;Z!Xj)Fu<d#>[/lD[o22L0fRBQerL:sp>t9<eXhs^H]31pQ'\b\$I5-0Xki00$\cL-F??IpI^l"-::-h[GcY'anU-rAZ"._I
%_>_t32)RAq<qVfHe>/KeX.#O-FE$FV-c#h4,50pcCuNs:O+</C!F+#TDEL/>i];Slb,jXO_KIXUD/B+@"T&85[f=.rqlH\#C\&4b
%hIeu7dZ!AU`I3+'Z]7O`W\uL$gKA<PE(RE+\R3b8f&nIU!t,7_+cT-6hM=R@pCDrYj8F&dA?70H;fg\-nURa_5%F>^R3s<d`/t%\
%i%:Qgkj&.:qq-*;LejLWjW6$p`5T*,DI;!Wgb2.kgW<p]4P+&ClaLlZBo74$o`,G>kEeq&f#Vb7Mu)f.aT;:H40."0UY<F[g91)S
%LrHb\jX[=3-#^-Wc>cUiF*!g7$]N@:Yk>:@=_![reA\1KQj_&:Jum59FiI-na1WQWSmT1=mE.bZ/Cfq-30_<eiZP[Q>^bS=<,B.n
%[='r%Uu3E_n^fO4^?fFRl]"DDeYi7IqC(^YY-'<N03tC97p;,OI^=7n_qN"97&QG6nXp.n3oT4oF-rdu_k,,+ephhkT[pd,3G2Mu
%;UK'mCV_W0?S+['L!Jm_RrP&@^N.AtQaX1)qe;cWc^o@6V@+rl_/B(91*6Aph'fE6[J4c$\!_0,&fs&hB.CHeUI+YI4r,XgT5JWC
%?QZGC0AUf0o@rR_=T'g_X72:)mcZi81S;86^>e.OBNA_'?Se/48UTR<=7=SR4WCZ7:PplCg\G%C>tH@Ffneh#q?sbSMm:VB&7b28
%Lb%,6&I_ugo@_R:K2T?UlbP&ZQf7q\QT0K$DL"m5c]?U,MK/RROA76GE=DsdLP%p0_7K5\<kNX?]hTYF%u85XWU7i$I]98!-.Iq7
%7EA@MF-B]5m.'I"h>1f!MG=n$rhZS/5_5Rg@M\Qn<bto]_RmeNg&=fI@4.$\5mJfjZ]iUA-$EG$[<b35*lY,j^X5OV\a_Qk2@3I@
%ogO;SZGm7EK4kV#+0),5D->8Mjk5$$G%m;?A_YL8<+qnAob?soSZlk?P2@/t^oi"SDPMBI?9VL9rdOiq+_+m87g/u!'o]OUTC0bU
%&[=UT-]hoS:ohel9^)HgYuF>kQHPh>If1gGQf$Z&W3A,n?Z,R"X2dQuU,"f90&B!.YK9s[bh&t7NUhqD7QeAsqtMH#4'4.OWn>Fu
%%:YV-cl%<^-OYU`%S$9L7V'O=/`'dd=2!]Jq'q`6+^*O_II@+6^6[0%iI*KS6nc1o*9I>bNFk''Q-Pl00T3JjIQJ^2Rr'g4QbX"i
%-?esF8S5;:OoZArZA,pf_GS)RS(G:Umk8/C('r5YTsf("S%p/bbU!+u&lYn1bhdAK4.XUh"LHM)2em4bRSI00m??8`h:LuNc4b*K
%^J:t7iJZd.UK9P[R4Y5`b#SnZnbY4A3noM.Fg\jm?@os`g`-H'$<,f&b^T,9^:LT#XOHjtDXLX"c#Uh0pG5Tu2r#j6d)I!_>Pft$
%GB]]SQr6)\&eF`8/[4tk%!_(B=m"/9QfMN.oX\C=HX*(@&>!3L$'C_;[AWZ>C+iAO+`N`h$Kq*9\^4^.MG+UbC>PlUTlRH1H.Xj/
%iTSb0`%92$nhd6c4V,3M8t8WM.9!0UD"eK#NTd;5a3=6KG%[ld_D75]=T+fWoA6MC\Zmpe03HCL9\NN>K@mL\6tu'B5OkT(Lo6<C
%:L!f>._OTZM05o64;2_H&#WdclHMSpF/+[mleVFna&o!DpNPbjopN[K/hB;'>G"bN0@j3,EG!JUN%FEIm@2YZEiQm[GdapA5$UR'
%q<b;rViB3&ToCc9eXd$;Xj$d`l=HhTWf3;SB,rCSH@8f<[N?GahPrW)E]^t!flQVQgeQj\W2]S3j0]/_07o-8;IG2N%:Fa[,S>rC
%31!rC4]R:PX?"l(eC'<Qpej6X/UIkc:QoZr(P]8c@:&E)S(TmW-tWt$WLJjWRB4fF>J?.hRdoPAhRmB#U=1o@@PfR@eo[^b(NZ"F
%qdOFpBaI,JXWpKC]:]4WRO,7o[W:h#p?,3.BEiL"n/Y?*fK#BCCi^K+4M-lnb7obXEHdUm4^X>LN4Er9$#bXnnlMs"aM_\6jtgT/
%B)R]MAqudp,e'''Cb345=,Q[eB1*NFhffFb'`_5oHNEnan]aK#AF4VE].L/G\$%9-EP?dmMOE;E1L[)CBkEuBD`'e^&Yo#TQlH@+
%G\=;@3HfN=HP"MADOsUUVpWdK=0AGV#7F2F";`.(?ot?"-ao9&@hn_fPe2=s.&QH3Vps%b^hKMm5Ir(V'r/U1L+3^UqEpFu0uqM3
%Zo0*G-a(_u%&iZZn>=R]2qUecP)h1T6m3Tm/P]+rE?Yb];kV1VTo2sVY]K0DB,*gC#:eVYe4+AX\S#Tg7,a]Zd<'hQ0Bp3AO7:a9
%aeq@bAa([SYJ/%]?dER_jWd@55Td23Ofrg,*$6[ZQpc%A-`16].[?D(?V+2L2kODs]7kn7m*e^G)I3"sfNqbgi,*ajoWg6=E>CKS
%TPrTS&gaF=$hI5=8musj8_2G!ZW=0g2f2B0mBp4]dC<b,=of$&U:3<bXRrgckH5I$kI[RGk4S,/=SSZET8f[&HZN8B\7KmS/PkL_
%go#3,@&U1PEJ,$L2_'Tnh>H1NF@A*u4e9@3(GiC%l'765@]YuMb6ZMF=bgBm4:flJn9Sqh%0CNn^!'ntBf:+%?gd&8)[F:Yf)0oX
%^5:,o_nAKhj9@hu0QSHmF=Kkn^I%:eZ_K\\q5RWoCiNXe358TZ9b3tr;afO,<s4Si4]*&Q]Pt+6I`)/q?+Chq!4l)(HdeEe=WC_U
%XOWYk_Dm^(+QhW!=544i#0bOAb<_RgV<t6E4ek8'F-X)TNUFr8Du)N_mj9YG)YM7Y<aFA([c;+6rUg#pPJ90rB)O;Ubd)S$)\m:p
%7LsI<@ufuG:]t9lAm$de>:)7'\QDNU_^[s3`"YMCp^*@gU\RT]G41nPJL[k2k@3js9c))q+>U5pO#(A=HA%Z/2BtO9b<Yue,J2r2
%TDOk%/<Q&ZT*--LR-*-:@PRS@5t5#1m0R".P^TlZ/+A9V^X-/a'=2+/$Xs?@cF,LaLV3juN8C"O^-KmX.1fuH>L2YQDcFOq3eNjI
%BV3)ZA_fD7.b)e5(Wkr6pG'E^GU11K]</sCl,+*QGN*7d0js-JlY,bH&N)tQ<4j3Ogs6Cm(*+a6Kt8!VZTHQJbO00f`*RA0,P'.m
%fq1G]`6XtNXDsuT"VtcW0A[Al*%Y2FgXS/*<R#f`%9Ct[U[]g;80r&p:FTY9O&]^4[nB,rStFP@VnEH0KA8i*5u_;TGEV3&mcK-l
%XaDPL5@<aa;\3oV/_J:7/(@'f/`1L;?i:4u5'I9?Dh+"J?4Gf84a5@&#I.EX,Ug/m^.eIka2L_b/\Fl<^afkIi\J7`^/K^AZ-%!f
%PFHn<LXu%\;2pO3$1A.U;SBYI#DQa8Z)-6.'br#H>fMK&>0E&/:Ru#Oh4%MT-fu'+M_,QEWdk+MW36i?4F&d<Rs'i"(XqgN8Y>Wl
%_Z4?-)UIN,?N.]>s+FeL9O=<Fj8%2]`VBlId7eJ@Fo*?@_e#ISA2WmD^^o5=T6s?6:-J%.M`3`R::L5Lmli]%h*3t<aRSrfe&`><
%:]Ub5JM7G%iBCS7J^3_.gTC<Zn!Bpmi'DdEBnFDiA8ZG<*ldqg2;c$C^ail<\LU".R87ps#.qt(],bj"5LAdV>'i34`T2a7Xg([*
%r?X"u1%B"7\30c-Cr5kn9We2IE/+D;U?hdC?TJ-=_KN!/n4UGY7*geYdJKS*_@`48nBZ"PWT7Cfpp#F+il-kupD,q7M<6r:)B1,`
%Y43V,3W%4cJbS4pR,Z4(IX#;DFRR;?B"kaYZucI\=nkL>he;D0E%Pu:nDh#*mn"2qJ^$r\#kYVt]e:FF?jWG?m0t>21oINF`V@ql
%:)95Ci)cf4n(+MV;Y@5jG>IkOGd$+4b^4i8_!^Y"oY&O*[!P/>hIkPMZTk61L^kN80Qb,AE.^tZi.<&\ZoFp#aR=@=IrZ[6EEr?6
%:ot8kH6P=r.,7&*KqAe5o.GP[iTdXMGo/]r3n7:.;hY;N+S9a',s6[%E1*gC%,:NZJPmQ>5YSb[i?9bhqfkX,k%N,;=+r,5Y`nf)
%'uof)6tJ,LDcuO.M9u+X'Aj.T^e7](X_0&&,/ub?$m<DgNa!S0ds.Y3AqPVJl`TpK?*`uQI`C6u-b-MILD4u#N\E,I!;G`j!Bp?e
%08N%CG5-K:7&_ALqrrQc2U$R1JY5MhR$OH)6Sl[K`eOhDK!dWFrV=h,KEbG4+%>P5&/_cO>)lheT[,sT!W;0=)<*pd'-Y6%:bhc-
%^iG!`s6>V24_!#u#S&`>5c3AQ9(1_[kcG>\$OO96@Ycl-<R;mV$4XUD;8!i^dI9o]:qMVHrdk]:eR":Z1ud>!<.BE.Do,h(lb;C\
%L+Tb*a:+)"YIf"-LK]>WW:L.aD,._Qc5bs3rDrB>i!pfm'0JHmerEtZ5<lF4(q$U@mKH$T*KPnVqp9f8qXG]b6R1TOoQnam0\i<W
%_60J\RQ1Ppr&sFO*`b@^C0ucX8lAM"jueFjohA"PH1sec],/`/iG`5dmVcZT_IopMH@BRH_bCoI1]::]I('b<l,hb#\::6+B8qng
%o^Z=7kdH@1Q[_)DB;:7Am!>Z*pYUIU_pR4d34pq('b8Q._;:/]Q3qtgqu90T$#Af)_59h\krq41i8&^K&2ORPc]kc-9fL\/8$`_f
%_+YqX]gN/]2b+qt\+RutGYHQ+XR7@ci,K8`=3g-Tn5uTL)<X9R&Rp1r.UU:Wqi>rSMPf;Dp<(tL&t)2ZYQ252%bG?bG'-,'mR$G1
%Xu3./_'A?IR84gB#D@o6o[dQTfmeRn,C#.`DHC3-JZ+_rY*mf]C45r7UN&l_/G%Q@:s@a$V>dpKXklF=<`,`O/,<$hTpO=Go^#J'
%5>uhFbS1H<"c^b#r)KFK]mKk42J2O7,Q4(V)P'[VNMS-:b='2X>(0E-dIPa&bKB4WHMI6lZb>UPg9S.jpJrShG-2Rsna+]Ao4j5f
%#q6Aad"R3#4M##q\F=U#M8HIFI53mH.@BGR%8DN8,^kRZF`.)FUd)83k,DooU:hN:bN>MU@@K#Hp7T(\ka/mfFZk(pI[E-3XNb>b
%9+cgMBKgG9EZN?,5,AUmh:%)Nm%nioI9LM>VI.VP=b3@GC>hu/X]_$C`pD/Ik.,h'.]sIEpFL*l%[RP^Q=GW>Op^Yrm9$&]gpQe=
%;>osuQ_(Xo_m.a#he'4Efihuh5jfT\_(GQ[E]!mp>B]!'Y*c&@1mYT=@YXi/TcT3dB.(5Mf[q_(Pf6L3q^cbXf(1V^NOoE3FT7cC
%8P?PcCtkJZ"h)8&.hIrEK.YMpWLG>t_@Nnf6+^@IW;S\\0!)=[l1h*HcgL/$N\;qfdD%+druI+feTa'Z<.>BR2)ZMniV\NuR(&[q
%LY&thd*jGP@*s\/WGltRoHh/Sln2+Ha42J=R.S[2_,I-hhfY0uXcmukQ6&H_*V_&n9HKc7:X*2tLEh`Qh=.ceX+b2&,/pmf4ZFH$
%Sm,7H_t.[2Mf?%"mY2OdPDO8F?n*+%4MEuha"Ig]iC#7=%56PH;IS[4rueBQlt0@\%&_#>kf=+#ZR]6gCGBiM[agjrfLbPq@CKod
%KU7b:fAU8R%a,P]c(<SHe^^e8nChmI5+M&>Z#Fl3+Wo!86uKkqg&?*'\Gq^%Dp7i+_jc"d89d3[b(NF<R@E^6=tCTKT=$Sp#IR5U
%>i+6j_FMc5;>>D.3#+XE/f)=e2^p`A&\^@jZGY9!mE>!9`EWi'NXs=l`bB?PI+MIPKcdnV@JFP;fa'eqT=ooiH\qFb9E!ot4C$Ao
%VS\hQd8Zp.h3j_V7V8R\+&7lo@_"@-.R'61SPjX2aXLNOGp^d0R?,Nq;pOgdr)@^IF#gWh='_4dpWm0CEY!reWT*TZ0su;7fq'[!
%DX:*b20OqX_tHB/l=bEIR6"8;7@0G9eC72QHo"cL-;EAD2moX9&ZO\Kd^tt5m5pfab]*!kMG0<4duddCm3**ZeP7=YZF(9AoeRt)
%cK_Zjo3<;(<c4+FOn@VmGpL/:[27LE/&b'Dj=(hs^H=1oQ,cidEYaMW7BYG&<2@*4m73W>jla^[[f&acM0'5K&!=\Ek'hVkDs_Fg
%DD??"*P5X-Qr]C)O4._9k]tmq]QooOh<oupF*VnGH:-#sVfuStk4IWl+>nS1=C.W6>WU`6XtE3sVXJ]:+/YZJ#G^P?E'5oh:6+6j
%`m!f6DJ:FUR_,(eGH78PCRBt'XR+68c=E3Po$$sJ_8FLBFt,OO[M.nnZ`2pJb]WgIAZ#"MZ=Y.rDYIdiGP1.PE2.0lc94#pAeVMs
%]ii7E9$T'XWu&,,<X*a=B@j9GmFe&ZVp9*iFtkk$I^!.JXXYo4p:b6Ib]`P)M:k`gH87E@3/Pu#RnKZ#`pm&</pWPkSBGeoNOd<I
%Eas"eEcl6eUc%&!],j-%bhZE7Z+9&Gk0;]N.D5q!34G=`cR8/9ds9-EQKM2-c>^Ko9V0Pu&<*-_FNUr]Q^?8!Ht03YRVugRCOVZ,
%Sr1g)S+YuC0")k09;U2&g@ZR#?%9s,UAKeF7eCdQG7qUVL:<q[eI",HI;(e*_G'qT[ZHliLb)Y0q3QfC%HD/26_A6K*6`T,$YS;X
%og5cd]j,es?!Sui]/LP2B_;9RVE*J%=E7oO(<bSbGHouCHolMWF4u[TVZnr^`uQN>)bqEj+l('4Rn.^".rOc-Y/IpgMhOI%[CB9[
%6l++Op@ZE$X^5+WY!&>oV`L*@G^O*\(:TXjR<W?<jWqRr^?`e"btC3KH[2n1InC\E`(0Rb8g9S7fL]2O[<<bmd">pCgW/n5M<!%,
%FJ??p[#o$?FkTJe>PcK?r:$r!j>8(C;Jrj]]sP72e<eIA[]Yr&4.8eqqq!]:IQk*4kXUa_A^.:lQ*'"o6oi!-T.%)Lh,HG2@<H1'
%*o=B+l>C]89pMIal=O&L;3/;sVUj7%=7'hj+)<YcXc0-Rk$m%Z\'W^7F4Y'YksAibCGa5Cp/6dll-XmhUK^4[<mR2C8,Brjh9rL^
%l*UFl\p'+4P<FUV@k8(10dF)8cPg##Ypn^T@<uTDc_^re5bB*bZ)<;Ll(6O+k'AX=@id5h7Ep/V?85e&(Mmkq+hM>HlKs=+bV#0_
%b$k+cWjV$Eer+l5CG/p2QL.-\o]k')p%GA5]W+-JNIH)f*]-.8m-L9&.iTEjB02G;SFb:lY1)*"5Iuuj[,u,Jm<poTHe`ZQ$4eZT
%D0).:^9b,T][/]$=C*UTKaE./XY6;(+*u,48d\=V-)\6,h5$0;0.-;d\O!Na^FCNK-X1Z6@9#<j;<B+c8il_!>1nD(Dm!'1bNR*l
%h>(n;^35f8XY)H)WSQi,4`tg.]q+G*RJQ4.qK@?GQ*4JqmVX[oY25];!"5n%>.rUsGWb`-[^t5.>2/A.p=H=``V`oS=*;tbHg=>h
%N31F&bO[OKFQ<1rQO.#+4_=9N74V;MSD@gQmSE7+O)rj,m+fb4A(Ed[4_M6N8j@Zn?&rNCrAqTec6[WMoNXj9XlddDiE#BL[XOa=
%4rlNOp>53[^U9D!jKD<"1ATeo::[Sc]@n`FSV:b9kVAYWZkf7ZMK:/+K48lc_(G(5T8nf:^#<?^]GsYJRrRV;I5AGBc)b9se9BJN
%@aY10ibmp;o)&B`NRN["lGiE^qgNUkZG!i;M+/RGO"T_.bsuuk^D.c']3D>\88P>3H+;RS3,Ym:cgP-J[SuA@a4nO:E=$luL8B0n
%Io]1tBQ.=]<1_8aPTGi<*d=>npipGZQ-J\qN`t/^@l>4]NS4%:],@YgZ$TqLG'BQ[0(XFHSRQUmJ$!C2(K7*J]pHUbgqNJYNU1Sd
%?&nVsL=a=qnC?@Y^aXH)%ee]R):HaF?-J0Ic7eQ8LMQa]I<b*0XW9Uo*c71/R^5NGoqfQ0q0F^JX+[B'@hkoI[SkdcT&6U(&+=7'
%$h`Q$;>+IGq<5J]4uhh/P#'-\F\4gRH!&l_^7-]:Sj]nrGdDm_\\C3e3Ho)4:AT18Ki;dIlLAsL2P3+FJ(glo`GVU@Zi&?NmHj+)
%F3_\Rf%p/m6YYr#ZFJ[QIkF,^([BgaiF6$+^V4Adf2aQ"WI"=p2q'h&]WCd,YJO@t=jkMoEd,';F`^G4?$.Z7qq@uPOmB^Mq;$2:
%?9#Mf*$#c32Wn*;VLJ@Q]8[_uUYB$DICd,+(tPb:S$gH)>5J#iHCitH=%AbW#IWXOrdO7EEP,ZE0@UKtcL)6]S(GgcoqL=!hQ/W:
%`V[]q6!`_6SrYP!9k-gNS,92VCpT[**o?-#0D2rjPLIq8dp6.lf/8!JI]kk\F8n)\L*-&?:@_hCl1t+JrRC;FN6>n?F`=^8dH^(a
%^bC2Dp?S3/jic<JA++k&p#OE,)c+NMN;YSXlrDdjK`e6$2H$$j;l@sBcfp_coCK@jh!3,.]5sO[S9ikf0.EmgU7E-E[l3lBmR(i6
%V5GbhOktQ_k-im$KssT/0@&sbq/WcDSa)"'7'iL\>TNQW(@:][FQUjX^<Q=6>C=[<^=(P3_iNP9.IX'o/H=IVQ@BU1-dut"S$4j0
%Ij;d+!o[rB(-;qZNFH0Q?Dm[+1amjW=s&5m6%4Uf?/4Zb$@B5\mtKq.Z[nV9'5B`HK-u#FQ0*-`LlS;9IereXYHqU/,"IZ9V)%"N
%9JD@OYe/`XO+5meqU_]j-[ckdr3Us'2n9Oq:r.g/#uIGTXLEi_Ek;8arEutAl0SG7YN3AKT%=2Zi79+Lmdo($O([CWaUm%e?c':D
%l$KL]rJql6s1nrKiNMX'i+qYI$"(_2+gk;HfDj'uO'3!;3EYRnXWbOkPJ1+B[$_FVLV1hZMolLNIH1R<LMkuHl[P-q#6(.l$!kXE
%J3JX)Fk_XDlll-D\*^1Jr@YR])"^bbY+cj(@<_R_;d*Gf:Og40(82d:>3O:oWe>O^(KX5-nLsGXWRt'8ESXGY`'GRlUL]4DWX0rq
%+HVt!Sr@.;bn5I'AWk<`+%3?P&):2ibKFGPL.%!S9gV/l@.FCNq!t`5-1M5`.A&5Zlh3EbI^#(!]u:u7]HP#0E"p?A,@@S[02#'\
%[l#NkI9:?n7Y=JnINjGnjl/"\A[Bj;8>-9`.R^T^r^W0fVqf\LpP3td+'#NEd%k@TiVJ&<SCfdfL\dlsO?3REN'llTNURPC5?hTQ
%fMAlUs+dqTHXKG:Q!/Yob7@VJA\Zs&5'rob#ZNQ[\PQt7g1dp`rS>6ociSKE#Y/;k[lqeUU^&o_%llh1)86:8W/cNN#rrW=IPKoN
%Y&EF3SipT<6'Bnbme=#-,ihM;q)m^T$!YpgM)ug;c?rkkR'pJ9Q;C^BS#I)$o<92/5`kI/opEE[ge;T)&[G,MW(_3PE]b&2,_7TJ
%a2oIsj8D6@;q6#o/QM>W&S]0WbTkQn#W4j2)lgJ";,a3d1t4^'W$.1oF,3qNc6'qE=25i-Q4BY-*JlijGCBU;<.>u0BkGt1mMO48
%+SD5kKhL3`\0J]*ho&/UWs@HK[#>'8U8fY+Qr3]14[mE`)\_qj<+2O2o8*#t6I*o'MQSFk;^/-HfKO)U3Mu6o;QO;u,3"V5i/U&q
%:Jp,3`#X[r5Ckn^YVU/'45dtA.9/>VjlMi=,B665Nq=%c=\mF"I8>u/7R9htepK0HoG;h2RVmJ3Bu9k;-LA3M*g-FkaSAD';)<<N
%S.[iY`V)l]%<2M67Dp,:!ZCF9!q$?$oFrV>8DK?;o+SX/RY&4_$?hCm7WUZTS*c/-gl])k4iQ<s;adYk4[l`:!hQ,UVVVD28q3\8
%kkO?62.?MY'DC07O%=aFjSZ*WkaE,E-#uV9mB[Rtj8,@Aje")8\Dmq+,LFk;PdhrX8)hfii/T,MN*F./\8Z=X'@'<tq'GH"gl])k
%4iMp%;fl:%;mc0uSt^)t?q0B6oG$OU$Wm)j9+nPK8B^].8-gJQp_KMO_q.`3[,/Q[+@/pECHilSL-Ql:*67^pa&Y?n&P1.8/KdR'
%P)tbM+m51Z%R%>@X;oiuB5#L-JRl3Mqn9'N#rrW=Uhfap\;"\c.)'PoN/+T&'Vcq)Y-2jRnU`$pKbl!H&WoQ,`&o7BNDNQ.YE>b4
%%CKP\W$.1oF,3qNc6(Ku'4N#FQ4BY-*JlijGCDGt%C:7XJ'/cueqc/hK@FhJ(G9\tif<XDIhOJt=ZqXM,q6%7f.\nRoN-?rNp/JL
%m%(,m7N:J%l#26F145'L:2.!3HAg$&I8>u7%J(8_c+HEa*2B@.-uhc:Nl7K\%:@$>*D>#c(Cj':_FZ10^Vh.L3tcb5VtaU)?c+up
%[$$YTiG09t;>LY`7D'b"NG69/R3q:0@31R17`[$rf1=te(>CLOfFUR";ad]Q0+_ji%Pa#892AFENl2rp4$O[uL>+ee@+XUP1q/+O
%g!7+G*Jll+;uB?P7:u3@JsE.E$=C]dN7)(t.6@HRI8/?YdtIZXbTkQn#WZJk)Mt!4@f,g6S)a@:U?/!u7@JLWN]T^':Jp,3`#X[r
%59%=kgH37^\8Z=X'@'<tq'GH"gl])k4iRFfp_r9D>5BaFObTrG?q0B6oG$8WKjgAH^*Jdd7Uh$:RR&&N_m]V?)86<0Veban1Qe=Z
%NO9i<?XmJc/qb4pK,dV[E(1s]QpD$=&oo8Yr*9"8DWSC"4TdES7$?4eme=#-,ihM;OfmY]iYk^A8(TlXLlh!hp_nlrPU+WK<Gitn
%+N`?3(F0kB,0di7:%O252aU4V^.+io1t6ubTuM%>'lZ\9E<gnYbTkQa6'Sl(EC]$6:PQ(3p5\EVH..j4!Lh\-l8RH*Qae8[7s^$,
%M3j$!&%[U2)$Tq+)R>*M)5Y*r;fk^J0k'NE'fOc"O%=aFjHSV=,]ZM8mFPQYNp1nJLc_Vt43Td.bV<:IM@t+YmRZ./am_1ChQ__S
%E8dIS.\)aonk7c#\0Gu`HA_`Mp_rQL;TgKP.72)o%VCt)6;N_MOCX>b_Z#rMm'gCEOo@hk.Dsb.jHLG70=TRNNi3$IW'9XBGDLN4
%>'c&=G9lTIh"f(]24hKk$?hCm7WUZTS*c/-gl])k4iQ<s;adYk4[l`:!hLSF=i8(7dU25f3rXDQ:"V\ZK`*gQ,LYHT3G%t(M4E"'
%qt1_oj8,@Aje"(mRX'[K4%;k=;<!VS*JljB)8=+sGD$uUiS9YES=B*?9AGZ>,B65"MZ8)!)X]%XqC>>R6Ip*0U\#@KMY*QqCO>e%
%?/(8`JIr*##(a]$hZ>WGp_jL.pA;IW&i?Gip>b+I0KL":Np]8pksLJ,atSG\E[9^:aSEsI29a3_4aVq'X:\!8qmbP,b)qc1+\0+u
%^PQ_sm2a7:Ca29TKAgSW`@+<Nl`8f-]HE&Ji<;e@7&8N1XD&`<r^Nh8_q.H/P_RmF2q/\)kQ:29!q)EWmKg1A&1-a8gl],<Zf,\e
%]qbF.hAEOfUmW7!I^?_,M)u>oUmLkGG_p,,TUUb';8>uGO>RHj./fF&U1=%Z$%$<bYgJ2N7/@iGV[QoWO],G"^YWF@9]&c:gsH;\
%0a6>EB^$s<gl])kET^uPf._Ql&pD'EK2S^g;Td09EC]#K`#\(krYNH'0Mdg77R9h4L9+fk7d2Su'_-c#2PpfXB:?'^L3Z2`)^2*f
%?R(\3>&:t/@UhBl$b2r>\75lU,LFk;PdhrX8)hh?L9KS0N[`U<qA@KETPq7p/oaD@Nq=$8'2K4B*qU/o1(&8`(p\mI)5Y*r;fqs/
%qO4X<V@!-:Qq*se&TZ%`2%hpG`V/UL2TPJR7E[nub&GB8E(?RtV^QOTif:sJT+,/Fm2]U?>W=[=$0S1ur"=3!mRZ,qT&P5CHk#Z]
%/cCs4841r^0Ve7VHAZ[g_DGMH?P:Em,;I%Xboi+8iELi0$ss+S1UQn!Jcne^XSm,5)AAle+lo"SjOcZWpnS<S-m;)INeEpp$X^fR
%*7qN0+D-U(1>BkJ?<3)>*!nXR2>g0R6Yc)RQ=h-KZ5j3X_bc;T"M2=i/Yj1.=^1NM,XXtqg%VR^*g-FkW%#X98CWlYg+PD7(ljsb
%m[+(DfE1IHZucj*mRZ,q\FYpCCUh'QqHMf5A5.SdG*)RFp;/-D8DK>6ic!g&U=Fm6,$IG:5EU]%iF#.>YOiMLdr.q44&^im2U!Do
%hZu5Rp_o!ZdUN+H(7Sh1Sg*0S.H$4<i/U&q:Jp,3`#X[r58h1igH1_*""kRX;MC<4?@I_m&pGVh85JcJ%q!4;7;<\D4[fWZ_nh;[
%?g&re$^.SG:"V\ZK`*gQ,LYHT3G%t(M4E"'qrJS4_\#h_*E0`o>JM81QCahh*JlijGCD;pNG%^IJmG.4dG,6.Aio#cG9lTI:[pC6
%'[c23:D#1RJ>Yq*eo3=<oN-?rNdkAB'DBa/@D<9CM"EVm:)Uc8,,_g#I_E__\A"kSq'SfQmaqU/#dj4<-14=ZOgt"HiG1Q&8([hY
%c:r#i\LB2H`#X[r&pL.Lps4`!iLZd?^[`'^A.8c"8q3P4#R;q47HO7iJLn(,P8I_iT#C+iQJl%uV@6g!6.::4GS2j0Z1d5:CG7dc
%`>OUYLlgZnOQ2N[bb0V/#rrW=IP-!W[rPa"StRlSI$35Jme=#-,ihM;OfmY]iYk^Aa)O5rLlh!hp_nlr1jfa`Y-2jRkljZ0(;1j4
%&.pQgZL:rFUDF"1SPW7>YE>b4%CKP\W$/%BcbWM\@Ge:Ygi3MQ&SUDO9&,Q=,B;lo_q/jS8+j@(0k?8/F#uqkAp`JLG9lTI0C_!k
%'%,u12\@X:J=fA"eo3=<iG60U;fk^J0k'NE'fOe8&u@jC-fgNNCF!pmMs],#Cl[b,MA0inVhhkC$Fh>-dSlC?,B665c;01uiV&9X
%m!oHKV,ZELPa>b:Nl2rp447(*08-N;Sg(S$Jt=0>XPmPV_q0:0VarI3ZGn_0s%F+"g[GiP5^t0BPi6C'E_;8WQWn9^.I;,[Wdg\+
%iJoGHN^-65;<!VS*JljB)8=+sG>,iUd=\f=#CWqLEJZaiGGM/3Rs9g(oq84=Q;PFrU`jM5R*kC\?g0"#rcrodfK[i<rAM;V.F?rY
%3G%t(M4E"'qt1_oj8,@Aje")8\Dmq+,LFk;PdhrX8)hfiL9L.6*FT1X3&dZ?kGGoi&pGVh8DK?!idW,!%J(8crKX8d+_s')dI9##
%kUFr4(8gMRY;(/@9>\OOK/A3G@YSe%RPK7"%+!G[^QBX);]9F9*59G0kZeg70T$u!Fk+AIJWsRI-0.V<Oc]0uiG4gGj*LD-NEIKf
%bk?%kQ^&d=7m`5X%=]&C&FCLW[uHXBn26#2PU+WK<Git7UVXAmHjq8Ddd2>31lk1W,Lht:CF!Xe6g^3ZC5=,$F0H?ofJfl\NBSNJ
%&S^JP9&,Q=,B;mZ_q-Sh8+j@(0k?871HS/+Ap`JLG9lTI0C_!k&t.:F#Zd,Z.XV[-1J3.nVs'LsA&@)j.VuJ#*g-Fka=5$Y8E?!N
%gTS*=*7OWr.Fp1KOj_H8FNcICHAW>Z,jn4Yq:Y6pbhfUX*H9u1PU`2fo(#H/OglWU7s^'mI/"WJ.AE*']F&#`^l6]KkUBt#)Ji(\
%p<PR(^CBdjoJ]*3)88QaVmP**\]':__EJ4*q?KWT7dgo[LpZdg-14=ZOgt"hiG5s:@g[C=5"9TTkaUsu9AGZ>,<a$'`)C2IO!7[t
%b,b"h%*U-uQ(F`1T@_\JrA.1#Do4[]rJcn;L9H`\.4qu8Dm;=*mjVH>a\nq&GNcPH[.G%YmRZ,q\F[&cCUh&&m!oK,VDR8ePa>b:
%Nl2rp447(*kJPnj:XRTtH&=G+%0JCYJ"`bG#;'c2jS'sO/?u7>(h&Mt`:-?aiELi0$su@fds:t`M$-OeXSm,5)B5Gm+loRCj>a^U
%3Bh0#0S:!Y,ihM;q75uPgraV"H\TPAnO[Wq\DPKPOcUe28%OGiM/,XV+'8'Nf+>5.#[bJGN/"MZd.LCV+h]#?g7fB/)'\'O8bP;_
%HLsOs^CtA)n21h9V4mV+%5ikbWdm12O#uP=,45`DF:]bd8DK?;o<[Ck\@n[6>M^4&7\I:4UjfY`E/?XhGGLT#Rs9d'!MQ!=Q;PFn
%U`jM5R*kC\?g0"#VVdcFGGY]dD0Un8TYD.\b4%8$3Mj^glRb$8oK>X]*S&1NjrHKpOHuK4`#X[r&pJd_Hk!Q//7Acg3%1U1-`+KR
%&pGVh8DK?!idW,!%J(:5AJFbN+_2#e1E+!i$U$q)6'=+&$2\A(Yht2%-jBH/+f>`U,EYo.Cqnb7@lU1i\>/o1KAId2N^-65;<!VS
%*JljB)ns=uG>,iUd=\f=#CWqLEJZaiGGM/3Rs9g(!MQEIQ;PFrU`jM5R*kC\?g0"#rcrodfK[i<rAM;V.F?rY3G%t(M4E"'qt1_o
%j8,@Aje"(mggT'5is'5^.8&BX\0H"VB>`>Gp5Z?Z/tAEZKQC'uIYg-!G9lTI:[u12^4pojQN#$*KTJ&2b\6d?0C]`L=n6KCe%@,O
%)Pu_+c$he#'!fdZ<ei#Q5DfD=aT(1*bqqe`466F,O9pc?)X5pEpUM0q";0oUM2[`]DrU$G:?cFJ+'K0%1,jY"1<5eW<Oj9,8;:3p
%#(KDJr7Ct-JCl)r'"4rIMA&l#Q>K`Y%>7%"QMbO1NboYe:`N1gocR[W[M_-.68^_P;X[u^Zpgo`P4iNZ<C/d@M^p+'p_Wbr&68i0
%Fbd()V=fK\,%Q;YZFEY_W'_%VU%2a7cg5$[1^DG8;A\DkAZ^XR^_>/)*m2m1J3-SWg$Ui%$8bE^.IJO%lTn)Z%XljZYN0&hclmHq
%RrB#fM]bSh1ec<A&:$[4BFIYb/gG5N84X%JCn$M)&i>B(_hM^>cYNl0(t]YA7P(mHZ8r7WF/TEE#dhPX\.3pD*;52PK6M`81)l&7
%cO["Hc7sf*';gJERR=!;9Y/>[$Z!(g9e;S%J/5F(VQ$h"a#-P^8kS<7l<5P,bYC-PK8W9m>h?q"3[?)H>F*9YFU5E:I/.(&V+J%;
%RUd6n1(c'gU!cO>Q^PEW1V/<U@$5DB-;C3\BTfA,iM9^gnPn8Ze.SYD(/%UX*E^W[d.'DR8MCD_<86M[%#se`7=M[j7Q:uGA;G=r
%e&RUk9sMa^RL.g_ec_CLh%'(ojR^TBS"mLWc+`.tJYXcm@u4,lBaLNd%<8+5/m9GYUEl+T!)'.%#t_;!W@2eeTo]G`$u\VgWmfgl
%A'@4P#j:t>Eg-`+cT'0i&t4P3>nqoTm3(`K9#B(?hI\4JjYK,H<#m;%[c5I<Bn@LZAiZH%;3K$@dSpo`Ae7dCn`A>&4h7sX0/Jbn
%#GW^pOPI#!_Z`0f*hL_eC'e,;0W0RQN[oXC0&W"T]r)$V@=HET)Bk5,Op)KfdL_Min.><=gKQop9/t*l9cFa<Qscr\4`s(K2%%#b
%N:B"@FO\_NNT!HON!X_kejhA<lQrZ5X@u,NCf8:dZs,P/c\/Qj`]+PC1lHO9-*\i;f1;[HLnuMP,D#IP2.g5<8K$-rD<Z^gW@$//
%QA^MOXUm9V/?[KE7<SDZ"EtR1$5E02(u)t(2qU;)P@iN!<tTf'SnKWFo2,jk[#hbg3P)jns8!fr1`m0tSpZ)<F4:3mp.#N/?K1Qg
%beaXsPlIr>1\=EU1I.(GkV?iTPGp:p4_$ZJ>?("j__kn=3j-Am=Cnup$4I5JE4@ea!90'V6<5$;OeAfXi/LNG'HsSgB!E'/"KW,Z
%6o2)%qo&o,Z@r(U5YHPT466&FTjltO=:S("ZmR7*cm*WHDSja7MD/4cC,2?q\#!hQi*"tlO_VS(MQb/nWbS4J:Fl^#5`PD;2o\b*
%\e@]9<l3?,7r1L<^dY>PTc^<"'t&^hWi%9tVC>Nae!(WsPU%'sPd[bE8Li>V2Udm9M3]8U%b$ZBjpfo825SG.4ADd^gV??q6rO^<
%dSusX%?;8DU'X/AY5-G<l^/]6l)%R8cE<ti1?M]V\n>+6rfqGF'pIo\3Y7ZVP!mlOlU`+YLEpl/9UHXPp1uKJJKuJLanR^-jr[GU
%F=(nO*pmtXAH\rjON)AI16@)ESO/+R"jM`j!NuNr**`_7FB)okTT"+QO<cHlIQK5k@KO,?ashmrX(M,R/]a*35pYA)@RV1`#@um*
%$7.D>%-@]V"rRe##.2Vj`&>H7JKtD[NY+)#<O"U*Yum0+l7Nb4"OYK<F&@efU_<(YpbKZ3:5sfrL.t*rPdO2Zb^"D8bR7mBl%g]T
%MQ"YY3.,PDP90/=?SICn8]"^ETsgAmKmdBI4^0ujlA-B!GK;GIid<%o+#uKu.!^X@V&HN/KDM_BKA,^b=)*!Xg2ZU12P"<)<mfQ2
%Mhk0=LoQI6-,!oBet\R)kK?>1co_NC'3'[#3M%:'["EL(!BmI2h#S3ZdLL9.pmkpF+sr>NlMSbLV+S"0<2KSua<*;OVVg#>eU3>,
%]`I^k3ZAAT;IPOV(F)bt&?7Mf%I&Hgom/P_OV2/FJg+3O+W47T`8_h=Unl]NMA/s@MNgZiQm.6Kf8<NR?JUtm,o)Cg;Uok:-rNSV
%;l$GXN%7fIoidJEWm:N8VFVlP2-!jWUoL7b:o)%.%dGj=_!bq\c.&CYCjo`RWg;Tm;UnW,7B44RMPj!F7o[Io8]<Gp)Or'H:o(>,
%@u:t``Y9jI]iLpYES/8F.:aDsU_EMN+;^'98/^f8%^cI/WhL/ZnnpIZ,),]f@R2eQQ<4/O3ESZ\?-<l-gT(;SKLr?(MPip0_JRn4
%g63\:`T/MB.CdS;p<t[KLqup1(/tPY/+8/Y,DJ-%s,[R:5I?mH`fDM[?K/Fp,K/_&/;d4UZ$@(=mNbd[/BC^HJ3K-lRab/b,_NJ'
%;O3%bPA^3#B+8C&7D5B$K[gC4PO(1^8#V,1d+&05<E7]FUNX(]'.8]p,T:AbVDO9$dK*8fELCC5WEOmU5H7g-3]ao>Ht*&J(%ZEK
%=9267:PMP[#hlO@SW/Mq?-ksjAaGg='qL>K+J$!BV%?HH)2YVP?p^#-d[ea<\K0;#\i*,mJ6`u@)8pJ6f,:#48S=.70qCVA3i4]4
%GEU5orlqsu:lTIcU"GQN#"]ie)2e)ZB.3I!SO$/oFTtEX:!F;nL>knT)2^K[h260T+)-c1`#082L8t&1"$I0I7;NTZL*"]&]'ASi
%I9]q>l6Mod<`c!,@SCDG%b%+4Kb%64g^?[eF9_7;a)qU.33G&Do8fh+1f5<d]`cdt(1N`k$PV1"GC\!FlRE80ga3G*CrkZlj.GfP
%]K0FeWSo`f8H^u*17uSYO35/G3f8i*)sdh#?lP,.Nhfe$SRD+hL4i8[PTJBl$7R;6;3X3"C"3bbV2bpH-6Q6cljX>n1uN:=0NG!M
%9]ad/'gjd"mhb!OTH$4`9b_G=;43(!_R=NVFkK+UM@<).:tUT^1N1J?[uH!2C,;@#e<kLgOJ4.^=Z""/FBT*Bn[N?qFFk6em7Je2
%T?C<VELF<bRVjf!F%o[OEB@kIk;!9fQ'EY%-r5Ok/mn_7;RiIQKLsST%YMcNZ,EW[-O/I<C>b#Xo1l@8H>`];r1n*$ZiA<s)4-n_
%Ha&W-TE(TWn5BB/.Uq?<6'C0&VJELp*Q136+h_uR:@jC[RgR;Z,`-,&h*>'iA36/=OJ9:s?]6Ni1[57\Ql$7&5-$lhQi_[L9F4RY
%FXSKf$5Ycp=2Y^Yec^u:Qa%it9W1!l12RR'Moh]*\h6^^Z$J/H7oNP0`'?/I,_CE\.jeJ5ZK]1()bI;6LPrD!Z?!Ci?P'i2+8e^R
%AK\fqp!=2Sm13G6?SM6oAL_3,.qOLHjZ$)?"Be[;ed1([NV$^FQ6Ap9>phg5pcp4L14lQ8g;.pOUp5&#XmpN\.=lWE6UYYdalafj
%L%1R<%%.\gUg[Ui^RDT,>2Fe"OD,"7Je)st(l8piQQT4Bg>;1#VDnC<M4?l(ab+3r2g0<A8;cj)"_F`.dO^H9-ne[&nZ'Y`,_]h@
%YSAF09LQFPf0[*b*bYd1:FM=c.q]2U_:KUM6AOrB4EJpfB,9)aAoXg7K$7o$L]EXET6q\,2(7t.(-,Z3.CRJ\S]QKlH[?5n+.!k.
%6@RAdd3:$*C3'tq&kEX,6RmsFH(]2pG@m3N_lKr'8)g7h!!$VsXl@)l1C">W0#$LY%j(QY2h5?]eB@n"nhN1Xf6*+kdQ!-;L;@'!
%?,&g17FUA_#uai@Yo(AP??]\*>"B#f/[Z<^W.bA7R3%0Zmt&YqNM2+B@QYd+LWeTE;FX\mIhA;e)In!*e0kcb1Jg[lZ_6Y%5q-mb
%'KjZTVZ/i:OftS-@T$kC73.0#d=;b?,_1\04$nfG";,(2TuGq&Oq`BP\KtU\i8u[9Go0aP%Yq]7NgKkQi=;#'O>ptcI\CAsoNLlT
%R&4(s$-QgWMbPLaIkDd+JoKuEJOU2++-3o_qO#7`obBjD^[tNGER\l]b4U4ig%hGC"XS&2M;R"?d\q&Vh`A6nWI)WQZ3E4adP]C]
%EhH!G&N$L.<0kI'5st%TMGh"7:e.H@.E"EIDYXOL1lEGO@h'O(V-jc!HiST#rUX_Ao>\aIo]R,)Zu1dpW93T5+K2MeMi/u'G$o&j
%B6Jin`/FqpUs5`8o8j_#B`ZJ2>)OG(EKQo^3S:WER&C?\\V\I4TECiCl[$F*$+_S6Hks@h!hIZADXlgrmQ(1HV_7mFm"mX_Z5G9?
%["Wg+6YjQW,U0\,n3NXS#B>Q%18rgo]r.t>e*h,fciZ"k\;KXp5D/%!]MJsd7eM&IdXBu'UL@g=5VDUqq^J`l8YR47YU]":gU]#C
%1eFEp_"]0HZ#+E`.PIg[EA3msG&G?m22dGBa3O)AF^t(=)'6@MQL:rGIk$KX@K]:@rjks1A.i)Sng[:Z`N*0m=*9'qo`22\YBa+Y
%nnK1@5r#:\(E,N['.pD``N=b8c]n>0?'\nA'R?cS&s2JiK>Rb=14<jk(!dce7EWu)EVJ6P6hQ/!q#b(=:*D,j%fh<W]`JO.*sW-?
%pVke&+]IunYB&?L06kl=U!;(TcnfedoM#2uka;VW4juWQ"Z/;u`F,%pno1!r6Nrq;\''pkml2f7H'1^`J=m?BOp+p%HitQ@<!TY%
%$n4jj)ac"s:UDAEaTif/<!-iQ<B\Et/'`Bj6&`k@Ci,cS%#@Q;.r5PLYM0jDK,pCjFUOp7J'e=o1nW)Bc+f7?M50Ys!Jg+LfKlE,
%isd`!_:cbC'Pi@^8&,Ha%H<g'/tif'-6EcY"C(OZ_$<iYASWJCYpUW>4oQ*eBaf;^D+nOZ)gd0RkW\3To'_KlT;7H6JgbF2CFRe?
%9Bd9@jM'+HbdCZI5"EH[rmk[';'n9kVW,^[k)cR=?8,M:"(#QeF&]AFDXc2\<0sLdY/X?[!tGa',hFbRP$qKEM/jt8;036NJ2BuE
%E8b<P#o!(7o%Abs@ZmT*.S\?6'0lMUmo\d^*/1:W/W`Sc4gD\7P%rp@1aJJ)=.>*4RP]k87akj)fV;L3FtmZ3-ig0B>eD;SK>RaG
%U3\0hLuP/rkO;jj9/TkU8slV-oR2u2.r$!h$kf;A$7CXkW8iFT"iJdK0<iK6$;\7Q.WX4iEd0f\=\RAnfqp-[%$`-d21[$a:q4*@
%GW@mOA`3H"!c2tPq=;s:0tf_M]!s/*":PuL+d:*FR)E)tp$;Z<FGCKHZ>D?OM=%.Q@QkK34I)d"?;s&a#>T896UbLH`L_$Fe8eqq
%O&cC90>@^q2eh+7GT'^[_.QSMYnTC\A5cZE-gP$B#C[,hGHB[q7DToWMn\?$JTDQ]Kf-`BCXcOo/?fuU9,Q1r9;3a1ZF%M1r_-6"
%4Jq?jWU*<K:fbOVjR?]ZC1H^T?UM\7DMuBF%MreX(cekLd-Vu;a<kX<;CLKOdE^B4hr4(;N5Xk"'e<+Mc)i&D/1^&GYs!?RkF.d#
%-^!)ikikROXG3:l9q56r/ZR#eIeIH=0;dhcObr6r\_4&.%cCUe7QBJW!]=X7cQm-[B*#a]4>?nM*,.=W]EaPA%b+m5Fl*?=b!G\m
%#NRHdJ>I/SUUGRC8ZJi-h'=-MoJW5k'[";'"agV0E#hfG\dm#Cc^SAVRr)IiL[2u^#&HV]*VT/mOM.e2PFR<$(j9:eg%[Nc\L+m0
%p^3)-R70tN9H'B>%N.<N_e6;g6qQ*D?P;#%FttsG'H&'N$^OUiO?iXDOCGmNWg\Jp+&&D%jHn-M5uVAIEHWsC.NP"opHfLZ%\]sH
%7W<Gak*2akH%q0K1ET:/S"$T=OZ*4(2>a(FX7PTIVGQ1T$iJ;i&tFkiIOioC'bifAB/..Y@Dfnc@b&@.BUpH3jabfcgucD83BW9m
%IUq)(cV0ZZPoaa,%+X<B[ZG%XeO$Ml0pt`/nf@-@krRQ2;@Pb>#q(D-5S>(![`,O44EJN^7a,Pqs"G"1nqhPEKr[m$>fBb95a&V*
%J0jOZ"JO'?Sud\f&sJ+_Bhk=sjj/hGS+APLla4]S%)a30Te?0oJSbE9!7u0f<&(@j6LlP-c6`\h_c<s"'i$?B'OoQH`)KH4V$BP6
%SaFjf[:Dd8iTqhTC)p&,_8-lUK+*\#Ze7nNP,,T9kVb0"<.5aPn=\(N6p.s\Di@Xr;umeuSeAu*$rEF.i!D[Wmc2[m.31NdHIgPr
%qkl',N/SD\p_)J>NSfIBERn\;:DXoPZuq!Beg2GNiU-t[(mjdqBu!AMdq!J'@u7DsQK,1`%9i6=`%^C1k5k_DGYA3`o;Dsk#-V5&
%Uo0PGn4G&qGpQ"[qI$7^Ts;mW^u*I_DNf'nm;[d_-8K_8%C!sJJ&DM6D5p8-,aET,k0;i;>PbM=YS\;d8Hr[*^SL9,f!>8Q/j<Cc
%A"0D'2HihkV)EIMq%p189*d&#%0/a,L?5><2+q?ti##/9D*4NtH<#1Z?o4!j'brFm0!Haos/!M,&oGZinGotRSh]F9'pDmVnhA.J
%k*Weah*eH88.%%-,e8rT9EA5(&2uGt@:]me0^:'VWeiVDl(:8(Loc9G%2uN_N9a`/3>rl)bFqnFQH@X<D:&Hn:-qrdL4HF<gED'O
%_)Gb`?n%TH<0%&R_Jf\m$KNX#`FaM\QZG;tZG7J8\4ZrPKRe%nP<1+5@n#K@8bB!Br5Kl8cN>@Xa5be4M2:J;%02EF,&#pEPnJiX
%Whr@fAm'p`4:,n!lV9u%bN+6JKhT2!2l7R@#`^0E\o%Y6?HLXICAhtTh%&ONK5.OeflK\\jMi_@^Z$H6$@mgQT^r$o87OigY2H/k
%4[t:"Z^AZj>NO-_*,8JYLFIQP%LABiPSnJ**<]'TTP)j^0POLK6%)-B6ZDac\&jYM_B'hgU%B%gNjPd31nJ-N1n6SF_iFN_!`(<J
%;9)U_3`!fJJ!_<lXG>31I^%Z<^M30>/[9*LPV@`ZSsi^-pi%f[ZSTQo;rb;9HR.;&kcB\"&E-XuFp]$,!C?K0>'+@If2[.nQ3%G>
%,Vr$<kAhj;:>Mp$`PN$1$9]B:7=o\SnTO:7G,X!L-Xj1li+t#m"(8.=mUD?6g`_p3pc\uo$[5]pg`E0PF;Y&b8Sk"ej0'+!7b%3^
%%@k8rY?H1G65&b@3"+?Wo<N1Z"M]SFF0*b6OWiL"0fdLG8S(S'L:mFF48K:P*KP=]4Ip>id/89L"nVN^oDGt$J%LH+TqhpBrMA]J
%Vtn!A2*%lMdZgN*LnMr6:-,0+6ArYX*`U(X7NY?:^>V^S3%+$*4qm,\R^eZBF25SrIAVVVb$5s3B:@3[8%-p8a>0V%%ZM>pF:(\D
%QUHN`j_T-J"^d<F/*M2rUe)'Hp_]KO?<Np2]ua%L_Fl:Y'8rf.0O(r1SZK6&4\,UprrYmQIu/48?cO%EGEi3!5u$mB9+T_"L*ic8
%J'cOR,n#HjMJ#+i#*L=o,E<jP&HW5lQS;f"d$l;rrN:jpiSY-7b-iLMeDnq3.W5Zas7?I28K2RN=T$B-i&s0U5u6E@m)B$"2oQE,
%<tcg`"a]g`d=`![iFJq(DH_QYB]ZP9i-#YN/)+."8%)Z2H:n+'c(/R420Cd+Akhan2kU+24ak;\o`&"e28,173-P0"qEMoqQ[ZI@
%em4'O)aD4BO6qL"Kq((^4U(JY19.qAmXO[uSjSWtGVCn(cDdgD8;^&sU*tn^-rMGGV&D3OYW93o%(Ut*ZCAWFl\$a#J7U;EQc,-b
%d@#oV>@39k[Dc_UM^5H?RCkpUi?C$gOST7UML21n%k9p;]$W]g^iHU*[@TK:>`e'<C\>:cj_4N87$f8:PNUmAD3_;1N8bLH_tt;p
%>Yt/@^QSX:`$O-B^8o3H(8Q=G#hL.Hc>eW5dS9Af-/:t9P\hX^U93$AZH7I>?*NuCjI.stD8k5ds7PtbWk]FhDbL6Kf351<1`ABe
%UC91V1Ll5'mI"X<;?b,aePJQ7]O_c3`9KDR>!a*2(>1$1KkkQ_W=Xeti^.F&,kO-&F\n<0C`kOG8[XQPmZLT;DAhf6Uj(VX96s9-
%TBgs@_.MHMU)S=\ZJ>p@aAX(bfL^CUf1u"H+Wm[PC6PB-o.=7oZ;k]bQC=10MLRU&Pe5gr\nP>,@o4\n]ica=.iX7cA"7EPUf*!l
%k[m-gZ\3m_IV_KLr.jDu!L0'XCZ3"t_RV9.Vqpr%Za,EV['Fu:U*-tq=&k`s*7M9"1?7s*eA3F5d$!BtYUkgbps52j:&KF]&@l]k
%-5p$F$9U]2@C^SQ9LZ(ua_`LZ!NY)%8njT8fA[9WaJl2Pk$u<Z$l%&>XXT^MGdI$I[M6S!6`m:BWk:r!1a>HCp-mR8pqUWs*\;u$
%'R.O`5_nu9m3Lq;JcL^L/mj1u\X[-jKWJ>i8MrL_9mi'E05@C.:Y1`RVe2k#^;&$KhU"EU,0;A1dF82*dl4ONr`7^H@Ie$M?0Xt>
%F-G1PO9@=Ee?<2X*4)^dUC=-*g1`G@;Yg:^#fm%WAH)s+K2V_(/Bp@j?mu"ZPY$!9)MT6dL5C>q?6u/0]h7C<G#/(M@pfKfBZaq$
%='-YU7OjeH.TO(J!gj-\])AuH6jcYqcs^u';T[t1AR[MGG3E:+,uXGY>38frC9Jd.ibh`s8[o;O2d[rII!tppXGaVU''R<0H.#R;
%O:N!6l=D>:[VV.(cKt^uHJ,<6\u<Xi4kdq@F+]pT^:CYYTG3<q"P;eDlPad$>bLIu6-eNp/Rj`WO:u>\5uS%$6L^>jBHM3d#0JCo
%8K1V9od*:6h,m3rfQ/lh0a[dAh5d]Eg5Qa!Y31p'?U^oS/NM=jXo>nZ$spa12)<_lR0$3$j9WM1+>[85jeAL$'Fq6b/?=MKkRoBF
%Ue<KlTY>uS"#&b;'+-%HM)*&O*Y;[IS>JYj&"&jG\kd8%%p)Jgc$"q/'C2+Vd1k?"6TscJ'KLSD.jCi"&MesOqXRH+<5F0l#>(U[
%@#J9/N**)j;St#M=@oM#jHO-pRK\O.^h>()`9a?p'4!@uQ:p4Q;#4@-kko3E!,Y&V7_GX=Ht)lWRV>V`'+6SVo<fnbC,-AJ("*g=
%#H2@#P\Q#c[[P]=e@h&5Pq_G[]ioHTdjF<^"+u'/[k'bXrV>V0IDpeVIhQi^6/f\+flG%U"mVsr8OqniY?ccK%8c>k-ndUI%UAL!
%O&/X]H(ir%9+EiFD;c:l>t84A==sudH^98Zo??8LF)3'n<5!Ej-@QW96G"ke)_V'o$FE)Ra7"U"QMOhr'>J\aBJ$3)W$$k`j)oGM
%E]?CFgZn54EZ"h9'B@^*>cFA]mdi&fg4MeY9>@7RF.;N"Qu/$71*O%R1fhm).LRYI?:+`5#C(Y2>-Za,g]DdG"KU=P3r\8&X2/pZ
%_Cd/)+)r-XAS-LNbMl%fWJ.t^9X@5g/SFX<"YN#@!D!eP1g5TfSYV;(,/*_9`l:L8M5sFt`#45Fl90qgjGXIn&=W]8g.\#^R4Kmt
%Rmn+>b]/q:Yo]Q5Ru*W=eUZNd:XA8G/>M,A?1":Z*9;?-/SQmKGh(4H5PgA;,L,//6^K[T2[0jd#Z-Vm)fE;4Css`=I+;i1!P.?_
%NGp;3-3de/oZm<X3sW;)Od]_:jNXh07r;;9MQ9n@cm>RB<.O6mejo/0:9I_?<Mg5>/ktoH!B6Z$]P?0V60<BimR)YLo*O>WY8Xc<
%D3=^&3L]mH2omCko-AKehKlaPm2+*ih'S.\\d9\2>Q:*1e3n^C@\"!VR!p#0Yq\X[H8nDASpBM1^'kl[%EpE,lc8P:F^:Q5Z/>;k
%%;,o)XKdk)bSn*EgfPe:jAO`"9<TRUBkSP"$09Oo+@eOZjW!MQfCdjX?!h)uYPM9%Em>+65,A&h2e_[6)SU-8(\Z==J,/p3:UbiO
%o`"*Q0>/&%b]ea9D('"MEr:?^H%F+Z@jjub7&X=HTm,$>/5hS9a"S6&^,gSA6$!^kpBOcUf?jM4=J?Fg+Q;ib?_QJ,>-::O+cJ-,
%a1H)QU\P[u6j0@F_C9U-o:N`_oh]#Q>$=a["V[-D\eH'oF[NWTQ*aA9gD[46\i$-b2K[+H<C2+FCT2.6efEQ\cqPIjH)i3GlLWSG
%g<`Oph.&hHfV"7$hm'S2D!7aPXssFN]?VV/n'K!A>>RA\RgA\sV7G_&<_!`n7q+c,%Q'LPI0>X*G2dUl6&e^ufNN<oH<^0,_E#<j
%_6ZGc4QZ8E2\NXj^D+XI\1r4385FMK"^]5"lh,[H_SM=r!S7g9*-,m6(3tZ:<55\%O?nq<()c[4]H#"]2hD:5H:neGjL'7mGWPkB
%C&0hXH?-'pUk^Qhkub!War=QbQ6an^<-kVa$N"mOEi"(D8@sgpTJaDTAt5f]pdlG1->o+@C4rEt%N].dZF3*FoTT/&a<8-L92JLM
%cS<2aK&Q05+uWBVWl\]^N85f7]46YP3*^NrBJCO:QFKCEK@@/=cI'-B`e*MQC5:9"!597MPm,mlL7NFlBpHp)`\aP\dB[M"%b%7D
%N#YHo2;6q4>LU561\*u0cSpNsOR"KXD]qOTT4%hm/Du5%<O/87%[8MZL=V7^kS_^:hr>fjd"?8V0TD/HgkQ+_>;g^A&R*>dLl*$P
%:DidB\hjuj%TT"oenG3n<67&C18cA!7-KXe@[Vl@as6U25gA&Xs0k5L19KhkIfIk5+*3iN7@7HR;j:%;G_^4.#(OTSHjIh%-S`fT
%FGcjPQKtB'JUchq1ZWZLme&k`osl@!ZK70q+#_TtNW`;M%]b[\=(GtA`!f$JR$Bjkm)`!#]-Ul?UKRXT3jB)q.Np^`3[#H+YA10!
%qI#3gAYY,-hn&r'XTgfATg@)(Pj9e^Wb:/\[N6/ELS.F!W[Vn[6nP7e#iQR)86QBYBIJTKB\'M"Qm7>_,O;M4or,bgKOBr`_\=h!
%&L)Kp.CP<^L,i_!,7;C$4(6#\.Uh/@ZQ@XTLU]#E#81kX$sQ]FRqq+;Wp:.7[;@mOE7W\>b)Ws7b"H`N?]6:'!;>IBI5mRfYh2nF
%\6:6Kb\Qa9GprsBo`aBh;:_n]\`I4mZWem.pGm8R>Tr/I*Ys`%T;HB7qkeo5YcAQsEX+H/h=0\r,u7CX]!jcuE[NCrK`fs$;Le)$
%d4].Y4Kl9QX4Re$7C@hb'A[qWTek^)o&Q5$PrT1HfF4k/A+Zd,7#1NL0=SdgPc+)Z'^2R7qst5%')*:/90)^Y-i.(S";:U%2L?QU
%pR\kU0_h)Z3TC2,9(eApAa-S-,VHR&UuS[K4BPkS]ih%KM=&$e_N+u:`@O$o72dq=0CBV>(XXB]VD2E3RK:C.-.DFr*;X\Dl<0JL
%Ua2&`^lok<Sp=I9D"nE4$4gQM)2OT(VED76CV8foe._Q[VM<?PK/P/0>VNH3`o<sn:%\)W6(YH?6anlCDY!Y"ZEe;4#dc&Gea/hR
%m@?QMeQ<(BAl'c'_ZXi)?qMtRES_U+#5)Q68WtI(&)Im<XluX\Ma^;pHP3l!]h2lT]ViU*2J>U+ND?bLMkkD`YcI63DC;f7>sNVp
%1$p$D+3,Vsj4KKD;[8IB[5,UP&e`O,Q6hmII>f4:iYA%meHU((R(hN/@8*M*c5oG].LS-8/!?Z`TK5_R,nX'u7!<Wc(:Z+*4Ygpe
%N+DE#57a)mH(QX2Of-9RjP$NmgSeOE+p4jr0Rj1XFCIsn1JjnJ5bsP_KS>X1\6#Ik\OslG&eR5"O4Jna\!El%s)(DCE8[([0+jP2
%VjDq2!]"7L8PPeH/,AXR_YH(Z,M!Ii=,2n4-&mH)^oHUX!Rc(9LU7r]b\7m1=fip2\?!^ud]Y>MV)_AL-Ru;#\`oE[jm[GTG&p:7
%V$t*Ui*@+3r61IPi5hGaERQ`]4[ROf>g$a8BUY5Io*\ATe<dY1*3.m3IW+lFFTcfI%GeBkP!\hUC\ZQ/4WIb_Kc@VGr<nKCIMZ2q
%:hF_3kk=!!p(>^&28Lf2U&);W4<h@b"EaNqDVq+5W3:+kon]d0kN]76^T7@2^AQ271c+'HQHHO`.>"Gt/WtW3H0+8f#l2"nh4m6J
%OiZ@_3YBksWNBc#-P42<94\`pCKU[6@!X9Jqm48'm0n6F5'qte/)2"eI<sMT)Ut;9F#SGH6+ED0mg4&>nQL1S\5rd(8-._o8Z^rN
%=\=(K0]7eP;LR(Sr!dhC))oc@OTmrDJ@6!c>u"J@JlcD]2_qQnfaF"Yg<`pmB8X(M].QAn?g6WY2'>uV$FF>^VefRE(rR?ChQ9%*
%HBH,Y-DP:'Lc?Q"Co?"dWj@8]i_UjnL6Pl/%#m=(1(2VYM7b&<$S^d\UKsq=PfBA?*=!%;&`=SFA?>XrYX1gHN.oG*9W3`$km^0*
%YuftJ<DYrN%h([.i2msb@WI:UraN!n'hS=EXnfR"15e+Lq,T]j>/W*4MR%QjP#;aQTa&Q8T'M]"0GuoO'#pfO0GuRL<XDdU6@CW/
%[N>*I77U7*ILS*MMr$-%a-"^8__0+/GUu_tA140:,8jaGZD"+_n\c#N6W(sYV%-R?H:cc<g/-B=_E\C4TnJndUso5Nih%1q!]`G.
%GS!%<4su4pVnW(0oG4j7Uu%h[l7GPrekpbC>?%\&Db8LPQB\-#OuCQ4*Nljsf2YlK;(1Pe.r.n"A^-]&Ob96f2[q#t9c>$VAC;^*
%XD3LW:e.JQfNL>qb%g]K&P1Bu9f&N52JjWA4X4e^8:[-c5rDG\,GM4Pae;2&Deq"bLp#]LkdH"ZgX+c`M%oT@ZtUW`8s!cgh7B;l
%l&mK/R;(,7"'!#er'!*K,NiG@9ntBqBj1S.&$'-T-+$WY6Ck$T=X1*gOK38TCeatY3H]3k])D[WXGck^g!W_:HW@+lIR=UPcu_!l
%Et220"q4%p=ni>fI7hZ)OP*qBEg<NnZ./j)D@:C<OD,j"Aj5B=dLY/)LA8#rj7$rNo;NZiq)]45CT#O7kW1@n+]DhZRUb/IZW2cY
%2ke/OG,#K7LABeLKFDkp_q08F6Fo=(UKKNZkXKpc7^I!>fF?EVoM[]k\1PA^hg@GrJ,8D:^*Y84I/dCV$ET[a7^0AIo]tr_R2&lW
%gPO7kQ(DlR83^psqDU42RhWdhAY&Q#bC`*7jaEuuZ'^p#l8snj_mMre52uI`MQ]a;6E$L`Zn*igJrO;\K>9'EO-%qJEN>l"4"Mu"
%O[`Q,")7VJ(u4Zk2311AEajO)0"iP%&;M;rgP4!VqbAY0X45J$e^U1Z)QaR5K,#T>PI*YuW'T1i@_T>&*):q7q3ugj[i/kWHZ#rH
%P[H>6./G'DnWFnd#6WMnqfqU`?>Ps;,>5dXVd8!!5@[0]_4?2+F*aHXCZ\1W.=jG^6c<%BRn,?D,54eI"*`9lXe"aSR$+>',U1Fs
%=*(ENp9bMUc*<cX2I8`g[md?Ei!Jb[BeF_!'GMK-2<12@RA:]0L(auGpeTb>ZI@%is4:7p9H.oEC'5$.i@r-)c1d&`P!mb=/]pkj
%/gS"q*CR:V2K=_0#N@-n'QT`%-+4M\l>>MSmHl#qbl=lm?YTY9;I2Tf<==(X-K3\\l#O<0<D52pmQnflQqP?!WbfFaK[`I-5FH4C
%rAl@r`<8%[XL7pRr6]D%Za6+5h5[NrC:@6P>A9?If4$\f@3l;TrA&%E<HTap[%#'l@m1`5ktXX[ZGZ+q7(/Xu\:]F&,TeA\\#D52
%;kN]g+fc-s-ep*eaM`^De@CA]4uJ\e.;cH5-%qQAQpa9SWuJ'1c*/$ZY;Fj:A4mcVnn^Tn&)*0BZ7"4n2A)XHe$Bb:DZ<l'=c2)Q
%Zi.i0)sT)`Q]td8IFA:7%s@Tm(;I&3T.1.S<CeMD_ea=DUd0bDmgQUlM`?G#OV79WQ-HRdLK)V44h))sT<D)0&.&AXKiF-hhC;_,
%";uDi/&ic<&:-kNG/R[AX*Nbtl"?%'MM5[SlCb:h5od<W<ke\fVIC\lUl^&J]I91,ZNZbe5c9l)-]gbt$FI4f9-?D3GJ!WJ\aqJh
%qn)jPK^erh%r\)TeE`CB@>">4MrNt;?CHP_S]?n]iphYqeFrT[`8[PrD/IDT<YlU9k;(dAbGULF'CBs*&AP>"l.bJ9^=GbBgcUJN
%Yt<dqB?09L6"enKDK:C;/QBBu?95M7>B@7_n4#.R3/f2@j`0r&b(D`;A5[?/\T>JS`BKW6d;N&)7&YP@Yq9E?8^iqclPN8-%E`K9
%V9%f^Ph;r%NbF@!/d/W&+e*:P\u>U4%bl7:)<MN"1id/iFViE</GT^3kQq!BVb4S'@NeJ/l9V2.Y3NVd'\[EO4JFD&m*F^p4N%SX
%.:\Z0SMfO@(E/%ma89Z":K-AHl!8^VD;n"o#9SXt.&#^BYU/0X=KG.]$RiWPC]\a=>4OYjA$6b=%lKFI=S(a'c/^L[(D\%E98K[%
%/SR;jGs?M9r^gB$Gs1i"k4Vnu1N,^W5;%_dLZK-OmUUX1jC:;EHDf.o6p\i(Jtk?&f9.:E^GeB<d/6S<q.hClH.f[nc26G&Xp#;L
%:HVPtH)B<RDqp0%p:"@m^1&trFY?+..9Q+TS8$iAC>-=YkTa`n[#<=nhP=3/rH5"1L=C&-orDD.%EQrdU7fc_d/N@kD6J?)BUYBE
%R5EA!k_'`%2crSeDL3lsJN<F:5sR91!P&:d-e`qWm;E1P8]j:K3@(SfiR2t.U'59k:m]3<k$W)"Bmq%qB]`.Y?8`tOgK5G:l;qF?
%i&)Y?m]sLU!-R-6hV\<OoRHf.a"KXp[?&(AIf,p(MKErZc'L67YEn=06(4]C)Ic+\6*;D:.S)lZ($m%Ks7?c#UH\VdBtJcV`\$I=
%B-<o*%3'*]B5UO%e>MOY+%LHQ_iL-*G5[&CNXb:C=fc>c5p"3X*aT"rRoX+^esVR=Au2A#Mg?U^Sd'of:2BN5fWC";deI''=Y<TN
%X8t=``Fp0m:RO+W]EZ4%`q:B+U`/CJ&.IGt!Mdp_D<*Q%8KpGc7(fXR;lER[T<^bJ2'&)sA)JPVEl)Ns7ccdMS`3;GHZ%ZneleVI
%cJ2H#qV-(Wdsq2ueO+b5CIpAK3]C"^D-WV//Od`^>ciD(Xi`<^>,O%DJb5>q,^N0;GBY8F:Ru<@9"JLQrMR\mbT+o<qHQrS/LSJ:
%]l:>4$(,4aLpj0+e!s7.L=9>fK/gi>DrJ\A;c4-Y]a!Qe.T+ZYf-k:M`bQ,ZNE5R[Hr01BYB786Aj&G7/1&E^Mb]A>C"*Tj3ls3Q
%P)\KF4k@7%&a/EU.c=#tSDN\=8#AIhie'ns:c,'JP;XgrUR<1H6s4hmGA*M'o0utHN0GoL<fSlISNu=(M)$4c8H5Y.:^tt*+;4nC
%5pkroq)1"e+$TZ$o3ZtE@^XrTs%O=BBeY'PO0;?TogflHh`=#X:5ajjpqCi=Uea4cLM".nbsgY]STZ!@28fVt@suI&0P0qI1"O^<
%Crq;??l)^i[X9f1.pNRJ\6bo=JjZ*f8SP1#69c6.FZZtH::n\A#QC$$!MV:h1gnj7UocYYP2Vj".'a+Ga*_]UV2oI5o;R^Z5.:!9
%iAb&aYp3Hb]">dnlAg&<<Ih+5L5C=;!e+J7G]%"R[kWtj6]LGg31:SDd+qf7F;Y*Dda'.,"Zl6:Q9Mb9_\S.Og3D@t@m'A&Gik"E
%j-pN!fKd2ard-M0+!37MHY1LqbaA&j`iRLF=e?S<I`.VQ4>LNk+#.BMcY_b+2Y'@sRF2aYDFNo0reN:-IUp[l?!tlQiHT6M4LYn-
%5!LhtIV,&H&RuaX!b9dl)7)N9;4lUA+#7GTB$BtmR.WhdXA=fN`.,doo0^M[T,I6JB$;W:p4aKXR-%P?V'fuSLlWq'llRupIr;#G
%\'[ENbkB8Jm?o^+LQ'oY(pe_5R-g:rgG<@5%iM]<1JN@2Rf4I?N[MhoP0,>(C?&GHV^JJA[e%L`k)JoT)j)l<'4X5rhs1MJ4@Se7
%`s]3ei!CFQh-<_.")\R/an#\J3k#PkKD,_.6B9[V2)P"6ogJamBW:j\8D*"O]`rNn\BB":Um$)M.,eE-DuEE1_'srm\up*?F[tIL
%Pj7O0WD!1ug9?]!Zf8\ETY&T)DIRRV"5=3ZbqphmgVaLF,MZ=3Gm7II7l_b%EhK/(&PErua7MDse[sSDXa"1V*nAAV,C.9l9]hXp
%edc+!_]qX'idmkbbm9:0RAW2A3,\6@Ef&i2O[U@'LO!*NQpi)Cr3l&C@7O;*]i)9DT)k'FR;[RIHN3:qbH&q7Dh%cNq`k&P9CEJr
%kW9%G9l+[NGuQdZ37W.XNZ>M*f^?U<6s:RgjC=u3g!/Qq@un!mjXig+2*W4H&)Mp7Th*K1,@p;(4g/SI\aF1l%P3&5E)a-)k+cUV
%.!QH>JC/dM.?c1M,'YZlJE14a+dm@oddn5`%Vb_V+\qM#l2;ZMEX;nse!E`nSe%U,Gj&`.&d\,#;rNk906'692\*Z^O1VgVrQ2I*
%Jkid9gtgEENb6L:bXF#*l+Y)$+U[^>Y_59PiTu3S,GXocanf9C=S%X^56!pKm)7;!FXgGXWY%P$oOZC+-KSlni:4C<Ou;eKhP4/3
%Ku*NI<F4e?Hh8hp3n7q_\Z!k85+TuB82D^_nb^&c@Ih7rd;"-*!f/XG:/i+Fk1st.ojAC>V63h+Trb)sh+4<-gfq7Hc3R.%0/XT/
%&(.0Wb'HqJ75%f].SE>`=-!RGfP?>@hUFY48I0+N[hka/QWt3;[i>F0'bOc4+A89$cZ)fM/hXc-_lo6C/,Tj\b+C]Fmj3^@!sV^X
%19'*!pS`pp(-C=S<J3u8*+VMJ1aK+1"f+JK('E(g#)*[Z'lpO"fasPHfd.k^_*6*>/=(*^%Sg\WjPDKG@)`f`].qU"o0Sq$`\KL:
%&"'<rI`/<P@FcMS;aV>S$*7Hg&lQ`c<`H2MlkDqGq6D(QHmt2@GJ<Fa#CP4R,@?0<nkB++p1ib8?afdOQYh,cQ`WLCALJ]3!RO]W
%$6T&KN<d2Q`gd)2QNJmDS>3i'*\=;4972t>5N!_OS:sXn:1nV->UGYF#[KOJ2T>sW9QTK.$nhYUS8PE,N;67*f'sA/elcBuXFgW'
%AbO",%eL7`J0Nu-Uh;Db1ST`\bmkCHde9aa#Rg1%ZjR7]r3m&lF$sGf0Hj=R`B0/brID98jZHu,An_OX`]Xq6(LR*O,?n/!5o<g0
%no>o7-1+Q]`kF#2]guNtHr2=J$2DLaNSBi""L4\;U[Q(;\>D]lC1Ob7APO)A`OgkWZaZXmZQSn[-]<+.Pk<#\'Bn&fj%,#DhDS79
%_N>K"D;.TQ3.u^U>Vq,">_3eZTqjioPgD@U=[muher36"fLH9oT+F0=$r'#a;ngu($723i%^ot_:QH1$+-.*4O\+uD\R$<$@kPM[
%]TYaH2t3u'SQ$Q]Z>X7]FIWNN.o4W!XcZ>!4iO1JOLSd'E\E^r9;ss"mb!g@G#C=^cV8JGq0@Y^OVpg6>P0Z*E&A`:!5_E0XPk#e
%GZfbpf0!(>4hXZ*"#4DQpo(Xi_9K#P3)f-OKe#bQS3-7-l4#)NZJgOZ-\lB^>UEE3Dktd4f$L(8JKkJB613J"iK"]U*lOIX@=TWJ
%*ZQ<[N!=3b12-YmRG[]m9cZ*o%PS!^$lofh"VV!fC)o7)7^C%IK[X"-+I3$r<-eS=<br^r'upe@moYJgG(@kaPX&Q'^P0[!eUUt1
%;g@#Yh`(0"nDjP^rKeUUq#$tD)V=`@nbZ\$Q)%`Vk@))iGRU8=I51ip1b2)<+daq3AnU=(`@U`jh3&I61XLX*#1^@M9s9j&.[s^O
%??(O^'r>)"B%X5.VKY\XWrTIZRtVPs`@WtC"<?\%A9h;g>$fdt/MCPS*\8u+/%)Qc2'=j5nhM#j#[Q)-%>(SPk8p`\Q'QA3+T;?u
%rb^16[S#s\95&`WmVkhC4Rd?@6=<Y9hV`9@JbdUr2*u_$CWW9-eQ4<?FI&8c<SlT"H'oE^p)RicMG8.O:rR(+$G-@lY*mPI9`N3R
%'RB">="gVZ=87TFH.c1)RkBtko#+.[^6h8<RPrp=$^BdbiatN^a`KXDc'1WrBcC"ZosLouC8N8:8u.H=_n^f1dMR3OXXq#A,&9(`
%b[t1^3D;0)bp:o7.bTEf.aUq=0YFNH;X61okD$IHeGtkQ$h$04^3MYLnntNW/IEb!7_D(KckOqec:@6@9\p5cK5Rd3/GNs)`!do[
%)t<u/^+I"dhfS8\c[YrQmJC,e_NdL'r[r]j](&Gg#*Ob<\o>j1-kQ`"9e)GOkCf'a-LFFK@CC[&rhGj'CE@H8b8_O2BNhRm%g53u
%\"Nbp-H=T#`1'roiY26bb.rTqN_VZ*Cafh"s';QK\Kj@Z_"k/46,]=6$2o4)Vi\5BE9#-LCK":oN34Tu73."c$>gD'5#ThJH/'>g
%XG?S?O]$>7.n/rL>La,*5iQZLTWa`Gk_3$OdRU_'B<+L.eP8jODbgR.K=EMGMS)3TB12`E'^pPC-RHpZ?c2ZROm=)+*:gO8>X_G"
%QSdYbUh1Ac7gC,,?`]Sh%D?=LeLWgu2g5l1$3&?B?;S_jT0SGh3L!o[pq9++dk3;W7:UU'00!'\[[0@6LfA@0,$_"2OBi[(RLLu4
%7(<A@8M#s"I&BFLER:k^U:g^2lJb5%@-J5hg.?LJ`$EMlLO=2O.kEh(n>7D\_+09hR1[A,D0[FV9qn/gV?<B:kR>bm%!nV^+It(q
%Pa`V)UNnb-cm>PM9m%8:k#`_Rerk:29/B(;,QN->4lC\mktdf\=T<&CHu84R,_VQU0%thZO2LZ\_d.Dp9Z?T;DcH@GE=!Ph9ZlL9
%VWgOR4PhWE7;@M.A!-IZ+p;h\K&Lu%(8Wcoe3)#om>?nD)nJpB.!ZKmUI>j-.0K&hCd/kr1h8<94Wc^sQT2)Uqc;g`[tGo:N\#Zf
%@+s,'VAEh9ftNQ%_mu.05J]R1%'uT`a81n+QEDYsc5[D+(ffh)j*R'b<(cME'HN(QlFt%T,sBVS2`kji`s8GU7*mc,G`)9C;EX*0
%_U'cG^;f.T4V)\eJr2tPCb*PL^tULWo0X-%9K&a=)Rl$Ti'2:8R\@I+[<--,a+:)D:jHZn2tqS?-J><AP:f^H?toTq%aJ>PRL56p
%EOAZ$kM02:dP,@S]hH)FagsT/7,^Z[S+3uj*ML&SCIjKCEn`:YlHp0H$Y'?5f-J/QMu/AW/1n-4)J,.&c-idVQm#gPd244SdV7`H
%-S9JZ?2B(0IH`RF6s!HYTqp[3`$&-VW'SfK>'WR$a>Ihu>T\.5_hIa3GeAH'%J["%I"/hZmpBK$<u"NTh$TcKLfN/._I#?83E&dj
%]mNkM>K?A=GH<#mrJ15"**+5<0g7R3_d^+.EiWMLeR8$r-RYY)M*e74H$Y]%Nc2mXnf)O`A24HUI-P@2UamuV[B^H++Wg":@M``m
%<@BoXa@`2mB'Y+4Xul8t:\m<+8PHDs8oe]oCP#%Pf*XM^)E@h:a&U"*e]0<(99,UBcamFTUlEVs-(Ql!Gl%$CdRNc4hR,mEMG)!.
%4sRe]h&[]giSJeC]3k=)JC_,`Mpe7Mq"8T'PfHJ7j-N,(Zkf_R]4m@kT+SpN-i4cc=:gnP'DXZBe?Lu:N]<%jL;%%CXBR!4>+8]G
%=,g*S%L_[ObCJ#h$1"$:^.3bFIBAWHgk9%#<3n4BWeX37\-qM8Z"N_LC*8ci:Tii#19^oY>!o;rMHh@GlKoQN\$[>d<#umc,D1XJ
%[S%FX%8J%*#IDMf0hH^+/Y^?/D,&r^*QdRH>"UEL8kX89W[4PD?CG8i'L8S;",WVDZ%?N<UP"9fO@2mlfKq!9adno4K#qmq&)1R\
%QZsIiL4lYB[7!F/B<e2i7Q.5tXYjgeR35FIN2Rq3VEj0e"G("j(3X/qV9r[uG/IDX]&>GHTROd[#%tg*Dtj[ad1uj?l\<_(H.CP+
%1dEZ2OT@Pa?\8Q+5EP@(4PgMZ1N?f9TJIS:Nt`]nK:57:/W@S@MAH>V%ejmZSP#=IjhC13EkfWkh(RdO6@EqkZ$#;QGG3c14ntG>
%ND!H^5g@I>:d.VpB<$$h^928ZBm#Obf+g(:YH4O^cr8q^7ha)1/[TWUZ"c0Q],]@FIZX&MXMg8b')^Q5c/QrN$t7#fEfq/F-"%35
%ch>&^@9]j@MSr*)jG(\d(71cHOe07=8E5sudaq571srCX,YEBZ,-$&'!s.1Xa_&</'mmAnYF/2g1hFpngd"mj4!h&K\qm=:d?#k3
%9&6i5NiXA!XZHG7X8F:<!-1qVmWCG(bo=>EFui)5A)J2"fe[o?FO\uJE.AS<Gt%(%E0E!*_c2cMS%MseisV(W9r4s*=lc#_hXGNf
%ri^u&+=JEs0UEXf,dSahaX]st4M>DVLQtLNG_TSKN3dM$L6:3o*B3(Sk,LK!in&D&46sg^5<NRfn-M+Z',4&&ZI;_Lon!M#Kh54W
%P5r5S1L+BrC*;(OB1$\IkS(>;9TR4;=U?9mb3:f2jdC#toD@onIR\ZU\NbQB8oJg%q-&8i^M#`^N]I,7a!,hWTgBl'C3h?ig-gdt
%H4X?e4o\UKH4WC%A,IfSAPZm%.!\\lD%B(cS71ok+2Wt#f2^eYas>u4PU*XIJkWMON^B#WYrd2TVq@p6U+IZtSDg).i<GA)ai,4I
%k>M4STMo1QSr9k6ZCFMi\L3N[eP5/?MN(<b1:9=q<M`=7L&)&5_k'3pK7qCJ?Vg_G`^F9C7F2$7asjkrF&u-XOT/,`%%rkhi8-r"
%)AnQMe,ofq%B%egI1p[BS[F@]])4*/C!MO5pGToj:8EmCVO_.#N"^h1R*ECC8iN+Fb'b2PbbS&ea'oX?K`bj?)r\FLG[<3-5[J=l
%[j!tU2b7LZMGUX7;kH(THBp]oIlpe^m+!V=ddSjH+,X)P(Z_ll'ior]@PJ*Vp<cu.+[]Pt""tG_a6L^&OVmRHf6!^QYmA8bh%?\i
%'$[`9aZ<J``^"sUCHPZ_p?LNn-?/mrBKS&d(d=1D-Ba9r%m8um,_%ZV)o%Zm5HMn\h4XRQU5,l*@\P/EMb-fFokcFGU4"bYP39eP
%NgG)kNUPTLSPtQ_`"[Z)9_8`sNt:5ZU8?UR,+!"'5Z$hEYsadD%DX;hs+*d0J]8Z>ooSmd"9g,!jlum0#YU3#R<Np]95rh'XX/;#
%^98j:pSYDEknB\+/Wh5a9D!shCP`VQf+Q1gX<fn;:MYe.XRBp2:=6PY,\[D1a0d2Wj+(tu8[Ci0BeHJ5/APasUlG"YeVR]h7bk.l
%FcP&gG=$CbH7`Uc.N5g'.<N!BpE=,ErMo;\orGgWcrmhaBT+6AOI#VgqKQ,&EXL/7Hp"LbJ2,X8@2@c<)!MbI_$gZ^s,*KhN2'dX
%JbZ-[:_!)3Dd$i@("]WKH>nPWL@JYYmX]g/]cgIGnYrkCN6fO%+=+D7Vfe;\ON=\EUoX5nLJohl]nXY@WWN&uNY?>iq)Q3)Ym0?\
%!p9!O7;TU@]c1R5mZE!>i#c:''d_OaKq"2;1hVODg>%<nVD@B_Wm&B#&(c""Vf"aW<*-P`*6P/LN.DTS1g[dm`/;^_Af^pgD'C2j
%O^S@Ci1hbeV8,]l*m5MRT!n,$hs//F5CWY(Vgn^+k:^(2f@Re"Wr[Y&/eKh@2+S][gP^J?.F@2GdV0tKUNeh5LC2fhmb&*roK"MO
%E^p'h<39UAEb%,)=cN9;3cJ>T[_t%b[]b9bEOpXUTA=o9EjO(*UFE7AhYT$Ua`dZe*[r`7<\Y;LE=s!bHu7C)jG=AX_Z`X(1,[k7
%IgVu,c$b[@G;MHbNOjA]E1:l#+DlOWhu0$"kC<C!c[Yfhe(88ZJG:^1H8n8AG">tPYsWh4IO*[cMk%ZIdZcZU]O&cOKG[A3?o^[S
%m3/Ha@(l&k$;W^mFPB-apGX`=R<EFp$TPg0opi3Y\?6:^iPMLEpY?qjV4cV:KI+9N61S#_giS!!o)_8lQQ_esU**U87K\k+2C)[4
%CBed(7f[_,2([sTj<=!V$'lIB>0-'&^>3dbIUg^K+TZT""*NUZjjAUJ=5%+n%P_mVl$^5P28"_)h':c><n4m?*h2R0n)8Lea*U:g
%cNnoEV.XU\7_EBP>MoE1+',U&*Yq=jn,RJh(as>k_'H'F(*hk2Vneo4N5IHpF+hV@'/V]deID,SF,=d0Q2E=911s+;;l/,hE>dlS
%7tL<L3X>&Fo.ECbl/9_ga^ainGj\riq&=Tu@:!DMX7s$A^:"<p]VYnWeKe;k,#-Cll,'+ch8P&5&$@nKf>IK34S:SfX>ciVYf%<7
%WEGb&<DXS]fY/NX(EY9RHgL(f^5gjt)'Pm/A@Fs91a\u\Y^1Kd[6O;kZ`cOa[?&ki4s'UTkKS=n^?Tko>BG]'(F:S4K]KB^gRU8]
%F*]RdI3#(X/;SUfg_/JGrlWibUqi8a,lf`rGaHcZJB0[eP[\,R]Q**:f.&*)4^qF/Ri&Ep!)^S$^jD#o[u]=$pW3p3`#+V-!@$D0
%e,)L7'oJr64=-eZl?R4sqp!CiiE2s0Ol*^uGdZVJeuP.F2=&n`Fik6L.X!GCYEkunRXV?o@)hCrKXA#XO0FIC&BH[jEX[rk;Rj0:
%7&*1%S*uOZqm=pMp/P/?C'89(bAF@sY"H'0)l1>()%-ol^:2Z/q1-ln`lXh+K4i?q'.SQ]O29djl;7K^OG8V<gN%MS;"$qUCkd%h
%@%Y@d!pM1q]=G8bX6Kk>b^,^L4fQ\]jM+38mXP*4?ba?Al23jW<?T"3Lu3l?MTbdHpq27D=%b=L2prHIGc^4eX>qPNEQefdbVtsk
%WhI-g?Yin-4f6JdPSE'0]OZA;WO_<glQof=QXR'N]`s<Qd?(lAIPS@O[&G]cl.tU(!P.X-Wk=cig9:l@Ut_VPR'-;&Y`ulYZl-UD
%F^!1#oNH$70@r&$>BOe0]lmUVI+)]7R+ZJL(AbMm]?!f9$$DT:<JTkKL%h-6o6TUi$f.ac2sOFP%8G@^M7Ri)Kl6P0NP9OFCc./J
%pXi[:>;plp"s-DeVe0t\*=>@DEF$X:8cWq>Rm>]!2pTD"o%f.UIWqqTd5[-oME)bY$R?ngiRLJ]2nZrpGaq?\c(/@68Vu>u52ta%
%q6p,-$&rafO;<8nTh:G0J5^V(>?ZHhM]C,=>=VTX^+p&-mjt:7PRXXGqTpHN[?K]A+6\Q80_$(mh:I.F-=Z_uo^8XQe:$SHolo^c
%)>Prq2];4a'.PVTL2Pg.;Rc)'d/CCq^Mcq3eCT8SWk)>#4m>[ZWePD>m(V0CUq1]`L$lG5me>K$YB=1hY9*#+E8a1Vp#`a9F7iFj
%d?"I*1&^lF\ENhLJ])uEKBKkTmD)f7hchrlLMip?C4HrJ-f-21RWh+:d,*6LfT!FA3($Vc6R"d,1,QUoG4PW1(gh-5R"7YH,@5m]
%D@>oOH_g@2TE"^['c$Q8f6kl%/'i!3RZT*-Z95J4F``3)T9R.f79MGpRXS'uMIf:`jY+cV#1?P+pYR-Gc"`?LmbCtkRUBiS+dp,\
%ONO*H9OK>*R*N8l94j'uWL^@E./H`nTMh^AD(R'g?8sEs5+EW2$hSI:bQ9L<6]Xb<.=na$iDL+)\ZQi&[@CbcOKp@KgR&]4"pIC&
%pHe"7iC8X6e,*7X%1AD_Br:[P^sK'[s,7D%K_i^>dMb;>-.7Q*/!T'\Y#56-3A0b]:+QFQI?l(2]o$2D;%Au6k$bIDodX=M1DkC/
%dMFd/`j3SUMcp9%aHWt"$DFk^#5K<h+]W1d*O+,hnC4ADSK>1<^%8]e:WsCm9j:"HLJfVs3[a""QJhp/</OtoWslKdE#$`'E=ko-
%cl\+e;GP3_c'3%coq*I<JK4/Hg+[_!I?e0P^YY.QZVXf#$L%&[^3'\1Q#-01d#3=4'@UW-pp_pf%!eM,9hHEW[C*u<I*miuI5Rg`
%@M$M8XBtH/]k^@_c-a//\V?1:MeZ$gPrBDHQ9$E'pq?%9!1q<g$!FXCm!m=Cj(`hma6\L[jUGAAa27cQ6TV7c\NGUsQ'E7N#kHe+
%\`=/N%eIN.(AUHpYVO#C/N.1">?B72[EfVo7abT0X!uueTQu6$R>PR'XHD@1`%:P+BPPXtcjh(h0jY5NPe4BhrI:4,l>\#,qKUD)
%#^\YS5:"5!e3j,iItKMX=XC[:ekgiIdoplt=\hT1]r>qNhYcEKIJW2$0=1?+YBf@*MqWe0XoYF'*I?mql([TqDC^,A2G<@iY&1u8
%m<%M,:(>$Q#qsF%htft#C"4eAn/`EM%=K(4QQRV#e&pe&fsr4NQaRgObLPiOG!i)2r-H05dLq:?r#b(O>HR:C[=-Gj"uEQZ!LT7/
%rD)NaM*)7_Q\c&)n05X*Bp0ZoM5J\Ud"rtG+uJ&A`=nB0YNDWk^<hV3o2#^G.C?kLdh+Q\i&:XE=R8lI<H9F)FI6_\n3gZ/iY_g@
%X7m!9oQO?6_rU3eO=8p+3$t.W&b0;l2n9h]j:O'7U;r4O<m;QKAMbl\]i7&3&1KEAQp380)G_KM[RqQbAU6h=$tHl^S8_>5B7Ymt
%K2BZ+2kAqo@Ib(OB`VQa?no"AaX]PZ4^5@ElH=k#G!V,hV])\DqJ&B\6i/iq!GY0S0QM]?14==J(QkR$)+AHmapJ@iV%,^/C']Y2
%(a$LtRn>0cD'&JN<PA%>."C0'IFi9/2%gfch?Rd0.L>(C`qJd=RGNChGl8AlC.hN\?lUF%RrRSI&1HdVAF>\8frh`!W2!E7g>h)n
%G-UJQ=t`b=gBqOKV]ICiB*e$<"5R!a`hfq\0K%;N5k>S0!/K2r#7f1fj-):uIml;P\/\L@7A4A)+Fjl]ifii!oH.st)$EEM(:N:Y
%IAU16L4/AqI>JP;I,E(cGQB:JqN*$UXsTFN=p/;k?2S\]JgsccecTWWR/4SG\cW4QV[f!E6,DJ;C[Pf(#m@hSl^r4hbli)-'C;Se
%$\u=%%&a]+M9ln70iUR:<oQ3diX+[V#Z0u^Wap7>VZIL*1_)[eGp@6<?4e_,g4_qf]EJVIFid-Hrtud*#k_$t4cXM:SgeiBpG\(+
%q>Ch2)O=:8r7-Z;W**jQJRlfEHR:g]d!3@X>%7qu*A;(iS1$CNS`4=:G05Gr:,aGD/i8W.R%u5HcB@O7)<K]""VS#5m<2YJ]"=E8
%E:99()0FO)fH@>.R+pdl;]%@@HYB@ea+eop)f"Qm:cfa<C,7\WLLG+9J`__t]'1me1`&SOcGs/\9E$c7CMbUWET$[tkH55Jb['b8
%Ni@Ajf[T;*8Z'46DJr1";.c9tf6PPn5cN8M.M0D*8qbpE-2/C?CUH++-XPV)cJM97l$A8:SBq=*h%CsEH.u*")HAP&[>X0jpr-\0
%4@?r#I6V!$n^OD[E:dYGF;l&GY7[M3RT^.P\3Yckd!@tI:(rNUOU4I5-57bp:dFMadS9c_[>W-"qkd?b6c4?U#](a2eTl/F"cERh
%T$,&K\'nC@1=kaGqbe2i[5docPR9#RI4V4I[T7K;EeZB\Oht9Yr.GX'rXe*]L^u)jbX-1:fB,ae+R;%Z[\RAMZ:AU]S`VCA<R1XY
%=\hX:2Lo>O0W?EIMbX&iH"(66XQNLARY!eo/lpPCi,K,kLgWMB0t>E`O9Tsnm(objN/b"=CrU%`go)BJ:-9I;7MiA!W8(rRd62f;
%m)[C^k%6aC@)gY?:-35>n?erkkS7t(='8/qo+%(sbNUd+3F2KVS1ZX].soVr/]Y$CK74]][l>+KQonOc-BGWTjW/o@*leOf>2BEf
%a8'2O+P'^B'qVHL?e__G0D&'rI02[X`+*.t9h\r!h=kJ>aMIpsKOrb)e^jKpT*FrbJ,&Ykci<sA:Z)1LoUeAGr9=6/^4#k:LEHQg
%ktdrOp\!/*%mPLAq+j6So_J4P^]!pD.1r3VnGD,CrI=cA^\bYC#7_-$*W~>
%AI9_PrivateDataEnd
